{"version":3,"file":"index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wBAAwB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,eAAe;AACfgCAAgC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA,OAAO;AACP;AACA;AACA,MAAM;AACN,yCAAyC;AACzC;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,wCAAwC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,kBAAkB,uBAAuB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,GAAG,IAAI;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,2BAA2B;AAC3B,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,cAAc;AACrD;AACA;AACA;AACA;AACA,yBAAyB,mBAAmB;AAC5C,iCAAiC,eAAe;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,mDAAmD;AACnD;AACA,uDAAuD;AACvD;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK,IAAI;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK,IAAI;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,wBAAwB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,yCAAyC;AAChF;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,MAAM,kCAAkC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,UAAU,IAAI;AACd;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,UAAU;AACV,OAAO;AACP;AACA,QAAQ,IAAI;AACZ;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,2CAA2C;AAC3C;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,MAAM,IAAI;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,UAAU;AACV;AACA;AACA,SAAS;AACT;AACA,QAAQ;AACR;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,UAAU;AACV;AACA;AACA,SAAS;AACT;AACA,QAAQ;AACR;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,yBAAyB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpyBAAyB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,SAAS;AACT;AACA,yBAAyB;AACzB,yBAAyB;AACzB;AACA;AACA,MAAM;AACN;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,SAAS;AACT;AACA,yBAAyB;AACzB,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,yBAAyB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,yBAAyB;AACzB,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,kCAAkC;AAClC;AACA,UAAU,IAAI;AACd,OAAO;AACP;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,KAAK;AACL;AACA,MAAM,IAAI;AACV;AACA;AACA,QAAQ;AACR,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,KAAK;AACd;AACA;AACA,UAAU;AACV;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,sBAAsB;AACtB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,wBAAwB;AACxB;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,sBAAsB,qCAAqC;AAC3D;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,4BAA4B;AAC5B;AACA,SAAS;AACT;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,yBAAyB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,QAAQ;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,wBAAwB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,SAAS,0DAAY;AACrB;AACA,uBAAuB;AACvB;AACA,KAAK;AACL,aAAa,kEAAoB;AACjC;AACA,KAAK;AACL;AACA;AACA,wBAAwB,mEAAyB;AACjD;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,SAAS,0DAAY;AACrB;AACA,uBAAuB;AACvB;AACA,KAAK;AACL,aAAa,+DAAiB;AAC9B;AACA,KAAK;AACL;AACA;AACA,wBAAwB,mEAAyB;AACjD;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,kEAAwB;AACpD,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,2CAA2C,gDAAmB;AAC9D;AACA,CAAC;AACD,IAAI,IAAqC;AACzC;AACA;AACA,qCAAqC,gDAAmB;AACxD,IAAI,IAAqC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4BAA4B,kCAAK;AACjC;AACA,sBAAsB,sCAAQ;AAC9B;AACA,kBAAkB,kCAAK;AACvB;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,8BAA8B,2CAAc;AAC5C,wCAAwC,2CAAc;AACtD,kCAAkC,2CAAc;AAChD;AACA,GAAG;AACH,kCAAkC,2CAAc;AAChD,oCAAoC,2CAAc;AAClD,wCAAwC,2CAAc;AACtD,oBAAoB,yCAAY;AAChC;AACA;AACA,IAAI;AACJ,6BAA6B,8CAAiB;AAC9C;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH,iBAAiB,8CAAiB;AAClC;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA,EAAE,kDAAqB;AACvB;AACA;AACA,EAAE,4CAAe;AACjB;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE,4CAAe;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE,4CAAe;AACjB;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE,4CAAe;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH,EAAE,4CAAe;AACjB,IAAI,KAAqC,GAAG,4DAAc,uMAAuM,CAAM;AACvQ;AACA;AACA,GAAG;AACH,kBAAkB,0CAAa;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA,0BAA0B,0CAAa;AACvC;AACA;AACA;AACA;AACA,GAAG;AACH,qBAAqB,0CAAa;AAClC;AACA,GAAG;AACH,uBAAuB,MAAM;AAC7B;AACA;AACA;AACA;AACA;AACA,sBAAsB,gDAAmB,CAAC,2CAAc,qBAAqB,gDAAmB,CAAC,kEAAwB;AACzH;AACA,GAAG,eAAe,gDAAmB,CAAC,uEAA6B;AACnE;AACA,GAAG,eAAe,gDAAmB;AACrC;AACA,GAAG,eAAe,gDAAmB;AACrC;AACA,GAAG,eAAe,gDAAmB,CAAC,gDAAM;AAC5C;AACA;AACA;AACA;AACA;AACA,GAAG,wEAAwE,gDAAmB;AAC9F;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,wCAAwC,uCAAU;AAClD;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,SAAS,kEAAoB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,mBAAmB,yCAAY;AAC/B;AACA,yBAAyB,kEAAoB;AAC7C;AACA;AACA,KAAK;AACL;AACA;AACA,8BAA8B,2CAAc;AAC5C;AACA;AACA,GAAG;AACH;AACA;AACA,IAAI;AACJ,iBAAiB,8CAAiB;AAClC;AACA,GAAG;AACH,EAAE,kDAAqB;AACvB,sBAAsB,gDAAmB,CAAC,gDAAM;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,mBAAmB,yCAAY;AAC/B;AACA,yBAAyB,+DAAiB;AAC1C;AACA;AACA,KAAK;AACL;AACA;AACA,8BAA8B,2CAAc;AAC5C;AACA;AACA,GAAG;AACH;AACA;AACA,IAAI;AACJ,iBAAiB,8CAAiB;AAClC;AACA,GAAG;AACH,EAAE,kDAAqB;AACvB,sBAAsB,gDAAmB,CAAC,gDAAM;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,8BAA8B,2CAAc;AAC5C;AACA;AACA,GAAG;AACH;AACA;AACA,IAAI;AACJ,iBAAiB,8CAAiB;AAClC;AACA,GAAG;AACH,EAAE,kDAAqB;AACvB,sBAAsB,gDAAmB,CAAC,gDAAM;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,IAAI,IAAqC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,6CAAgB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,IAAI,EAAE,6CAAgB,CAAC,kEAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,2DAAa;AAChC;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA,QAAQ,KAAqC,GAAG,4DAAc,+IAA+I,CAAM;AACnN;AACA;AACA;AACA;AACA,aAAa,qDAAO;AACpB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,gDAAmB,iBAAiB;AACxC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD,IAAI,IAAqC;AACzC;AACA;AACA;AACA;AACA;AACA,6BAA6B,6CAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,aAAa,6DAAe;AAC5B;AACA,GAAG;AACH,iBAAiB,yDAAW;AAC5B,oBAAoB,6CAAgB,CAAC,uEAA6B;AAClE;AACA;AACA;AACA,IAAI,EAAE,6CAAgB,CAAC,kEAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,2DAAa;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,gDAAmB,kBAAkB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD,IAAI,IAAqC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,6CAAgB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,sBAAsB,gDAAmB;AACzC;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD,IAAI,IAAqC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,IAAI,IAAqC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC;AACzC;AACA;AACA;AACA;AACA;AACA,CAAC,kDAAkD;AACnD;AACA;AACA;AACA;AACA;AACA,YAAY,6CAAgB,CAAC,kEAAwB;AACrD,SAAS,KAAqC,GAAG,8DAAgB,+CAA+C,CAAuB;AACvI;AACA;AACA;AACA,cAAc,6CAAgB,CAAC,uEAA6B;AAC5D,WAAW,KAAqC,GAAG,8DAAgB,+CAA+C,CAAuB;AACzI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,wBAAwB;AAC5B,iBAAiB,yDAAW;AAC5B,iBAAiB,yDAAW;AAC5B,aAAa,6DAAe;AAC5B;AACA,GAAG;AACH,SAAS,8CAAiB;AAC1B;AACA;AACA;AACA;AACA,8DAA8D,wDAAU,eAAe,wDAAU;AACjG;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,KAAqC,GAAG,4DAAc,qSAAqS,CAAM;AACnW,+BAA+B,yCAAY;AAC3C,8BAA8B,yCAAY;AAC1C,iBAAiB,yDAAW;AAC5B,qBAAqB,0CAAa;AAClC;AACA;AACA,2CAA2C;AAC3C;AACA,iBAAiB,yDAAW;AAC5B,wBAAwB,8CAAiB;AACzC;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI,EAAE,6CAAgB,CAAC,kEAAwB;AAC/C,uBAAuB,+DAAiB;AACxC,SAAS,8CAAiB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,yBAAyB;AAC7B;AACA;AACA,IAAI,EAAE,6CAAgB,CAAC,kEAAwB;AAC/C,qBAAqB,6CAAgB,CAAC,6DAAmB;AACzD,kBAAkB,KAAqC,GAAG,8DAAgB,8DAA8D,CAAuB;AAC/J;AACA;AACA;AACA,wBAAwB,EAAE,6DAAe;AACzC;AACA,GAAG;AACH;AACA;AACA;AACA,iBAAiB,yDAAW;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,uDAAS;AAChE;AACA,SAAS,wDAAU;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,yBAAyB;AAC7B;AACA;AACA,IAAI;AACJ;AACA,oBAAoB,6CAAgB;AACpC,cAAc,6CAAgB,CAAC,6DAAmB;AAClD;AACA,iBAAiB,KAAqC,GAAG,8DAAgB,8DAA8D,CAAuB;AAC9J,WAAW,KAAqC,GAAG,8DAAgB,2DAA2D,CAAuB;AACrJ,uBAAuB,KAAqC,GAAG,8DAAgB,gFAAgF,CAAuB;AACtL;AACA;AACA;AACA;AACA,oCAAoC,2CAAc;AAClD;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,EAAE,4CAAe;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,aAAa,8CAAiB;AAC9B,eAAe,KAAqC,GAAG,8DAAgB,qDAAqD,CAAuB;AACnJ;AACA,GAAG;AACH;AACA,eAAe,8CAAiB;AAChC,kCAAkC;AAClC;AACA;AACA,KAAK;AACL,GAAG;AACH,oBAAoB,0CAAa;AACjC,mCAAmC,6CAAgB;AACnD,0BAA0B,gDAAmB,kBAAkB;AAC/D;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,QAAQ,IAAqC;AAC7C;AACA;AACA;AACA,GAAG;AACH;AACA,kDAAkD,sDAAY;AAC9D;AACA,8BAA8B,0CAAa;AAC3C;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,yBAAyB;AAC7B;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI,EAAE,6CAAgB,CAAC,kEAAwB;AAC/C,iBAAiB,yDAAW;AAC5B,gBAAgB,wDAAU;AAC1B,mBAAmB,2DAAa;AAChC;AACA,EAAE,4CAAe;AACjB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,cAAc,8CAAiB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,MAAM,KAAqC,GAAG,4DAAc,8HAA8H,CAAM;AAChM;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI,kDAAqB;AACzB;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI,kDAAqB;AACzB;AACA,iBAAiB;AACjB,kBAAkB,2DAAa;AAC/B,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI,kDAAqB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,EAAE,4CAAe;AACjB;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,EAAE,4CAAe;AACjB;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,gBAAgB,wDAAU;AAC1B,EAAE,4CAAe;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,GAAG;AACH,EAAE,4CAAe;AACjB;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,6CAAgB;AAClC,yBAAyB,KAAqC,GAAG,8DAAgB,kLAAkL,CAAuB;AAC1R;AACA;AACA,IAAI;AACJ,aAAa,6DAAe;AAC5B;AACA,GAAG;AACH;AACA;AACA;AACA,oBAAoB,2DAAa;AACjC,iBAAiB,2DAAa;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,uDAAS,qCAAqC,uDAAS;AAChE;AACA;;AAE8hB;AAC9hB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACz6CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC+B;AACqS;AACxG;;AAE5N;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uCAAuC,gDAAmB;AAC1D,IAAI,IAAqC;AACzC;AACA;AACA,4CAA4C,gDAAmB;AAC/D,IAAI,IAAqC;AACzC;AACA;AACA,kCAAkC,gDAAmB;AACrD,IAAI,IAAqC;AACzC;AACA;;AAEA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uCAAuC,gDAAmB;AAC1D,IAAI,IAAqC;AACzC;AACA;AACA,qCAAqC,gDAAmB;AACxD,IAAI,IAAqC;AACzC;AACA;AACA,kCAAkC,gDAAmB;AACrD;AACA;AACA;AACA,CAAC;AACD,IAAI,IAAqC;AACzC;AACA;AACA,uCAAuC,gDAAmB;AAC1D,IAAI,IAAqC;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,wBAAwB;AAC5B,0BAA0B,KAAqC,GAAG,mEAAgB;AAClF;AACA,0EAA0E,CAAuB;AACjG;AACA;AACA;AACA,IAAI,EAAE,6CAAgB;AACtB;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,mDAAmD,4DAAS;AAC5D;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6CAAgB;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,KAAqC,GAAG,mEAAgB;AAClF;AACA,8EAA8E,CAAuB;AACrG,SAAS,6CAAgB;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6CAAgB;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,KAAqC,GAAG,mEAAgB;AAClF;AACA,2EAA2E,CAAuB;AAClG;AACA;AACA,IAAI;AACJ,SAAS,0CAAa,OAAO,4DAAS,UAAU,oEAAiB;AACjE;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,iBAAiB,6CAAgB;AACjC;AACA;AACA;AACA;AACA,IAAI,kDAAqB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,EAAE,6CAAgB;AACtB;AACA;AACA;AACA;AACA;AACA,0BAA0B,KAAqC,GAAG,mEAAgB;AAClF;AACA,8EAA8E,CAAuB;AACrG,0BAA0B,6CAAgB;AAC1C;AACA;AACA;AACA;AACA,IAAI,EAAE,6CAAgB;AACtB;AACA;AACA,IAAI,EAAE,6CAAgB;AACtB;AACA;AACA,IAAI;AACJ,0CAA0C,6EAA0B;AACpE,kBAAkB,yCAAY;AAC9B;AACA;AACA,GAAG;AACH,iBAAiB,8CAAiB;AAClC;AACA;AACA;AACA,IAAI,KAAqC,GAAG,iEAAc,6CAA6C,CAAM;;AAE7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4DAAS;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,4DAAS;AAClE;AACA;AACA,GAAG;AACH;AACA;AACA,mCAAmC,gDAAmB;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6CAAgB;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,6CAAgB;AAC/B;AACA,wBAAwB,gDAAmB;AAC3C;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,EAAE,6CAAgB;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,yBAAyB;AAC7B;AACA;AACA,IAAI,EAAE,6CAAgB;AACtB;AACA;AACA,IAAI,EAAE,6CAAgB;AACtB;AACA;AACA,IAAI;AACJ,0CAA0C,6EAA0B;AACpE,SAAS,0CAAa,OAAO,4DAAS;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B,KAAqC,GAAG,mEAAgB;AAClF;AACA,4EAA4E,CAAuB;AACnG;AACA;AACA,IAAI,EAAE,6CAAgB;AACtB;AACA;AACA,IAAI,EAAE,6CAAgB;AACtB;AACA;AACA;AACA;AACA;AACA,MAAM,IAAqC;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,qCAAqC,UAAU;AAC/C,0CAA0C,cAAc;AACxD;AACA;AACA;AACA;AACA;AACA,6CAA6C,UAAU;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,4DAAS;AACvE,sKAAsK,KAAqC,GAAG,mEAAgB,wXAAwX,CAAuB;AAC7mB;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,8DAAW;AAC3B;AACA,GAAG;AACH,MAAM,IAAqC;AAC3C,IAAI,KAAqC,GAAG,iEAAc,kIAAkI,CAAM;AAClM,IAAI,KAAqC,GAAG,iEAAc,4bAA4b,CAAM;AAC5f;AACA,uFAAuF;AACvF,4BAA4B;AAC5B,cAAc,4DAAS;AACvB;AACA;AACA,oEAAoE,4DAAS;AAC7E;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,wBAAwB,gDAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,wBAAwB,qDAAM;AAC9B;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,gBAAgB,uEAAoB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,IAAqC;AAC3C;AACA,2BAA2B,gDAAmB,CAAC,2CAAc,qBAAqB,gDAAmB,qEAAqE,gDAAmB,yHAAyH,gDAAmB;AACzU;AACA,KAAK,6CAA6C,gDAAmB;AACrE;AACA,KAAK;AACL;AACA,sBAAsB,gDAAmB,CAAC,2CAAc,qBAAqB,gDAAmB,4DAA4D,gDAAmB;AAC/K;AACA;AACA;AACA,GAAG,iCAAiC,gDAAmB;AACvD;AACA,GAAG;AACH;AACA,yCAAyC,gDAAmB;AAC5D,kCAAkC,4CAAe;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,gDAAmB;AAC5E;AACA,KAAK,eAAe,gDAAmB;AACvC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,0BAA0B,6CAAgB;;AAE1C;AACA;AACA;AACA;AACA;AACA,sBAAsB,gDAAmB;AACzC;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB,KAAqC,GAAG,mEAAgB,uGAAuG,CAAuB;AAC/M;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4BAA4B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;AACA,8BAA8B,IAAI;AAClC;AACA;AACA,gCAAgC,gDAAmB;AACnD,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA,0BAA0B,gDAAmB;AAC7C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,oHAAoH,gDAAmB;AACvI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,qBAAqB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0BAA0B;AAC3B;AACA;AACA;AACA;AACA,YAAY,6CAAgB;AAC5B,SAAS,KAAqC,GAAG,mEAAgB,+CAA+C,CAAuB;AACvI;AACA;AACA;AACA,cAAc,6CAAgB;AAC9B,WAAW,KAAqC,GAAG,mEAAgB,+CAA+C,CAAuB;AACzI;AACA;AACA;AACA,cAAc,6CAAgB;AAC9B,WAAW,KAAqC,GAAG,mEAAgB,+CAA+C,CAAuB;AACzI;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,KAAqC,GAAG,mEAAgB,iFAAiF,CAAuB;AACxL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,0CAAa;AACtB;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,SAAS,0CAAa,wBAAwB,oFAAiC;AAC/E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,6CAAgB;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,6CAAgB;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,6CAAgB;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,oCAAoC,2CAAc;AAClD,wBAAwB,8CAAiB;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,kCAAkC;AAClC,kBAAkB,gEAAa;AAC/B,OAAO;AACP,+BAA+B;AAC/B,kBAAkB,gEAAa;AAC/B,OAAO;AACP;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA,EAAE,4CAAe;AACjB;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,EAAE,4CAAe;AACjB;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,yFAAyF,2DAAY;AACrG;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,kBAAkB,yCAAY;AAC9B;AACA;AACA,GAAG;AACH,iBAAiB,8CAAiB;AAClC;AACA;AACA;AACA,IAAI,KAAqC,GAAG,iEAAc,6CAA6C,CAAM;;AAE7G;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,KAAqC,GAAG,iEAAc,mBAAmB,CAAM;AACnF;AACA;;AAEA;AACA;AACA;AACA,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4BAA4B,kCAAK;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,8BAA8B,2CAAc;AAC5C;AACA;AACA,IAAI;AACJ,iBAAiB,8CAAiB;AAClC;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;;AAEH;AACA;AACA,EAAE,kDAAqB;AACvB,EAAE,4CAAe;AACjB,IAAI,KAAqC,GAAG,iEAAc,uMAAuM,CAAM;AACvQ;AACA;AACA,GAAG;AACH,kBAAkB,0CAAa;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA,0BAA0B,0CAAa;AACvC;AACA;AACA;AACA;AACA,GAAG;;AAEH,uBAAuB,MAAM;AAC7B;AACA;AACA;AACA;AACA;AACA,sBAAsB,gDAAmB,CAAC,2CAAc,qBAAqB,gDAAmB;AAChG;AACA,GAAG,eAAe,gDAAmB;AACrC;AACA,GAAG,eAAe,gDAAmB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,wEAAwE,gDAAmB;AAC9F;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,mBAAmB,yCAAY;AAC/B;AACA,yBAAyB,sEAAmB;AAC5C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,8BAA8B,2CAAc;AAC5C;AACA;AACA,GAAG;AACH;AACA;AACA,IAAI;AACJ,iBAAiB,8CAAiB;AAClC;AACA,GAAG;AACH,EAAE,kDAAqB;AACvB,sBAAsB,gDAAmB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,0BAA0B,KAAqC,GAAG,mEAAgB;AAClF;AACA,2EAA2E,CAAuB;AAClG;AACA;AACA;AACA,IAAI,EAAE,6CAAgB;AACtB,EAAE,KAAqC,GAAG,iEAAc,iPAAiP,CAAM;AAC/S;AACA;AACA,IAAI,EAAE,6CAAgB;AACtB;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA,aAAa,4DAAS,KAAK,6EAA0B;AACrD;AACA,EAAE,4CAAe;AACjB;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,KAAqC,GAAG,mEAAgB,uJAAuJ,CAAuB;AACxO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,qDAAM;AAC3B;AACA;AACA;AACA,IAAI;AACJ,2BAA2B,KAAqC,GAAG,mEAAgB,yHAAyH,CAAuB;;AAEnO;AACA;AACA;AACA,0BAA0B,0CAAa;AACvC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA,mBAAmB,4DAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,wBAAwB,0CAAa;AACrC,2BAA2B,gEAAa;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH,EAAE,KAAqC,GAAG,iEAAc,wOAAwO,CAAM;AACtS;AACA;AACA;AACA,sBAAsB,gDAAmB;AACzC;AACA,GAAG,eAAe,gDAAmB;AACrC;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,sBAAsB,gDAAmB;AACzC;AACA;AACA,GAAG,eAAe,gDAAmB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wBAAwB;AACzB,gDAAgD;AAChD,iCAAiC,4CAAe;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA,+CAA+C,GAAG;AAClD;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,wEAAwE,mEAAoB;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,gDAAmB;AAC7C;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,0BAA0B,gDAAmB;AAC7C;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,sBAAsB,gDAAmB,CAAC,2CAAc;AACxD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,2CAAc;AAChB,uBAAuB,iDAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA,yBAAyB,2CAAc;AACvC;AACA;AACA;AACA;AACA,gCAAgC,KAAqC,GAAG,mEAAgB,kMAAkM,CAAuB;AACjT,yDAAyD,KAAqC,GAAG,mEAAgB,sDAAsD,CAAuB;AAC9L;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAqC;AAC7C;AACA,QAAQ,KAAqC,GAAG,iEAAc,kHAAkH,CAAM;AACtL;AACA;AACA;AACA,4BAA4B,gDAAmB;AAC/C;AACA,KAAK;AACL;AACA;AACA,QAAQ,IAAqC;AAC7C;AACA,QAAQ,KAAqC,GAAG,iEAAc,6IAA6I,CAAM;AACjN;AACA;AACA;AACA,2CAA2C,gDAAmB;AAC9D;AACA,KAAK;AACL;AACA;AACA,QAAQ,IAAqC;AAC7C;AACA,QAAQ,KAAqC,GAAG,iEAAc,+HAA+H,CAAM;AACnM;AACA;AACA;AACA,iCAAiC,gDAAmB;AACpD;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS,+DAAY;AACrB;AACA,uBAAuB;AACvB;AACA,KAAK;AACL,aAAa,sEAAmB;AAChC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEy1B;AACz1B;;;;;;;;;;;;;;;AC/6CA;AACA,iEAAe;AACf;AACA,CAAC;;;;;;;;;;;;;;ACHD,iEAAe,cAAc,EAAE,UAAU,EAAE,eAAe,EAAE,gBAAgB,EAAE,UAAU,GAAG,8EAA8E;;;;;;;;;;;;;;ACAzK;AACA;AACA;;AAEA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AChBqC;;AAErC;AACA;AACA;AACA;AACA;AACA,gBAAgB,SAAS;AACzB;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,wDAAQ;AACf;AACA;AACA;AACA;AACA,iEAAe,SAAS;;;;;;;;;;;;;;;;;AC9BS;AACN;AACsB;AACjD;AACA,MAAM,kDAAM;AACZ,WAAW,kDAAM;AACjB;AACA;AACA,+CAA+C,+CAAG;;AAElD;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA,SAAS,8DAAe;AACxB;AACA,iEAAe,EAAE;;;;;;;;;;;;;;;ACxBc;AAC/B;AACA,qCAAqC,iDAAK;AAC1C;AACA,iEAAe,QAAQ;;;;;;;;;;ACJvB;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACN4C;AACI;AACC;AAEzB;;AAExB;AACA;AACA;AACA;;AAEAoN,2DAAQ,CAAE,MAAM;EACZ,MAAMG,IAAI,GAAGF,8DAAU,CACnBG,QAAQ,CAACC,cAAc,CAAE,eAAgB,CAC7C,CAAC;EACDF,IAAI,CAACG,MAAM,CACPlL,oDAAA,CAAC8K,2DAAa;IAACK,QAAQ,EAAC;EAAiB,GACrCnL,oDAAA,CAACjC,4CAAG;IAACqN,GAAG,EAAC;EAAM,CAAE,CACN,CACnB,CAAC;AACL,CAAE,CAAC,C","sources":["webpack://goueg-helloasso/./node_modules/@remix-run/router/dist/router.js","webpack://goueg-helloasso/./src/App.js","webpack://goueg-helloasso/./src/components/FormFamille.js","webpack://goueg-helloasso/./src/components/FormMembre.js","webpack://goueg-helloasso/./src/components/Header.js","webpack://goueg-helloasso/./src/components/Total.js","webpack://goueg-helloasso/./src/datas/paysListe.js","webpack://goueg-helloasso/./src/hooks/useCotisations.js","webpack://goueg-helloasso/./src/hooks/useDatas.js","webpack://goueg-helloasso/./src/hooks/useEmail.js","webpack://goueg-helloasso/./src/hooks/useFetch.js","webpack://goueg-helloasso/./src/hooks/useHello.js","webpack://goueg-helloasso/./src/pages/Cotisation.js","webpack://goueg-helloasso/./src/pages/Errors.js","webpack://goueg-helloasso/./src/pages/Form.js","webpack://goueg-helloasso/./src/pages/Home.js","webpack://goueg-helloasso/./src/pages/Licence.js","webpack://goueg-helloasso/./src/css/style_helloasso.css","webpack://goueg-helloasso/./node_modules/react-router-dom/dist/index.js","webpack://goueg-helloasso/./node_modules/react-router/dist/index.js","webpack://goueg-helloasso/./node_modules/uuid/dist/esm-browser/native.js","webpack://goueg-helloasso/./node_modules/uuid/dist/esm-browser/regex.js","webpack://goueg-helloasso/./node_modules/uuid/dist/esm-browser/rng.js","webpack://goueg-helloasso/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://goueg-helloasso/./node_modules/uuid/dist/esm-browser/v4.js","webpack://goueg-helloasso/./node_modules/uuid/dist/esm-browser/validate.js","webpack://goueg-helloasso/external window \"React\"","webpack://goueg-helloasso/external window \"ReactDOM\"","webpack://goueg-helloasso/external window [\"wp\",\"domReady\"]","webpack://goueg-helloasso/external window [\"wp\",\"element\"]","webpack://goueg-helloasso/webpack/bootstrap","webpack://goueg-helloasso/webpack/runtime/compat get default export","webpack://goueg-helloasso/webpack/runtime/define property getters","webpack://goueg-helloasso/webpack/runtime/hasOwnProperty shorthand","webpack://goueg-helloasso/webpack/runtime/make namespace object","webpack://goueg-helloasso/./src/index.js"],"sourcesContent":["/**\n * @remix-run/router v1.18.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Actions represent the type of change to a location value.\n */\nvar Action;\n(function (Action) {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Action[\"Pop\"] = \"POP\";\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Action[\"Push\"] = \"PUSH\";\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Action[\"Replace\"] = \"REPLACE\";\n})(Action || (Action = {}));\nconst PopStateEventType = \"popstate\";\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nfunction createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    initialEntries = [\"/\"],\n    initialIndex,\n    v5Compat = false\n  } = options;\n  let entries; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) => createMemoryLocation(entry, typeof entry === \"string\" ? null : entry.state, index === 0 ? \"default\" : undefined));\n  let index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);\n  let action = Action.Pop;\n  let listener = null;\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation() {\n    return entries[index];\n  }\n  function createMemoryLocation(to, state, key) {\n    if (state === void 0) {\n      state = null;\n    }\n    let location = createLocation(entries ? getCurrentLocation().pathname : \"/\", to, state, key);\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in memory history: \" + JSON.stringify(to));\n    return location;\n  }\n  function createHref(to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  let history = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\"\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 1\n        });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 0\n        });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta\n        });\n      }\n    },\n    listen(fn) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    }\n  };\n  return history;\n}\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nfunction createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createBrowserLocation(window, globalHistory) {\n    let {\n      pathname,\n      search,\n      hash\n    } = window.location;\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createBrowserHref(window, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);\n}\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nfunction createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createHashLocation(window, globalHistory) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\"\n    } = parsePath(window.location.hash.substr(1));\n    // Hash URL should always have a leading / just like window.location.pathname\n    // does, so if an app ends up at a route like /#something then we add a\n    // leading slash so all of our path-matching behaves the same as if it would\n    // in a browser router.  This is particularly important when there exists a\n    // root splat route (<Route path=\"*\">) since that matches internally against\n    // \"/*\" and we'd expect /#something to 404 in a hash router app.\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createHashHref(window, to) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n  function validateHashLocation(location, to) {\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\");\n  }\n  return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience, so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\n/**\n * Creates a Location object with a unique key from the given Path\n */\nfunction createLocation(current, to, state, key) {\n  if (state === void 0) {\n    state = null;\n  }\n  let location = _extends({\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\"\n  }, typeof to === \"string\" ? parsePath(to) : to, {\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  });\n  return location;\n}\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nfunction createPath(_ref) {\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\"\n  } = _ref;\n  if (search && search !== \"?\") pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\") pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nfunction parsePath(path) {\n  let parsedPath = {};\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n  return parsedPath;\n}\nfunction getUrlBasedHistory(getLocation, createHref, validateLocation, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    window = document.defaultView,\n    v5Compat = false\n  } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener = null;\n  let index = getIndex();\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), \"\");\n  }\n  function getIndex() {\n    let state = globalHistory.state || {\n      idx: null\n    };\n    return state.idx;\n  }\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }\n  function push(to, state) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 1\n      });\n    }\n  }\n  function replace(to, state) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 0\n      });\n    }\n  }\n  function createURL(to) {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base = window.location.origin !== \"null\" ? window.location.origin : window.location.href;\n    let href = typeof to === \"string\" ? to : createPath(to);\n    // Treating this as a full URL will strip any trailing spaces so we need to\n    // pre-encode them since they might be part of a matching splat param from\n    // an ancestor route\n    href = href.replace(/ $/, \"%20\");\n    invariant(base, \"No window.location.(origin|href) available to create URL for href: \" + href);\n    return new URL(href, base);\n  }\n  let history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    }\n  };\n  return history;\n}\n//#endregion\n\nvar ResultType;\n(function (ResultType) {\n  ResultType[\"data\"] = \"data\";\n  ResultType[\"deferred\"] = \"deferred\";\n  ResultType[\"redirect\"] = \"redirect\";\n  ResultType[\"error\"] = \"error\";\n})(ResultType || (ResultType = {}));\nconst immutableRouteKeys = new Set([\"lazy\", \"caseSensitive\", \"path\", \"id\", \"index\", \"children\"]);\nfunction isIndexRoute(route) {\n  return route.index === true;\n}\n// Walk the route tree generating unique IDs where necessary, so we are working\n// solely with AgnosticDataRouteObject's within the Router\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties, parentPath, manifest) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  if (manifest === void 0) {\n    manifest = {};\n  }\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, String(index)];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(route.index !== true || !route.children, \"Cannot specify children on an index route\");\n    invariant(!manifest[id], \"Found a route id collision on id \\\"\" + id + \"\\\".  Route \" + \"id's must be globally unique within Data Router usages\");\n    if (isIndexRoute(route)) {\n      let indexRoute = _extends({}, route, mapRouteProperties(route), {\n        id\n      });\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = _extends({}, route, mapRouteProperties(route), {\n        id,\n        children: undefined\n      });\n      manifest[id] = pathOrLayoutRoute;\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(route.children, mapRouteProperties, treePath, manifest);\n      }\n      return pathOrLayoutRoute;\n    }\n  });\n}\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\nfunction matchRoutes(routes, locationArg, basename) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n  return matchRoutesImpl(routes, locationArg, basename, false);\n}\nfunction matchRoutesImpl(routes, locationArg, basename, allowPartial) {\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n  if (pathname == null) {\n    return null;\n  }\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won't be\n    // encoded here but there also shouldn't be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    let decoded = decodePath(pathname);\n    matches = matchRouteBranch(branches[i], decoded, allowPartial);\n  }\n  return matches;\n}\nfunction convertRouteMatchToUiMatch(match, loaderData) {\n  let {\n    route,\n    pathname,\n    params\n  } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle\n  };\n}\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n  if (branches === void 0) {\n    branches = [];\n  }\n  if (parentsMeta === void 0) {\n    parentsMeta = [];\n  }\n  if (parentPath === void 0) {\n    parentPath = \"\";\n  }\n  let flattenRoute = (route, index, relativePath) => {\n    let meta = {\n      relativePath: relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(meta.relativePath.startsWith(parentPath), \"Absolute route path \\\"\" + meta.relativePath + \"\\\" nested under path \" + (\"\\\"\" + parentPath + \"\\\" is not valid. An absolute child route path \") + \"must start with the combined path of all its parent routes.\");\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n    // Add the children before adding this route to the array, so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n      // Our types know better, but runtime JS may not!\n      // @ts-expect-error\n      route.index !== true, \"Index routes must not have child routes. Please remove \" + (\"all child routes from route path \\\"\" + path + \"\\\".\"));\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n  routes.forEach((route, index) => {\n    var _route$path;\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !((_route$path = route.path) != null && _route$path.includes(\"?\"))) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n  return branches;\n}\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path) {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n  let [first, ...rest] = segments;\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  let result = [];\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children, so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explode _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(...restExploded.map(subpath => subpath === \"\" ? required : [required, subpath].join(\"/\")));\n  // Then, if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map(exploded => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded);\n}\nfunction rankRouteBranches(branches) {\n  branches.sort((a, b) => a.score !== b.score ? b.score - a.score // Higher score first\n  : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));\n}\nconst paramRe = /^:[\\w-]+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = s => s === \"*\";\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue), initialScore);\n}\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ?\n  // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] :\n  // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\nfunction matchRouteBranch(branch, pathname, allowPartial) {\n  if (allowPartial === void 0) {\n    allowPartial = false;\n  }\n  let {\n    routesMeta\n  } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end\n    }, remainingPathname);\n    let route = meta.route;\n    if (!match && end && allowPartial && !routesMeta[routesMeta.length - 1].route.index) {\n      match = matchPath({\n        path: meta.relativePath,\n        caseSensitive: meta.caseSensitive,\n        end: false\n      }, remainingPathname);\n    }\n    if (!match) {\n      return null;\n    }\n    Object.assign(matchedParams, match.params);\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route\n    });\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n  return matches;\n}\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\nfunction generatePath(originalPath, params) {\n  if (params === void 0) {\n    params = {};\n  }\n  let path = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(false, \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n    path = path.replace(/\\*$/, \"/*\");\n  }\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n  const stringify = p => p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n  const segments = path.split(/\\/+/).map((segment, index, array) => {\n    const isLastSegment = index === array.length - 1;\n    // only apply the splat if it's the last segment\n    if (isLastSegment && segment === \"*\") {\n      const star = \"*\";\n      // Apply the splat\n      return stringify(params[star]);\n    }\n    const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\n    if (keyMatch) {\n      const [, key, optional] = keyMatch;\n      let param = params[key];\n      invariant(optional === \"?\" || param != null, \"Missing \\\":\" + key + \"\\\" param\");\n      return stringify(param);\n    }\n    // Remove any optional markers from optional static segments\n    return segment.replace(/\\?$/g, \"\");\n  })\n  // Remove empty segments\n  .filter(segment => !!segment);\n  return prefix + segments.join(\"/\");\n}\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n  let [matcher, compiledParams] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = compiledParams.reduce((memo, _ref, index) => {\n    let {\n      paramName,\n      isOptional\n    } = _ref;\n    // We need to compute the pathnameBase here using the raw splat value\n    // instead of using params[\"*\"] later because it will be decoded then\n    if (paramName === \"*\") {\n      let splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n    const value = captureGroups[index];\n    if (isOptional && !value) {\n      memo[paramName] = undefined;\n    } else {\n      memo[paramName] = (value || \"\").replace(/%2F/g, \"/\");\n    }\n    return memo;\n  }, {});\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\nfunction compilePath(path, caseSensitive, end) {\n  if (caseSensitive === void 0) {\n    caseSensitive = false;\n  }\n  if (end === void 0) {\n    end = true;\n  }\n  warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n  let params = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n  .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n  .replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n  .replace(/\\/:([\\w-]+)(\\?)?/g, (_, paramName, isOptional) => {\n    params.push({\n      paramName,\n      isOptional: isOptional != null\n    });\n    return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n  });\n  if (path.endsWith(\"*\")) {\n    params.push({\n      paramName: \"*\"\n    });\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" // Already matched the initial /, just match the rest\n    : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex, so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else ;\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n  return [matcher, params];\n}\nfunction decodePath(value) {\n  try {\n    return value.split(\"/\").map(v => decodeURIComponent(v).replace(/\\//g, \"%2F\")).join(\"/\");\n  } catch (error) {\n    warning(false, \"The URL path \\\"\" + value + \"\\\" could not be decoded because it is is a \" + \"malformed URL segment. This is probably due to a bad percent \" + (\"encoding (\" + error + \").\"));\n    return value;\n  }\n}\n/**\n * @private\n */\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n  return pathname.slice(startIndex) || \"/\";\n}\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\nfunction resolvePath(to, fromPathname) {\n  if (fromPathname === void 0) {\n    fromPathname = \"/\";\n  }\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(segment => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\nfunction getInvalidPathError(char, field, dest, path) {\n  return \"Cannot include a '\" + char + \"' character in a manually specified \" + (\"`to.\" + field + \"` field [\" + JSON.stringify(path) + \"].  Please separate it out to the \") + (\"`to.\" + dest + \"` field. Alternatively you may provide the full path as \") + \"a string in <Link to=\\\"...\\\"> and the router will parse it for you.\";\n}\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nfunction getPathContributingMatches(matches) {\n  return matches.filter((match, index) => index === 0 || match.route.path && match.route.path.length > 0);\n}\n// Return the array of pathnames for the current route matches - used to\n// generate the routePathnames input for resolveTo()\nfunction getResolveToMatches(matches, v7_relativeSplatPath) {\n  let pathMatches = getPathContributingMatches(matches);\n  // When v7_relativeSplatPath is enabled, use the full pathname for the leaf\n  // match so we include splat values for \".\" links.  See:\n  // https://github.com/remix-run/react-router/issues/11052#issuecomment-1836589329\n  if (v7_relativeSplatPath) {\n    return pathMatches.map((match, idx) => idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase);\n  }\n  return pathMatches.map(match => match.pathnameBase);\n}\n/**\n * @private\n */\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {\n  if (isPathRelative === void 0) {\n    isPathRelative = false;\n  }\n  let to;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = _extends({}, toArg);\n    invariant(!to.pathname || !to.pathname.includes(\"?\"), getInvalidPathError(\"?\", \"pathname\", \"search\", to));\n    invariant(!to.pathname || !to.pathname.includes(\"#\"), getInvalidPathError(\"#\", \"pathname\", \"hash\", to));\n    invariant(!to.search || !to.search.includes(\"#\"), getInvalidPathError(\"#\", \"search\", \"hash\", to));\n  }\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from;\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n    // With relative=\"route\" (the default), each leading .. segment means\n    // \"go up one route\" instead of \"go up one URL segment\".  This is a key\n    // difference from how <a href> works and a major reason we call this a\n    // \"to\" value instead of a \"href\".\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n      to.pathname = toSegments.join(\"/\");\n    }\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n  let path = resolvePath(to, from);\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n  return path;\n}\n/**\n * @private\n */\nfunction getToPathname(to) {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || to.pathname === \"\" ? \"/\" : typeof to === \"string\" ? parsePath(to).pathname : to.pathname;\n}\n/**\n * @private\n */\nconst joinPaths = paths => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n/**\n * @private\n */\nconst normalizePathname = pathname => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n/**\n * @private\n */\nconst normalizeSearch = search => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\n/**\n * @private\n */\nconst normalizeHash = hash => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nconst json = function json(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n  return new Response(JSON.stringify(data), _extends({}, responseInit, {\n    headers\n  }));\n};\nclass AbortedDeferredError extends Error {}\nclass DeferredData {\n  constructor(data, responseInit) {\n    this.pendingKeysSet = new Set();\n    this.subscribers = new Set();\n    this.deferredKeys = [];\n    invariant(data && typeof data === \"object\" && !Array.isArray(data), \"defer() only accepts plain objects\");\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject;\n    this.abortPromise = new Promise((_, r) => reject = r);\n    this.controller = new AbortController();\n    let onAbort = () => reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () => this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n    this.data = Object.entries(data).reduce((acc, _ref2) => {\n      let [key, value] = _ref2;\n      return Object.assign(acc, {\n        [key]: this.trackPromise(key, value)\n      });\n    }, {});\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n    this.init = responseInit;\n  }\n  trackPromise(key, value) {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise = Promise.race([value, this.abortPromise]).then(data => this.onSettle(promise, key, undefined, data), error => this.onSettle(promise, key, error));\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n    Object.defineProperty(promise, \"_tracked\", {\n      get: () => true\n    });\n    return promise;\n  }\n  onSettle(promise, key, error, data) {\n    if (this.controller.signal.aborted && error instanceof AbortedDeferredError) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      return Promise.reject(error);\n    }\n    this.pendingKeysSet.delete(key);\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error(\"Deferred data for key \\\"\" + key + \"\\\" resolved/rejected with `undefined`, \" + \"you must resolve/reject with a value or `null`.\");\n      Object.defineProperty(promise, \"_error\", {\n        get: () => undefinedError\n      });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n    if (data === undefined) {\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n    Object.defineProperty(promise, \"_data\", {\n      get: () => data\n    });\n    this.emit(false, key);\n    return data;\n  }\n  emit(aborted, settledKey) {\n    this.subscribers.forEach(subscriber => subscriber(aborted, settledKey));\n  }\n  subscribe(fn) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n  async resolveData(signal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise(resolve => {\n        this.subscribe(aborted => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n  get unwrappedData() {\n    invariant(this.data !== null && this.done, \"Can only unwrap data on initialized and settled deferreds\");\n    return Object.entries(this.data).reduce((acc, _ref3) => {\n      let [key, value] = _ref3;\n      return Object.assign(acc, {\n        [key]: unwrapTrackedPromise(value)\n      });\n    }, {});\n  }\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\nfunction isTrackedPromise(value) {\n  return value instanceof Promise && value._tracked === true;\n}\nfunction unwrapTrackedPromise(value) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\nconst defer = function defer(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  return new DeferredData(data, responseInit);\n};\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirect = function redirect(url, init) {\n  if (init === void 0) {\n    init = 302;\n  }\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = {\n      status: responseInit\n    };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, _extends({}, responseInit, {\n    headers\n  }));\n};\n/**\n * A redirect response that will force a document reload to the new location.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirectDocument = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n *\n * We don't export the class for public use since it's an implementation\n * detail, but we export the interface above so folks can build their own\n * abstractions around instances via isRouteErrorResponse()\n */\nclass ErrorResponseImpl {\n  constructor(status, statusText, data, internal) {\n    if (internal === void 0) {\n      internal = false;\n    }\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\n\nconst validMutationMethodsArr = [\"post\", \"put\", \"patch\", \"delete\"];\nconst validMutationMethods = new Set(validMutationMethodsArr);\nconst validRequestMethodsArr = [\"get\", ...validMutationMethodsArr];\nconst validRequestMethods = new Set(validRequestMethodsArr);\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\nconst IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_FETCHER = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined\n};\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nconst defaultMapRouteProperties = route => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\n});\nconst TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a router and listen to history POP navigations\n */\nfunction createRouter(init) {\n  const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : undefined;\n  const isBrowser = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n  invariant(init.routes.length > 0, \"You must provide a non-empty routes array to createRouter\");\n  let mapRouteProperties;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Routes keyed by ID\n  let manifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(init.routes, mapRouteProperties, undefined, manifest);\n  let inFlightDataRoutes;\n  let basename = init.basename || \"/\";\n  let dataStrategyImpl = init.unstable_dataStrategy || defaultDataStrategy;\n  let patchRoutesOnMissImpl = init.unstable_patchRoutesOnMiss;\n  // Config driven behavior flags\n  let future = _extends({\n    v7_fetcherPersist: false,\n    v7_normalizeFormMethod: false,\n    v7_partialHydration: false,\n    v7_prependBasename: false,\n    v7_relativeSplatPath: false,\n    v7_skipActionErrorRevalidation: false\n  }, init.future);\n  // Cleanup function for history\n  let unlistenHistory = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors = null;\n  if (initialMatches == null && !patchRoutesOnMissImpl) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = {\n      [route.id]: error\n    };\n  }\n  // In SPA apps, if the user provided a patchRoutesOnMiss implementation and\n  // our initial match is a splat route, clear them out so we run through lazy\n  // discovery on hydration in case there's a more accurate lazy route match.\n  // In SSR apps (with `hydrationData`), we expect that the server will send\n  // up the proper matched routes so we don't want to run lazy discovery on\n  // initial hydration and want to hydrate into the splat route.\n  if (initialMatches && patchRoutesOnMissImpl && !init.hydrationData) {\n    let fogOfWar = checkFogOfWar(initialMatches, dataRoutes, init.history.location.pathname);\n    if (fogOfWar.active) {\n      initialMatches = null;\n    }\n  }\n  let initialized;\n  if (!initialMatches) {\n    // We need to run patchRoutesOnMiss in initialize()\n    initialized = false;\n    initialMatches = [];\n  } else if (initialMatches.some(m => m.route.lazy)) {\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    initialized = false;\n  } else if (!initialMatches.some(m => m.route.loader)) {\n    // If we've got no loaders to run, then we're good to go\n    initialized = true;\n  } else if (future.v7_partialHydration) {\n    // If partial hydration is enabled, we're initialized so long as we were\n    // provided with hydrationData for every route with a loader, and no loaders\n    // were marked for explicit hydration\n    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n    let errors = init.hydrationData ? init.hydrationData.errors : null;\n    let isRouteInitialized = m => {\n      // No loader, nothing to initialize\n      if (!m.route.loader) {\n        return true;\n      }\n      // Explicitly opting-in to running on hydration\n      if (typeof m.route.loader === \"function\" && m.route.loader.hydrate === true) {\n        return false;\n      }\n      // Otherwise, initialized if hydrated with data or an error\n      return loaderData && loaderData[m.route.id] !== undefined || errors && errors[m.route.id] !== undefined;\n    };\n    // If errors exist, don't consider routes below the boundary\n    if (errors) {\n      let idx = initialMatches.findIndex(m => errors[m.route.id] !== undefined);\n      initialized = initialMatches.slice(0, idx + 1).every(isRouteInitialized);\n    } else {\n      initialized = initialMatches.every(isRouteInitialized);\n    }\n  } else {\n    // Without partial hydration - we're initialized if we were provided any\n    // hydrationData - which is expected to be complete\n    initialized = init.hydrationData != null;\n  }\n  let router;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map()\n  };\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction = Action.Pop;\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n  // AbortController for the active navigation\n  let pendingNavigationController;\n  // Should the current navigation enable document.startViewTransition?\n  let pendingViewTransitionEnabled = false;\n  // Store applied view transitions so we can apply them on POP\n  let appliedViewTransitions = new Map();\n  // Cleanup function for persisting applied transitions to sessionStorage\n  let removePageHideEventListener = null;\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes = [];\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads = [];\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map();\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map();\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set();\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map();\n  // Ref-count mounted fetchers so we know when it's ok to clean them up\n  let activeFetchers = new Map();\n  // Fetchers that have requested a delete when using v7_fetcherPersist,\n  // they'll be officially removed after they return to idle\n  let deletedFetchers = new Set();\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map();\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map();\n  // Map of pending patchRoutesOnMiss() promises (keyed by path/matches) so\n  // that we only kick them off once for a given combo\n  let pendingPatchRoutes = new Map();\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let ignoreNextHistoryUpdate = false;\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(_ref => {\n      let {\n        action: historyAction,\n        location,\n        delta\n      } = _ref;\n      // Ignore this event if it was just us resetting the URL from a\n      // blocked POP navigation\n      if (ignoreNextHistoryUpdate) {\n        ignoreNextHistoryUpdate = false;\n        return;\n      }\n      warning(blockerFunctions.size === 0 || delta != null, \"You are trying to use a blocker on a POP navigation to a location \" + \"that was not created by @remix-run/router. This will fail silently in \" + \"production. This can happen if you are navigating outside the router \" + \"via `window.history.pushState`/`window.location.hash` instead of using \" + \"router navigation APIs.  This can also happen if you are using \" + \"createHashRouter and the user manually changes the URL.\");\n      let blockerKey = shouldBlockNavigation({\n        currentLocation: state.location,\n        nextLocation: location,\n        historyAction\n      });\n      if (blockerKey && delta != null) {\n        // Restore the URL to match the current UI, but don't update router state\n        ignoreNextHistoryUpdate = true;\n        init.history.go(delta * -1);\n        // Put the blocker into a blocked state\n        updateBlocker(blockerKey, {\n          state: \"blocked\",\n          location,\n          proceed() {\n            updateBlocker(blockerKey, {\n              state: \"proceeding\",\n              proceed: undefined,\n              reset: undefined,\n              location\n            });\n            // Re-do the same POP navigation we just blocked\n            init.history.go(delta);\n          },\n          reset() {\n            let blockers = new Map(state.blockers);\n            blockers.set(blockerKey, IDLE_BLOCKER);\n            updateState({\n              blockers\n            });\n          }\n        });\n        return;\n      }\n      return startNavigation(historyAction, location);\n    });\n    if (isBrowser) {\n      // FIXME: This feels gross.  How can we cleanup the lines between\n      // scrollRestoration/appliedTransitions persistance?\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () => routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(Action.Pop, state.location, {\n        initialHydration: true\n      });\n    }\n    return router;\n  }\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n  // Subscribe to state updates for the router\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n  // Update our state and notify the calling context of the change\n  function updateState(newState, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    state = _extends({}, state, newState);\n    // Prep fetcher cleanup so we can tell the UI which fetcher data entries\n    // can be removed\n    let completedFetchers = [];\n    let deletedFetchersKeys = [];\n    if (future.v7_fetcherPersist) {\n      state.fetchers.forEach((fetcher, key) => {\n        if (fetcher.state === \"idle\") {\n          if (deletedFetchers.has(key)) {\n            // Unmounted from the UI and can be totally removed\n            deletedFetchersKeys.push(key);\n          } else {\n            // Returned to idle but still mounted in the UI, so semi-remains for\n            // revalidations and such\n            completedFetchers.push(key);\n          }\n        }\n      });\n    }\n    // Iterate over a local copy so that if flushSync is used and we end up\n    // removing and adding a new subscriber due to the useCallback dependencies,\n    // we don't get ourselves into a loop calling the new subscriber immediately\n    [...subscribers].forEach(subscriber => subscriber(state, {\n      deletedFetchers: deletedFetchersKeys,\n      unstable_viewTransitionOpts: opts.viewTransitionOpts,\n      unstable_flushSync: opts.flushSync === true\n    }));\n    // Remove idle fetchers from state since we only care about in-flight fetchers.\n    if (future.v7_fetcherPersist) {\n      completedFetchers.forEach(key => state.fetchers.delete(key));\n      deletedFetchersKeys.forEach(key => deleteFetcher(key));\n    }\n  }\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(location, newState, _temp) {\n    var _location$state, _location$state2;\n    let {\n      flushSync\n    } = _temp === void 0 ? {} : _temp;\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && ((_location$state = location.state) == null ? void 0 : _location$state._isRedirect) !== true;\n    let actionData;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData;\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && ((_location$state2 = location.state) == null ? void 0 : _location$state2._isRedirect) !== true;\n    // Commit any in-flight routes at the end of the HMR revalidation \"navigation\"\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n    if (isUninterruptedRevalidation) ; else if (pendingAction === Action.Pop) ; else if (pendingAction === Action.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === Action.Replace) {\n      init.history.replace(location, location.state);\n    }\n    let viewTransitionOpts;\n    // On POP, enable transitions if they were enabled on the original navigation\n    if (pendingAction === Action.Pop) {\n      // Forward takes precedence so they behave like the original navigation\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        // If we don't have a previous forward nav, assume we're popping back to\n        // the new location and enable if that location previously enabled\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      // Store the applied transition on PUSH/REPLACE\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = new Set([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location\n      };\n    }\n    updateState(_extends({}, newState, {\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),\n      preventScrollReset,\n      blockers\n    }), {\n      viewTransitionOpts,\n      flushSync: flushSync === true\n    });\n    // Reset stateful navigation vars\n    pendingAction = Action.Pop;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  }\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, to, future.v7_relativeSplatPath, opts == null ? void 0 : opts.fromRouteId, opts == null ? void 0 : opts.relative);\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, false, normalizedPath, opts);\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = _extends({}, nextLocation, init.history.encodeLocation(nextLocation));\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n    let historyAction = Action.Push;\n    if (userReplace === true) {\n      historyAction = Action.Replace;\n    } else if (userReplace === false) ; else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = Action.Replace;\n    }\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : undefined;\n    let flushSync = (opts && opts.unstable_flushSync) === true;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey, IDLE_BLOCKER);\n          updateState({\n            blockers\n          });\n        }\n      });\n      return;\n    }\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.unstable_viewTransition,\n      flushSync\n    });\n  }\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({\n      revalidation: \"loading\"\n    });\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return;\n    }\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(pendingAction || state.historyAction, state.navigation.location, {\n      overrideNavigation: state.navigation\n    });\n  }\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(historyAction, location, opts) {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename);\n    let flushSync = (opts && opts.flushSync) === true;\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let {\n        error,\n        notFoundMatches,\n        route\n      } = handleNavigational404(location.pathname);\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error\n        }\n      }, {\n        flushSync\n      });\n      return;\n    }\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial load will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, {\n        matches\n      }, {\n        flushSync\n      });\n      return;\n    }\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission);\n    let pendingActionResult;\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingActionResult = [findNearestBoundary(matches).route.id, {\n        type: ResultType.error,\n        error: opts.pendingError\n      }];\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      // Call action if we received an action submission\n      let actionResult = await handleAction(request, location, opts.submission, matches, fogOfWar.active, {\n        replace: opts.replace,\n        flushSync\n      });\n      if (actionResult.shortCircuited) {\n        return;\n      }\n      // If we received a 404 from handleAction, it's because we couldn't lazily\n      // discover the destination route so we don't want to call loaders\n      if (actionResult.pendingActionResult) {\n        let [routeId, result] = actionResult.pendingActionResult;\n        if (isErrorResult(result) && isRouteErrorResponse(result.error) && result.error.status === 404) {\n          pendingNavigationController = null;\n          completeNavigation(location, {\n            matches: actionResult.matches,\n            loaderData: {},\n            errors: {\n              [routeId]: result.error\n            }\n          });\n          return;\n        }\n      }\n      matches = actionResult.matches || matches;\n      pendingActionResult = actionResult.pendingActionResult;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync = false;\n      // No need to do fog of war matching again on loader execution\n      fogOfWar.active = false;\n      // Create a GET request for the loaders\n      request = createClientSideRequest(init.history, request.url, request.signal);\n    }\n    // Call loaders\n    let {\n      shortCircuited,\n      matches: updatedMatches,\n      loaderData,\n      errors\n    } = await handleLoaders(request, location, matches, fogOfWar.active, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, opts && opts.initialHydration === true, flushSync, pendingActionResult);\n    if (shortCircuited) {\n      return;\n    }\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n    completeNavigation(location, _extends({\n      matches: updatedMatches || matches\n    }, getActionDataForCommit(pendingActionResult), {\n      loaderData,\n      errors\n    }));\n  }\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(request, location, submission, matches, isFogOfWar, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    interruptActiveLoads();\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({\n      navigation\n    }, {\n      flushSync: opts.flushSync === true\n    });\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);\n      if (discoverResult.type === \"aborted\") {\n        return {\n          shortCircuited: true\n        };\n      } else if (discoverResult.type === \"error\") {\n        let {\n          boundaryId,\n          error\n        } = handleDiscoverRouteError(location.pathname, discoverResult);\n        return {\n          matches: discoverResult.partialMatches,\n          pendingActionResult: [boundaryId, {\n            type: ResultType.error,\n            error\n          }]\n        };\n      } else if (!discoverResult.matches) {\n        let {\n          notFoundMatches,\n          error,\n          route\n        } = handleNavigational404(location.pathname);\n        return {\n          matches: notFoundMatches,\n          pendingActionResult: [route.id, {\n            type: ResultType.error,\n            error\n          }]\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    // Call our action and get the result\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      let results = await callDataStrategy(\"action\", request, [actionMatch], matches);\n      result = results[0];\n      if (request.signal.aborted) {\n        return {\n          shortCircuited: true\n        };\n      }\n    }\n    if (isRedirectResult(result)) {\n      let replace;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        let location = normalizeRedirectLocation(result.response.headers.get(\"Location\"), new URL(request.url), basename);\n        replace = location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(request, result, {\n        submission,\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      // By default, all submissions to the current location are REPLACE\n      // navigations, but if the action threw an error that'll be rendered in\n      // an errorElement, we fall back to PUSH so that the user can use the\n      // back button to get back to the pre-submission form location to try\n      // again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = Action.Push;\n      }\n      return {\n        matches,\n        pendingActionResult: [boundaryMatch.route.id, result]\n      };\n    }\n    return {\n      matches,\n      pendingActionResult: [actionMatch.route.id, result]\n    };\n  }\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(request, location, matches, isFogOfWar, overrideNavigation, submission, fetcherSubmission, replace, initialHydration, flushSync, pendingActionResult) {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    // If we have partialHydration enabled, then don't update the state for the\n    // initial data load since it's not a \"navigation\"\n    let shouldUpdateNavigationState = !isUninterruptedRevalidation && (!future.v7_partialHydration || !initialHydration);\n    // When fog of war is enabled, we enter our `loading` state earlier so we\n    // can discover new routes during the `loading` state.  We skip this if\n    // we've already run actions since we would have done our matching already.\n    // If the children() function threw then, we want to proceed with the\n    // partial matches it discovered.\n    if (isFogOfWar) {\n      if (shouldUpdateNavigationState) {\n        let actionData = getUpdatedActionData(pendingActionResult);\n        updateState(_extends({\n          navigation: loadingNavigation\n        }, actionData !== undefined ? {\n          actionData\n        } : {}), {\n          flushSync\n        });\n      }\n      let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);\n      if (discoverResult.type === \"aborted\") {\n        return {\n          shortCircuited: true\n        };\n      } else if (discoverResult.type === \"error\") {\n        let {\n          boundaryId,\n          error\n        } = handleDiscoverRouteError(location.pathname, discoverResult);\n        return {\n          matches: discoverResult.partialMatches,\n          loaderData: {},\n          errors: {\n            [boundaryId]: error\n          }\n        };\n      } else if (!discoverResult.matches) {\n        let {\n          error,\n          notFoundMatches,\n          route\n        } = handleNavigational404(location.pathname);\n        return {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error\n          }\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, activeSubmission, location, future.v7_partialHydration && initialHydration === true, future.v7_skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult);\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(routeId => !(matches && matches.some(m => m.route.id === routeId)) || matchesToLoad && matchesToLoad.some(m => m.route.id === routeId));\n    pendingNavigationLoadId = ++incrementingLoadId;\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(location, _extends({\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null\n      }, getActionDataForCommit(pendingActionResult), updatedFetchers ? {\n        fetchers: new Map(state.fetchers)\n      } : {}), {\n        flushSync\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (shouldUpdateNavigationState) {\n      let updates = {};\n      if (!isFogOfWar) {\n        // Only update navigation/actionNData if we didn't already do it above\n        updates.navigation = loadingNavigation;\n        let actionData = getUpdatedActionData(pendingActionResult);\n        if (actionData !== undefined) {\n          updates.actionData = actionData;\n        }\n      }\n      if (revalidatingFetchers.length > 0) {\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\n      }\n      updateState(updates, {\n        flushSync\n      });\n    }\n    revalidatingFetchers.forEach(rf => {\n      if (fetchControllers.has(rf.key)) {\n        abortFetcher(rf.key);\n      }\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(f => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    let {\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, request);\n    if (request.signal.aborted) {\n      return {\n        shortCircuited: true\n      };\n    }\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    revalidatingFetchers.forEach(rf => fetchControllers.delete(rf.key));\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect([...loaderResults, ...fetcherResults]);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey = revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      await startRedirectNavigation(request, redirect.result, {\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, matchesToLoad, loaderResults, pendingActionResult, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe(aborted => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n    // During partial hydration, preserve SSR errors for routes that don't re-run\n    if (future.v7_partialHydration && initialHydration && state.errors) {\n      Object.entries(state.errors).filter(_ref2 => {\n        let [id] = _ref2;\n        return !matchesToLoad.some(m => m.route.id === id);\n      }).forEach(_ref3 => {\n        let [routeId, error] = _ref3;\n        errors = Object.assign(errors || {}, {\n          [routeId]: error\n        });\n      });\n    }\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n    return _extends({\n      matches,\n      loaderData,\n      errors\n    }, shouldUpdateFetchers ? {\n      fetchers: new Map(state.fetchers)\n    } : {});\n  }\n  function getUpdatedActionData(pendingActionResult) {\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\n      // This is cast to `any` currently because `RouteData`uses any and it\n      // would be a breaking change to use any.\n      // TODO: v7 - change `RouteData` to use `unknown` instead of `any`\n      return {\n        [pendingActionResult[0]]: pendingActionResult[1].data\n      };\n    } else if (state.actionData) {\n      if (Object.keys(state.actionData).length === 0) {\n        return null;\n      } else {\n        return state.actionData;\n      }\n    }\n  }\n  function getUpdatedRevalidatingFetchers(revalidatingFetchers) {\n    revalidatingFetchers.forEach(rf => {\n      let fetcher = state.fetchers.get(rf.key);\n      let revalidatingFetcher = getLoadingFetcher(undefined, fetcher ? fetcher.data : undefined);\n      state.fetchers.set(rf.key, revalidatingFetcher);\n    });\n    return new Map(state.fetchers);\n  }\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(key, routeId, href, opts) {\n    if (isServer) {\n      throw new Error(\"router.fetch() was called during the server render, but it shouldn't be. \" + \"You are likely calling a useFetcher() method in the body of your component. \" + \"Try moving it to a useEffect or a callback.\");\n    }\n    if (fetchControllers.has(key)) abortFetcher(key);\n    let flushSync = (opts && opts.unstable_flushSync) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, href, future.v7_relativeSplatPath, routeId, opts == null ? void 0 : opts.relative);\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    if (!matches) {\n      setFetcherError(key, routeId, getInternalRouterError(404, {\n        pathname: normalizedPath\n      }), {\n        flushSync\n      });\n      return;\n    }\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, true, normalizedPath, opts);\n    if (error) {\n      setFetcherError(key, routeId, error, {\n        flushSync\n      });\n      return;\n    }\n    let match = getTargetMatch(matches, path);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, fogOfWar.active, flushSync, submission);\n      return;\n    }\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, {\n      routeId,\n      path\n    });\n    handleFetcherLoader(key, routeId, path, match, matches, fogOfWar.active, flushSync, submission);\n  }\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, isFogOfWar, flushSync, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n    function detectAndHandle405Error(m) {\n      if (!m.route.action && !m.route.lazy) {\n        let error = getInternalRouterError(405, {\n          method: submission.formMethod,\n          pathname: path,\n          routeId: routeId\n        });\n        setFetcherError(key, routeId, error, {\n          flushSync\n        });\n        return true;\n      }\n      return false;\n    }\n    if (!isFogOfWar && detectAndHandle405Error(match)) {\n      return;\n    }\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(requestMatches, path, fetchRequest.signal);\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        let {\n          error\n        } = handleDiscoverRouteError(path, discoverResult);\n        setFetcherError(key, routeId, error, {\n          flushSync\n        });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(key, routeId, getInternalRouterError(404, {\n          pathname: path\n        }), {\n          flushSync\n        });\n        return;\n      } else {\n        requestMatches = discoverResult.matches;\n        match = getTargetMatch(requestMatches, path);\n        if (detectAndHandle405Error(match)) {\n          return;\n        }\n      }\n    }\n    // Call the action for the fetcher\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let actionResults = await callDataStrategy(\"action\", fetchRequest, [match], requestMatches);\n    let actionResult = actionResults[0];\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n    // When using v7_fetcherPersist, we don't want errors bubbling up to the UI\n    // or redirects processed for unmounted fetchers so we just revert them to\n    // idle\n    if (future.v7_fetcherPersist && deletedFetchers.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      }\n      // Let SuccessResult's fall through for revalidation\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          // A new navigation was kicked off after our action started, so that\n          // should take precedence over this redirect navigation.  We already\n          // set isRevalidationRequired so all loaders for the new route should\n          // fire unless opted out via shouldRevalidate\n          updateFetcherState(key, getDoneFetcher(undefined));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(fetchRequest, actionResult, {\n            fetcherSubmission: submission\n          });\n        }\n      }\n      // Process any non-redirect errors thrown\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, submission, nextLocation, false, future.v7_skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, [match.route.id, actionResult]);\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers.filter(rf => rf.key !== key).forEach(rf => {\n      let staleKey = rf.key;\n      let existingFetcher = state.fetchers.get(staleKey);\n      let revalidatingFetcher = getLoadingFetcher(undefined, existingFetcher ? existingFetcher.data : undefined);\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      if (fetchControllers.has(staleKey)) {\n        abortFetcher(staleKey);\n      }\n      if (rf.controller) {\n        fetchControllers.set(staleKey, rf.controller);\n      }\n    });\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(rf => abortFetcher(rf.key));\n    abortController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    let {\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);\n    if (abortController.signal.aborted) {\n      return;\n    }\n    abortController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach(r => fetchControllers.delete(r.key));\n    let redirect = findRedirect([...loaderResults, ...fetcherResults]);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey = revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      return startRedirectNavigation(revalidationRequest, redirect.result);\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, state.matches, matchesToLoad, loaderResults, undefined, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n    abortStaleFetchLoads(loadId);\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors),\n        fetchers: new Map(state.fetchers)\n      });\n      isRevalidationRequired = false;\n    }\n  }\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(key, routeId, path, match, matches, isFogOfWar, flushSync, submission) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getLoadingFetcher(submission, existingFetcher ? existingFetcher.data : undefined), {\n      flushSync\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal);\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(matches, path, fetchRequest.signal);\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        let {\n          error\n        } = handleDiscoverRouteError(path, discoverResult);\n        setFetcherError(key, routeId, error, {\n          flushSync\n        });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(key, routeId, getInternalRouterError(404, {\n          pathname: path\n        }), {\n          flushSync\n        });\n        return;\n      } else {\n        matches = discoverResult.matches;\n        match = getTargetMatch(matches, path);\n      }\n    }\n    // Call the loader for this fetcher route match\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let results = await callDataStrategy(\"loader\", fetchRequest, [match], matches);\n    let result = results[0];\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result = (await resolveDeferredData(result, fetchRequest.signal, true)) || result;\n    }\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n    // We don't want errors bubbling up or redirects followed for unmounted\n    // fetchers, so short circuit here if it was removed from the UI\n    if (deletedFetchers.has(key)) {\n      updateFetcherState(key, getDoneFetcher(undefined));\n      return;\n    }\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(fetchRequest, result);\n        return;\n      }\n    }\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n    // Put the fetcher back into an idle state\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(request, redirect, _temp2) {\n    let {\n      submission,\n      fetcherSubmission,\n      replace\n    } = _temp2 === void 0 ? {} : _temp2;\n    if (redirect.response.headers.has(\"X-Remix-Revalidate\")) {\n      isRevalidationRequired = true;\n    }\n    let location = redirect.response.headers.get(\"Location\");\n    invariant(location, \"Expected a Location header on the redirect Response\");\n    location = normalizeRedirectLocation(location, new URL(request.url), basename);\n    let redirectLocation = createLocation(state.location, location, {\n      _isRedirect: true\n    });\n    if (isBrowser) {\n      let isDocumentReload = false;\n      if (redirect.response.headers.has(\"X-Remix-Reload-Document\")) {\n        // Hard reload if the response contained X-Remix-Reload-Document\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(location)) {\n        const url = init.history.createURL(location);\n        isDocumentReload =\n        // Hard reload if it's an absolute URL to a new origin\n        url.origin !== routerWindow.location.origin ||\n        // Hard reload if it's an absolute URL that does not match our basename\n        stripBasename(url.pathname, basename) == null;\n      }\n      if (isDocumentReload) {\n        if (replace) {\n          routerWindow.location.replace(location);\n        } else {\n          routerWindow.location.assign(location);\n        }\n        return;\n      }\n    }\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n    let redirectHistoryAction = replace === true ? Action.Replace : Action.Push;\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let {\n      formMethod,\n      formAction,\n      formEncType\n    } = state.navigation;\n    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    let activeSubmission = submission || fetcherSubmission;\n    if (redirectPreserveMethodStatusCodes.has(redirect.response.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: _extends({}, activeSubmission, {\n          formAction: location\n        }),\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset\n      });\n    } else {\n      // If we have a navigation submission, we will preserve it through the\n      // redirect navigation\n      let overrideNavigation = getLoadingNavigation(redirectLocation, submission);\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset\n      });\n    }\n  }\n  // Utility wrapper for calling dataStrategy client-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(type, request, matchesToLoad, matches) {\n    try {\n      let results = await callDataStrategyImpl(dataStrategyImpl, type, request, matchesToLoad, matches, manifest, mapRouteProperties);\n      return await Promise.all(results.map((result, i) => {\n        if (isRedirectHandlerResult(result)) {\n          let response = result.result;\n          return {\n            type: ResultType.redirect,\n            response: normalizeRelativeRoutingRedirectResponse(response, request, matchesToLoad[i].route.id, matches, basename, future.v7_relativeSplatPath)\n          };\n        }\n        return convertHandlerResultToDataResult(result);\n      }));\n    } catch (e) {\n      // If the outer dataStrategy method throws, just return the error for all\n      // matches - and it'll naturally bubble to the root\n      return matchesToLoad.map(() => ({\n        type: ResultType.error,\n        error: e\n      }));\n    }\n  }\n  async function callLoadersAndMaybeResolveData(currentMatches, matches, matchesToLoad, fetchersToLoad, request) {\n    let [loaderResults, ...fetcherResults] = await Promise.all([matchesToLoad.length ? callDataStrategy(\"loader\", request, matchesToLoad, matches) : [], ...fetchersToLoad.map(f => {\n      if (f.matches && f.match && f.controller) {\n        let fetcherRequest = createClientSideRequest(init.history, f.path, f.controller.signal);\n        return callDataStrategy(\"loader\", fetcherRequest, [f.match], f.matches).then(r => r[0]);\n      } else {\n        return Promise.resolve({\n          type: ResultType.error,\n          error: getInternalRouterError(404, {\n            pathname: f.path\n          })\n        });\n      }\n    })]);\n    await Promise.all([resolveDeferredResults(currentMatches, matchesToLoad, loaderResults, loaderResults.map(() => request.signal), false, state.loaderData), resolveDeferredResults(currentMatches, fetchersToLoad.map(f => f.match), fetcherResults, fetchersToLoad.map(f => f.controller ? f.controller.signal : null), true)]);\n    return {\n      loaderResults,\n      fetcherResults\n    };\n  }\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n  function updateFetcherState(key, fetcher, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    state.fetchers.set(key, fetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function setFetcherError(key, routeId, error, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error\n      },\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function getFetcher(key) {\n    if (future.v7_fetcherPersist) {\n      activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n      // If this fetcher was previously marked for deletion, unmark it since we\n      // have a new instance\n      if (deletedFetchers.has(key)) {\n        deletedFetchers.delete(key);\n      }\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n  function deleteFetcher(key) {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    deletedFetchers.delete(key);\n    state.fetchers.delete(key);\n  }\n  function deleteFetcherAndUpdateState(key) {\n    if (future.v7_fetcherPersist) {\n      let count = (activeFetchers.get(key) || 0) - 1;\n      if (count <= 0) {\n        activeFetchers.delete(key);\n        deletedFetchers.add(key);\n      } else {\n        activeFetchers.set(key, count);\n      }\n    } else {\n      deleteFetcher(key);\n    }\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, \"Expected fetch controller: \" + key);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, \"Expected fetcher: \" + key);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, \"Expected fetcher: \" + key);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n    return blocker;\n  }\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\", \"Invalid blocker state transition: \" + blocker.state + \" -> \" + newBlocker.state);\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({\n      blockers\n    });\n  }\n  function shouldBlockNavigation(_ref4) {\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = _ref4;\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({\n      currentLocation,\n      nextLocation,\n      historyAction\n    })) {\n      return blockerKey;\n    }\n  }\n  function handleNavigational404(pathname) {\n    let error = getInternalRouterError(404, {\n      pathname\n    });\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(routesToUse);\n    // Cancel all pending deferred on 404s since we don't keep any routes\n    cancelActiveDeferreds();\n    return {\n      notFoundMatches: matches,\n      route,\n      error\n    };\n  }\n  function handleDiscoverRouteError(pathname, discoverResult) {\n    return {\n      boundaryId: findNearestBoundary(discoverResult.partialMatches).route.id,\n      error: getInternalRouterError(400, {\n        type: \"route-discovery\",\n        pathname,\n        message: discoverResult.error != null && \"message\" in discoverResult.error ? discoverResult.error : String(discoverResult.error)\n      })\n    };\n  }\n  function cancelActiveDeferreds(predicate) {\n    let cancelledRouteIds = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({\n          restoreScrollPosition: y\n        });\n      }\n    }\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n  function getScrollKey(location, matches) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(location, matches.map(m => convertRouteMatchToUiMatch(m, state.loaderData)));\n      return key || location.key;\n    }\n    return location.key;\n  }\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n  function checkFogOfWar(matches, routesToUse, pathname) {\n    if (patchRoutesOnMissImpl) {\n      if (!matches) {\n        let fogMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n        return {\n          active: true,\n          matches: fogMatches || []\n        };\n      } else {\n        let leafRoute = matches[matches.length - 1].route;\n        if (leafRoute.path && (leafRoute.path === \"*\" || leafRoute.path.endsWith(\"/*\"))) {\n          // If we matched a splat, it might only be because we haven't yet fetched\n          // the children that would match with a higher score, so let's fetch\n          // around and find out\n          let partialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n          return {\n            active: true,\n            matches: partialMatches\n          };\n        }\n      }\n    }\n    return {\n      active: false,\n      matches: null\n    };\n  }\n  async function discoverRoutes(matches, pathname, signal) {\n    let partialMatches = matches;\n    let route = partialMatches.length > 0 ? partialMatches[partialMatches.length - 1].route : null;\n    while (true) {\n      let isNonHMR = inFlightDataRoutes == null;\n      let routesToUse = inFlightDataRoutes || dataRoutes;\n      try {\n        await loadLazyRouteChildren(patchRoutesOnMissImpl, pathname, partialMatches, routesToUse, manifest, mapRouteProperties, pendingPatchRoutes, signal);\n      } catch (e) {\n        return {\n          type: \"error\",\n          error: e,\n          partialMatches\n        };\n      } finally {\n        // If we are not in the middle of an HMR revalidation and we changed the\n        // routes, provide a new identity so when we `updateState` at the end of\n        // this navigation/fetch `router.routes` will be a new identity and\n        // trigger a re-run of memoized `router.routes` dependencies.\n        // HMR will already update the identity and reflow when it lands\n        // `inFlightDataRoutes` in `completeNavigation`\n        if (isNonHMR) {\n          dataRoutes = [...dataRoutes];\n        }\n      }\n      if (signal.aborted) {\n        return {\n          type: \"aborted\"\n        };\n      }\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\n      let matchedSplat = false;\n      if (newMatches) {\n        let leafRoute = newMatches[newMatches.length - 1].route;\n        if (leafRoute.index) {\n          // If we found an index route, we can stop\n          return {\n            type: \"success\",\n            matches: newMatches\n          };\n        }\n        if (leafRoute.path && leafRoute.path.length > 0) {\n          if (leafRoute.path === \"*\") {\n            // If we found a splat route, we can't be sure there's not a\n            // higher-scoring route down some partial matches trail so we need\n            // to check that out\n            matchedSplat = true;\n          } else {\n            // If we found a non-splat route, we can stop\n            return {\n              type: \"success\",\n              matches: newMatches\n            };\n          }\n        }\n      }\n      let newPartialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n      // If we are no longer partially matching anything, this was either a\n      // legit splat match above, or it's a 404.  Also avoid loops if the\n      // second pass results in the same partial matches\n      if (!newPartialMatches || partialMatches.map(m => m.route.id).join(\"-\") === newPartialMatches.map(m => m.route.id).join(\"-\")) {\n        return {\n          type: \"success\",\n          matches: matchedSplat ? newMatches : null\n        };\n      }\n      partialMatches = newPartialMatches;\n      route = partialMatches[partialMatches.length - 1].route;\n      if (route.path === \"*\") {\n        // The splat is still our most accurate partial, so run with it\n        return {\n          type: \"success\",\n          matches: partialMatches\n        };\n      }\n    }\n  }\n  function _internalSetRoutes(newRoutes) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(newRoutes, mapRouteProperties, undefined, manifest);\n  }\n  function patchRoutes(routeId, children) {\n    let isNonHMR = inFlightDataRoutes == null;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties);\n    // If we are not in the middle of an HMR revalidation and we changed the\n    // routes, provide a new identity and trigger a reflow via `updateState`\n    // to re-run memoized `router.routes` dependencies.\n    // HMR will already update the identity and reflow when it lands\n    // `inFlightDataRoutes` in `completeNavigation`\n    if (isNonHMR) {\n      dataRoutes = [...dataRoutes];\n      updateState({});\n    }\n  }\n  router = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: to => init.history.createHref(to),\n    encodeLocation: to => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: deleteFetcherAndUpdateState,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    patchRoutes,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes\n  };\n  return router;\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\nconst UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\nfunction createStaticHandler(routes, opts) {\n  invariant(routes.length > 0, \"You must provide a non-empty routes array to createStaticHandler\");\n  let manifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties;\n  if (opts != null && opts.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts != null && opts.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Config driven behavior flags\n  let future = _extends({\n    v7_relativeSplatPath: false,\n    v7_throwAbortReason: false\n  }, opts ? opts.future : null);\n  let dataRoutes = convertRoutesToDataRoutes(routes, mapRouteProperties, undefined, manifest);\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   *\n   * - `opts.requestContext` is an optional server context that will be passed\n   *   to actions/loaders in the `context` parameter\n   * - `opts.skipLoaderErrorBubbling` is an optional parameter that will prevent\n   *   the bubbling of errors which allows single-fetch-type implementations\n   *   where the client will handle the bubbling and we may need to return data\n   *   for the handling route\n   */\n  async function query(request, _temp3) {\n    let {\n      requestContext,\n      skipLoaderErrorBubbling,\n      unstable_dataStrategy\n    } = _temp3 === void 0 ? {} : _temp3;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, {\n        method\n      });\n      let {\n        matches: methodNotAllowedMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let result = await queryImpl(request, location, matches, requestContext, unstable_dataStrategy || null, skipLoaderErrorBubbling === true, null);\n    if (isResponse(result)) {\n      return result;\n    }\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return _extends({\n      location,\n      basename\n    }, result);\n  }\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   *\n   * - `opts.routeId` allows you to specify the specific route handler to call.\n   *   If not provided the handler will determine the proper route by matching\n   *   against `request.url`\n   * - `opts.requestContext` is an optional server context that will be passed\n   *    to actions/loaders in the `context` parameter\n   */\n  async function queryRoute(request, _temp4) {\n    let {\n      routeId,\n      requestContext,\n      unstable_dataStrategy\n    } = _temp4 === void 0 ? {} : _temp4;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, {\n        method\n      });\n    } else if (!matches) {\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let match = routeId ? matches.find(m => m.route.id === routeId) : getTargetMatch(matches, location);\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let result = await queryImpl(request, location, matches, requestContext, unstable_dataStrategy || null, false, match);\n    if (isResponse(result)) {\n      return result;\n    }\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n    if (result.loaderData) {\n      var _result$activeDeferre;\n      let data = Object.values(result.loaderData)[0];\n      if ((_result$activeDeferre = result.activeDeferreds) != null && _result$activeDeferre[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n    return undefined;\n  }\n  async function queryImpl(request, location, matches, requestContext, unstable_dataStrategy, skipLoaderErrorBubbling, routeMatch) {\n    invariant(request.signal, \"query()/queryRoute() requests must contain an AbortController signal\");\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(request, matches, routeMatch || getTargetMatch(matches, location), requestContext, unstable_dataStrategy, skipLoaderErrorBubbling, routeMatch != null);\n        return result;\n      }\n      let result = await loadRouteData(request, matches, requestContext, unstable_dataStrategy, skipLoaderErrorBubbling, routeMatch);\n      return isResponse(result) ? result : _extends({}, result, {\n        actionData: null,\n        actionHeaders: {}\n      });\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction for a\n      // `queryRoute` call, we throw the `HandlerResult` to bail out early\n      // and then return or throw the raw Response here accordingly\n      if (isHandlerResult(e) && isResponse(e.result)) {\n        if (e.type === ResultType.error) {\n          throw e.result;\n        }\n        return e.result;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n  async function submit(request, matches, actionMatch, requestContext, unstable_dataStrategy, skipLoaderErrorBubbling, isRouteRequest) {\n    let result;\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    } else {\n      let results = await callDataStrategy(\"action\", request, [actionMatch], matches, isRouteRequest, requestContext, unstable_dataStrategy);\n      result = results[0];\n      if (request.signal.aborted) {\n        throwStaticHandlerAbortedError(request, isRouteRequest, future);\n      }\n    }\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.response.status,\n        headers: {\n          Location: result.response.headers.get(\"Location\")\n        }\n      });\n    }\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    }\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: {\n          [actionMatch.route.id]: result.data\n        },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal\n    });\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(loaderRequest, matches, requestContext, unstable_dataStrategy, skipLoaderErrorBubbling, null, [boundaryMatch.route.id, result]);\n      // action status codes take precedence over loader status codes\n      return _extends({}, context, {\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,\n        actionData: null,\n        actionHeaders: _extends({}, result.headers ? {\n          [actionMatch.route.id]: result.headers\n        } : {})\n      });\n    }\n    let context = await loadRouteData(loaderRequest, matches, requestContext, unstable_dataStrategy, skipLoaderErrorBubbling, null);\n    return _extends({}, context, {\n      actionData: {\n        [actionMatch.route.id]: result.data\n      }\n    }, result.statusCode ? {\n      statusCode: result.statusCode\n    } : {}, {\n      actionHeaders: result.headers ? {\n        [actionMatch.route.id]: result.headers\n      } : {}\n    });\n  }\n  async function loadRouteData(request, matches, requestContext, unstable_dataStrategy, skipLoaderErrorBubbling, routeMatch, pendingActionResult) {\n    let isRouteRequest = routeMatch != null;\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (isRouteRequest && !(routeMatch != null && routeMatch.route.loader) && !(routeMatch != null && routeMatch.route.lazy)) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch == null ? void 0 : routeMatch.route.id\n      });\n    }\n    let requestMatches = routeMatch ? [routeMatch] : pendingActionResult && isErrorResult(pendingActionResult[1]) ? getLoaderMatchesUntilBoundary(matches, pendingActionResult[0]) : matches;\n    let matchesToLoad = requestMatches.filter(m => m.route.loader || m.route.lazy);\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce((acc, m) => Object.assign(acc, {\n          [m.route.id]: null\n        }), {}),\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let results = await callDataStrategy(\"loader\", request, matchesToLoad, matches, isRouteRequest, requestContext, unstable_dataStrategy);\n    if (request.signal.aborted) {\n      throwStaticHandlerAbortedError(request, isRouteRequest, future);\n    }\n    // Process and commit output from loaders\n    let activeDeferreds = new Map();\n    let context = processRouteLoaderData(matches, matchesToLoad, results, pendingActionResult, activeDeferreds, skipLoaderErrorBubbling);\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set(matchesToLoad.map(match => match.route.id));\n    matches.forEach(match => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n    return _extends({}, context, {\n      matches,\n      activeDeferreds: activeDeferreds.size > 0 ? Object.fromEntries(activeDeferreds.entries()) : null\n    });\n  }\n  // Utility wrapper for calling dataStrategy server-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(type, request, matchesToLoad, matches, isRouteRequest, requestContext, unstable_dataStrategy) {\n    let results = await callDataStrategyImpl(unstable_dataStrategy || defaultDataStrategy, type, request, matchesToLoad, matches, manifest, mapRouteProperties, requestContext);\n    return await Promise.all(results.map((result, i) => {\n      if (isRedirectHandlerResult(result)) {\n        let response = result.result;\n        // Throw redirects and let the server handle them with an HTTP redirect\n        throw normalizeRelativeRoutingRedirectResponse(response, request, matchesToLoad[i].route.id, matches, basename, future.v7_relativeSplatPath);\n      }\n      if (isResponse(result.result) && isRouteRequest) {\n        // For SSR single-route requests, we want to hand Responses back\n        // directly without unwrapping\n        throw result;\n      }\n      return convertHandlerResultToDataResult(result);\n    }));\n  }\n  return {\n    dataRoutes,\n    query,\n    queryRoute\n  };\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nfunction getStaticContextFromError(routes, context, error) {\n  let newContext = _extends({}, context, {\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error\n    }\n  });\n  return newContext;\n}\nfunction throwStaticHandlerAbortedError(request, isRouteRequest, future) {\n  if (future.v7_throwAbortReason && request.signal.reason !== undefined) {\n    throw request.signal.reason;\n  }\n  let method = isRouteRequest ? \"queryRoute\" : \"query\";\n  throw new Error(method + \"() call aborted: \" + request.method + \" \" + request.url);\n}\nfunction isSubmissionNavigation(opts) {\n  return opts != null && (\"formData\" in opts && opts.formData != null || \"body\" in opts && opts.body !== undefined);\n}\nfunction normalizeTo(location, matches, basename, prependBasename, to, v7_relativeSplatPath, fromRouteId, relative) {\n  let contextualMatches;\n  let activeRouteMatch;\n  if (fromRouteId) {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n  // Resolve the relative path\n  let path = resolveTo(to ? to : \".\", getResolveToMatches(contextualMatches, v7_relativeSplatPath), stripBasename(location.pathname, basename) || location.pathname, relative === \"path\");\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n  // Add an ?index param for matched index routes if we don't already have one\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch && activeRouteMatch.route.index && !hasNakedIndexQuery(path.search)) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(normalizeFormMethod, isFetcher, path, opts) {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return {\n      path\n    };\n  }\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, {\n        method: opts.formMethod\n      })\n    };\n  }\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, {\n      type: \"invalid-body\"\n    })\n  });\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod ? rawFormMethod.toUpperCase() : rawFormMethod.toLowerCase();\n  let formAction = stripHashFromPath(path);\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      let text = typeof opts.body === \"string\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ?\n      // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n      Array.from(opts.body.entries()).reduce((acc, _ref5) => {\n        let [name, value] = _ref5;\n        return \"\" + acc + name + \"=\" + value + \"\\n\";\n      }, \"\") : String(opts.body);\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text\n        }\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      try {\n        let json = typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined\n          }\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n  invariant(typeof FormData === \"function\", \"FormData is not available in this environment\");\n  let searchParams;\n  let formData;\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n  let submission = {\n    formMethod,\n    formAction,\n    formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined\n  };\n  if (isMutationMethod(submission.formMethod)) {\n    return {\n      path,\n      submission\n    };\n  }\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = \"?\" + searchParams;\n  return {\n    path: createPath(parsedPath),\n    submission\n  };\n}\n// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(matches, boundaryId) {\n  let boundaryMatches = matches;\n  if (boundaryId) {\n    let index = matches.findIndex(m => m.route.id === boundaryId);\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n  return boundaryMatches;\n}\nfunction getMatchesToLoad(history, state, matches, submission, location, isInitialLoad, skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult) {\n  let actionResult = pendingActionResult ? isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : pendingActionResult[1].data : undefined;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryId = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[0] : undefined;\n  let boundaryMatches = boundaryId ? getLoaderMatchesUntilBoundary(matches, boundaryId) : matches;\n  // Don't revalidate loaders by default after action 4xx/5xx responses\n  // when the flag is enabled.  They can still opt-into revalidation via\n  // `shouldRevalidate` via `actionResult`\n  let actionStatus = pendingActionResult ? pendingActionResult[1].statusCode : undefined;\n  let shouldSkipRevalidation = skipActionErrorRevalidation && actionStatus && actionStatus >= 400;\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    let {\n      route\n    } = match;\n    if (route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n    if (route.loader == null) {\n      return false;\n    }\n    if (isInitialLoad) {\n      if (typeof route.loader !== \"function\" || route.loader.hydrate) {\n        return true;\n      }\n      return state.loaderData[route.id] === undefined && (\n      // Don't re-run if the loader ran and threw an error\n      !state.errors || state.errors[route.id] === undefined);\n    }\n    // Always call the loader on new route instances and pending defer cancellations\n    if (isNewLoader(state.loaderData, state.matches[index], match) || cancelledDeferredRoutes.some(id => id === match.route.id)) {\n      return true;\n    }\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n    return shouldRevalidateLoader(match, _extends({\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params\n    }, submission, {\n      actionResult,\n      actionStatus,\n      defaultShouldRevalidate: shouldSkipRevalidation ? false :\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      isRevalidationRequired || currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search ||\n      // Search params affect all loaders\n      currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)\n    }));\n  });\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate:\n    //  - on initial load (shouldn't be any fetchers then anyway)\n    //  - if fetcher won't be present in the subsequent render\n    //    - no longer matches the URL (v7_fetcherPersist=false)\n    //    - was unmounted but persisted due to v7_fetcherPersist=true\n    if (isInitialLoad || !matches.some(m => m.route.id === f.routeId) || deletedFetchers.has(key)) {\n      return;\n    }\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null\n      });\n      return;\n    }\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.includes(key)) {\n      // Always revalidate if the fetcher was cancelled\n      shouldRevalidate = true;\n    } else if (fetcher && fetcher.state !== \"idle\" && fetcher.data === undefined) {\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, _extends({\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params\n      }, submission, {\n        actionResult,\n        actionStatus,\n        defaultShouldRevalidate: shouldSkipRevalidation ? false : isRevalidationRequired\n      }));\n    }\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController()\n      });\n    }\n  });\n  return [navigationMatches, revalidatingFetchers];\n}\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew =\n  // [a] -> [a, b]\n  !currentMatch ||\n  // [a, b] -> [a, c]\n  match.route.id !== currentMatch.route.id;\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n  return arg.defaultShouldRevalidate;\n}\n/**\n * Idempotent utility to execute patchRoutesOnMiss() to lazily load route\n * definitions and update the routes/routeManifest\n */\nasync function loadLazyRouteChildren(patchRoutesOnMissImpl, path, matches, routes, manifest, mapRouteProperties, pendingRouteChildren, signal) {\n  let key = [path, ...matches.map(m => m.route.id)].join(\"-\");\n  try {\n    let pending = pendingRouteChildren.get(key);\n    if (!pending) {\n      pending = patchRoutesOnMissImpl({\n        path,\n        matches,\n        patch: (routeId, children) => {\n          if (!signal.aborted) {\n            patchRoutesImpl(routeId, children, routes, manifest, mapRouteProperties);\n          }\n        }\n      });\n      pendingRouteChildren.set(key, pending);\n    }\n    if (pending && isPromise(pending)) {\n      await pending;\n    }\n  } finally {\n    pendingRouteChildren.delete(key);\n  }\n}\nfunction patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties) {\n  if (routeId) {\n    var _route$children;\n    let route = manifest[routeId];\n    invariant(route, \"No route found to patch children into: routeId = \" + routeId);\n    let dataChildren = convertRoutesToDataRoutes(children, mapRouteProperties, [routeId, \"patch\", String(((_route$children = route.children) == null ? void 0 : _route$children.length) || \"0\")], manifest);\n    if (route.children) {\n      route.children.push(...dataChildren);\n    } else {\n      route.children = dataChildren;\n    }\n  } else {\n    let dataChildren = convertRoutesToDataRoutes(children, mapRouteProperties, [\"patch\", String(routesToUse.length || \"0\")], manifest);\n    routesToUse.push(...dataChildren);\n  }\n}\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(route, mapRouteProperties, manifest) {\n  if (!route.lazy) {\n    return;\n  }\n  let lazyRoute = await route.lazy();\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue = routeToUpdate[lazyRouteProperty];\n    let isPropertyStaticallyDefined = staticRouteValue !== undefined &&\n    // This property isn't static since it should always be updated based\n    // on the route updates\n    lazyRouteProperty !== \"hasErrorBoundary\";\n    warning(!isPropertyStaticallyDefined, \"Route \\\"\" + routeToUpdate.id + \"\\\" has a static property \\\"\" + lazyRouteProperty + \"\\\" \" + \"defined but its lazy function is also returning a value for this property. \" + (\"The lazy route property \\\"\" + lazyRouteProperty + \"\\\" will be ignored.\"));\n    if (!isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty)) {\n      routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty];\n    }\n  }\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, _extends({}, mapRouteProperties(routeToUpdate), {\n    lazy: undefined\n  }));\n}\n// Default implementation of `dataStrategy` which fetches all loaders in parallel\nfunction defaultDataStrategy(opts) {\n  return Promise.all(opts.matches.map(m => m.resolve()));\n}\nasync function callDataStrategyImpl(dataStrategyImpl, type, request, matchesToLoad, matches, manifest, mapRouteProperties, requestContext) {\n  let routeIdsToLoad = matchesToLoad.reduce((acc, m) => acc.add(m.route.id), new Set());\n  let loadedMatches = new Set();\n  // Send all matches here to allow for a middleware-type implementation.\n  // handler will be a no-op for unneeded routes and we filter those results\n  // back out below.\n  let results = await dataStrategyImpl({\n    matches: matches.map(match => {\n      let shouldLoad = routeIdsToLoad.has(match.route.id);\n      // `resolve` encapsulates the route.lazy, executing the\n      // loader/action, and mapping return values/thrown errors to a\n      // HandlerResult.  Users can pass a callback to take fine-grained control\n      // over the execution of the loader/action\n      let resolve = handlerOverride => {\n        loadedMatches.add(match.route.id);\n        return shouldLoad ? callLoaderOrAction(type, request, match, manifest, mapRouteProperties, handlerOverride, requestContext) : Promise.resolve({\n          type: ResultType.data,\n          result: undefined\n        });\n      };\n      return _extends({}, match, {\n        shouldLoad,\n        resolve\n      });\n    }),\n    request,\n    params: matches[0].params,\n    context: requestContext\n  });\n  // Throw if any loadRoute implementations not called since they are what\n  // ensures a route is fully loaded\n  matches.forEach(m => invariant(loadedMatches.has(m.route.id), \"`match.resolve()` was not called for route id \\\"\" + m.route.id + \"\\\". \" + \"You must call `match.resolve()` on every match passed to \" + \"`dataStrategy` to ensure all routes are properly loaded.\"));\n  // Filter out any middleware-only matches for which we didn't need to run handlers\n  return results.filter((_, i) => routeIdsToLoad.has(matches[i].route.id));\n}\n// Default logic for calling a loader/action is the user has no specified a dataStrategy\nasync function callLoaderOrAction(type, request, match, manifest, mapRouteProperties, handlerOverride, staticContext) {\n  let result;\n  let onReject;\n  let runHandler = handler => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject;\n    // This will never resolve so safe to type it as Promise<HandlerResult> to\n    // satisfy the function return value\n    let abortPromise = new Promise((_, r) => reject = r);\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    let actualHandler = ctx => {\n      if (typeof handler !== \"function\") {\n        return Promise.reject(new Error(\"You cannot call the handler for a route which defines a boolean \" + (\"\\\"\" + type + \"\\\" [routeId: \" + match.route.id + \"]\")));\n      }\n      return handler({\n        request,\n        params: match.params,\n        context: staticContext\n      }, ...(ctx !== undefined ? [ctx] : []));\n    };\n    let handlerPromise;\n    if (handlerOverride) {\n      handlerPromise = handlerOverride(ctx => actualHandler(ctx));\n    } else {\n      handlerPromise = (async () => {\n        try {\n          let val = await actualHandler();\n          return {\n            type: \"data\",\n            result: val\n          };\n        } catch (e) {\n          return {\n            type: \"error\",\n            result: e\n          };\n        }\n      })();\n    }\n    return Promise.race([handlerPromise, abortPromise]);\n  };\n  try {\n    let handler = match.route[type];\n    if (match.route.lazy) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let handlerError;\n        let [value] = await Promise.all([\n        // If the handler throws, don't let it immediately bubble out,\n        // since we need to let the lazy() execution finish so we know if this\n        // route has a boundary that can handle the error\n        runHandler(handler).catch(e => {\n          handlerError = e;\n        }), loadLazyRouteModule(match.route, mapRouteProperties, manifest)]);\n        if (handlerError !== undefined) {\n          throw handlerError;\n        }\n        result = value;\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadLazyRouteModule(match.route, mapRouteProperties, manifest);\n        handler = match.route[type];\n        if (handler) {\n          // Handler still runs even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return {\n            type: ResultType.data,\n            result: undefined\n          };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n    invariant(result.result !== undefined, \"You defined \" + (type === \"action\" ? \"an action\" : \"a loader\") + \" for route \" + (\"\\\"\" + match.route.id + \"\\\" but didn't return anything from your `\" + type + \"` \") + \"function. Please return a value or `null`.\");\n  } catch (e) {\n    // We should already be catching and converting normal handler executions to\n    // HandlerResults and returning them, so anything that throws here is an\n    // unexpected error we still need to wrap\n    return {\n      type: ResultType.error,\n      result: e\n    };\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n  return result;\n}\nasync function convertHandlerResultToDataResult(handlerResult) {\n  let {\n    result,\n    type,\n    status\n  } = handlerResult;\n  if (isResponse(result)) {\n    let data;\n    try {\n      let contentType = result.headers.get(\"Content-Type\");\n      // Check between word boundaries instead of startsWith() due to the last\n      // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n        if (result.body == null) {\n          data = null;\n        } else {\n          data = await result.json();\n        }\n      } else {\n        data = await result.text();\n      }\n    } catch (e) {\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n    if (type === ResultType.error) {\n      return {\n        type: ResultType.error,\n        error: new ErrorResponseImpl(result.status, result.statusText, data),\n        statusCode: result.status,\n        headers: result.headers\n      };\n    }\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n  if (type === ResultType.error) {\n    return {\n      type: ResultType.error,\n      error: result,\n      statusCode: isRouteErrorResponse(result) ? result.status : status\n    };\n  }\n  if (isDeferredData(result)) {\n    var _result$init, _result$init2;\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: (_result$init = result.init) == null ? void 0 : _result$init.status,\n      headers: ((_result$init2 = result.init) == null ? void 0 : _result$init2.headers) && new Headers(result.init.headers)\n    };\n  }\n  return {\n    type: ResultType.data,\n    data: result,\n    statusCode: status\n  };\n}\n// Support relative routing in internal redirects\nfunction normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename, v7_relativeSplatPath) {\n  let location = response.headers.get(\"Location\");\n  invariant(location, \"Redirects returned/thrown from loaders/actions must have a Location header\");\n  if (!ABSOLUTE_URL_REGEX.test(location)) {\n    let trimmedMatches = matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1);\n    location = normalizeTo(new URL(request.url), trimmedMatches, basename, true, location, v7_relativeSplatPath);\n    response.headers.set(\"Location\", location);\n  }\n  return response;\n}\nfunction normalizeRedirectLocation(location, currentUrl, basename) {\n  if (ABSOLUTE_URL_REGEX.test(location)) {\n    // Strip off the protocol+origin for same-origin + same-basename absolute redirects\n    let normalizedLocation = location;\n    let url = normalizedLocation.startsWith(\"//\") ? new URL(currentUrl.protocol + normalizedLocation) : new URL(normalizedLocation);\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\n    if (url.origin === currentUrl.origin && isSameBasename) {\n      return url.pathname + url.search + url.hash;\n    }\n  }\n  return location;\n}\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = {\n    signal\n  };\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let {\n      formMethod,\n      formEncType\n    } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({\n        \"Content-Type\": formEncType\n      });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (formEncType === \"application/x-www-form-urlencoded\" && submission.formData) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n  return new Request(url, init);\n}\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n  return searchParams;\n}\nfunction convertSearchParamsToFormData(searchParams) {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\nfunction processRouteLoaderData(matches, matchesToLoad, results, pendingActionResult, activeDeferreds, skipLoaderErrorBubbling) {\n  // Fill in loaderData/errors from our loaders\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {};\n  let pendingError = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : undefined;\n  // Process loader results into state.loaderData/state.errors\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(!isRedirectResult(result), \"Cannot handle redirect results in processLoaderData\");\n    if (isErrorResult(result)) {\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError !== undefined) {\n        error = pendingError;\n        pendingError = undefined;\n      }\n      errors = errors || {};\n      if (skipLoaderErrorBubbling) {\n        errors[id] = error;\n      } else {\n        // Look upwards from the matched route for the closest ancestor error\n        // boundary, defaulting to the root match.  Prefer higher error values\n        // if lower errors bubble to the same boundary\n        let boundaryMatch = findNearestBoundary(matches, id);\n        if (errors[boundaryMatch.route.id] == null) {\n          errors[boundaryMatch.route.id] = error;\n        }\n      }\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (result.statusCode != null && result.statusCode !== 200 && !foundError) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      } else {\n        loaderData[id] = result.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (result.statusCode && result.statusCode !== 200 && !foundError) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      }\n    }\n  });\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError !== undefined && pendingActionResult) {\n    errors = {\n      [pendingActionResult[0]]: pendingError\n    };\n    loaderData[pendingActionResult[0]] = undefined;\n  }\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\nfunction processLoaderData(state, matches, matchesToLoad, results, pendingActionResult, revalidatingFetchers, fetcherResults, activeDeferreds) {\n  let {\n    loaderData,\n    errors\n  } = processRouteLoaderData(matches, matchesToLoad, results, pendingActionResult, activeDeferreds, false // This method is only called client side so we always want to bubble\n  );\n  // Process results from our revalidating fetchers\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let {\n      key,\n      match,\n      controller\n    } = revalidatingFetchers[index];\n    invariant(fetcherResults !== undefined && fetcherResults[index] !== undefined, \"Did not find corresponding fetcher result\");\n    let result = fetcherResults[index];\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      continue;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match == null ? void 0 : match.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = _extends({}, errors, {\n          [boundaryMatch.route.id]: result.error\n        });\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  return {\n    loaderData,\n    errors\n  };\n}\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = _extends({}, newLoaderData);\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\nfunction getActionDataForCommit(pendingActionResult) {\n  if (!pendingActionResult) {\n    return {};\n  }\n  return isErrorResult(pendingActionResult[1]) ? {\n    // Clear out prior actionData on errors\n    actionData: {}\n  } : {\n    actionData: {\n      [pendingActionResult[0]]: pendingActionResult[1].data\n    }\n  };\n}\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find(m => m.route.hasErrorBoundary === true) || matches[0];\n}\nfunction getShortCircuitMatches(routes) {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.length === 1 ? routes[0] : routes.find(r => r.index || !r.path || r.path === \"/\") || {\n    id: \"__shim-error-route__\"\n  };\n  return {\n    matches: [{\n      params: {},\n      pathname: \"\",\n      pathnameBase: \"\",\n      route\n    }],\n    route\n  };\n}\nfunction getInternalRouterError(status, _temp5) {\n  let {\n    pathname,\n    routeId,\n    method,\n    type,\n    message\n  } = _temp5 === void 0 ? {} : _temp5;\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (type === \"route-discovery\") {\n      errorMessage = \"Unable to match URL \\\"\" + pathname + \"\\\" - the `unstable_patchRoutesOnMiss()` \" + (\"function threw the following error:\\n\" + message);\n    } else if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide a `loader` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = \"Route \\\"\" + routeId + \"\\\" does not match URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = \"No route matches URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method.toUpperCase() + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide an `action` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (method) {\n      errorMessage = \"Invalid request method \\\"\" + method.toUpperCase() + \"\\\"\";\n    }\n  }\n  return new ErrorResponseImpl(status || 500, statusText, new Error(errorMessage), true);\n}\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(results) {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n    if (isRedirectResult(result)) {\n      return {\n        result,\n        idx: i\n      };\n    }\n  }\n}\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath(_extends({}, parsedPath, {\n    hash: \"\"\n  }));\n}\nfunction isHashChangeOnly(a, b) {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\nfunction isPromise(val) {\n  return typeof val === \"object\" && val != null && \"then\" in val;\n}\nfunction isHandlerResult(result) {\n  return result != null && typeof result === \"object\" && \"type\" in result && \"result\" in result && (result.type === ResultType.data || result.type === ResultType.error);\n}\nfunction isRedirectHandlerResult(result) {\n  return isResponse(result.result) && redirectStatusCodes.has(result.result.status);\n}\nfunction isDeferredResult(result) {\n  return result.type === ResultType.deferred;\n}\nfunction isErrorResult(result) {\n  return result.type === ResultType.error;\n}\nfunction isRedirectResult(result) {\n  return (result && result.type) === ResultType.redirect;\n}\nfunction isDeferredData(value) {\n  let deferred = value;\n  return deferred && typeof deferred === \"object\" && typeof deferred.data === \"object\" && typeof deferred.subscribe === \"function\" && typeof deferred.cancel === \"function\" && typeof deferred.resolveData === \"function\";\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nfunction isRedirectResponse(result) {\n  if (!isResponse(result)) {\n    return false;\n  }\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method.toLowerCase());\n}\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method.toLowerCase());\n}\nasync function resolveDeferredResults(currentMatches, matchesToLoad, results, signals, isFetcher, currentLoaderData) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n    let currentMatch = currentMatches.find(m => m.route.id === match.route.id);\n    let isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      let signal = signals[index];\n      invariant(signal, \"Expected an AbortSignal for revalidating fetcher deferred result\");\n      await resolveDeferredData(result, signal, isFetcher).then(result => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\nasync function resolveDeferredData(result, signal, unwrap) {\n  if (unwrap === void 0) {\n    unwrap = false;\n  }\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n  }\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data\n  };\n}\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some(v => v === \"\");\n}\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\nfunction getSubmissionFromNavigation(navigation) {\n  let {\n    formMethod,\n    formAction,\n    formEncType,\n    text,\n    formData,\n    json\n  } = navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined\n    };\n  }\n}\nfunction getLoadingNavigation(location, submission) {\n  if (submission) {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text\n    };\n    return navigation;\n  } else {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined\n    };\n    return navigation;\n  }\n}\nfunction getSubmittingNavigation(location, submission) {\n  let navigation = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text\n  };\n  return navigation;\n}\nfunction getLoadingFetcher(submission, data) {\n  if (submission) {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data\n    };\n    return fetcher;\n  } else {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data\n    };\n    return fetcher;\n  }\n}\nfunction getSubmittingFetcher(submission, existingFetcher) {\n  let fetcher = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined\n  };\n  return fetcher;\n}\nfunction getDoneFetcher(data) {\n  let fetcher = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data\n  };\n  return fetcher;\n}\nfunction restoreAppliedTransitions(_window, transitions) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(TRANSITIONS_STORAGE_KEY);\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n    // no-op, use default empty object\n  }\n}\nfunction persistAppliedTransitions(_window, transitions) {\n  if (transitions.size > 0) {\n    let json = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(TRANSITIONS_STORAGE_KEY, JSON.stringify(json));\n    } catch (error) {\n      warning(false, \"Failed to save applied view transitions in sessionStorage (\" + error + \").\");\n    }\n  }\n}\n//#endregion\n\nexport { AbortedDeferredError, Action, IDLE_BLOCKER, IDLE_FETCHER, IDLE_NAVIGATION, UNSAFE_DEFERRED_SYMBOL, DeferredData as UNSAFE_DeferredData, ErrorResponseImpl as UNSAFE_ErrorResponseImpl, convertRouteMatchToUiMatch as UNSAFE_convertRouteMatchToUiMatch, convertRoutesToDataRoutes as UNSAFE_convertRoutesToDataRoutes, decodePath as UNSAFE_decodePath, getResolveToMatches as UNSAFE_getResolveToMatches, invariant as UNSAFE_invariant, warning as UNSAFE_warning, createBrowserHistory, createHashHistory, createMemoryHistory, createPath, createRouter, createStaticHandler, defer, generatePath, getStaticContextFromError, getToPathname, isDeferredData, isRouteErrorResponse, joinPaths, json, matchPath, matchRoutes, normalizePathname, parsePath, redirect, redirectDocument, resolvePath, resolveTo, stripBasename };\n//# sourceMappingURL=router.js.map\n","import {React,useEffect,useState} from 'react';\nimport { Routes, Route, useLocation } from 'react-router-dom';\n\n/**\n * Pages\n */\nimport Home from './pages/Home';\nimport Licence from './pages/Licence';\nimport Form from './pages/Form';\nimport Errors from './pages/Errors';\nimport Cotisation from './pages/Cotisation';\n/**\n * Components\n */\nimport Header from './components/Header';\n/**\n * Hooks\n */\nimport useFetch from './hooks/useFetch';\nimport useDatas from './hooks/useDatas';\n/**\n * CSS\n */\nimport './css/style_helloasso.css';\n\nconst App = () => {\n\n    const location = useLocation();\n    const adherent = the_ajax_script.infosUser;\n    const [nouveau,setNouveau] = useState('');\n    const [datas,user,liste,metadata,handelDatas] = useDatas();\n\n    //console.log(the_ajax_script.options_ffme);\n    \n    /**\n     * @param selection []\n     * Contient la liste des activités pour les licences\n     * contient également les selections faites par l'adhérent\n     */\n    const [selection,setSelection] = useState({\n        famille: '',\n       activites: [\n        {descriptif:'Randonnée pédestre', name: 'RP', checked: false },\n        {descriptif:'Raquette à neige', name: 'RN', checked: false },\n        {descriptif:'Via ferrata', name: 'VF', checked: false },\n        {descriptif:'Canyoning', name: 'CA', checked: false },\n        {descriptif:'Ski alpin sur domaine station', name: 'SKIA', checked: false },\n        {descriptif:'Vtt', name: 'VTT', checked: false },\n        {descriptif:'Escalade', name: 'ESCA', checked: false },\n        {descriptif:'Alpinisme', name: 'ALPI', checked: false, label: 'Pratiquez vous l\\'alpinisme à un niveau supérieur à PD ?', labelname: 'ALPI_SUP', labelchecked: false, show: false },\n        {descriptif:'Ski de randonnée', name: 'SKIR', checked: false, label: 'Pratiquez vous le Ski de randonnée à un niveau supérieur à PD ?', labelname: 'SKIR_SUP',labelchecked: false, show: false }\n       ],\n       options: the_ajax_script.options_ffme\n    }\n    );\n\n    const [nav,setNav] = useState([\n        { to: '/', label: 'Home'}\n    ]);\n\n    useEffect( () => {\n        window.scrollTo({ top: 400, behavior: 'smooth' });\n    },[location]);\n\n/**\n * Si c'est une connection direct d'un déjà adhérent\n */\n    useEffect( () => {\n        if( adherent.firstName ){\n            setNouveau('adherent');\n            handelDatas('adherent',adherent);\n        }\n    },[]);\n\n    return (\n        <>\n        {/* <Header nav={nav} /> */}\n            <Routes>\n                <Route exact path=\"/\" element={ <Home nouveau={nouveau} user={user} /> } />\n                <Route exact path=\"/formulaire\" element={ <Form setNouveau={setNouveau} nav={nav} setNav={setNav} user={user} handelDatas={handelDatas}/> } />\n                <Route exact path=\"/cotisation\" element={ <Cotisation datas={datas} nav={nav} setNav={setNav} liste={liste} metadata={metadata} handelDatas={handelDatas} /> } />\n                <Route exact path=\"/licence\" element={ <Licence datas={datas} handelDatas={handelDatas} nav={nav} liste={liste} setNav={setNav} selection={selection} setSelection={setSelection} /> } />\n                <Route exact path=\"*\" element={ <Errors /> } />\n            </Routes>\n        </>\n     );\n}\n\nexport default App;","import { React,useState,useEffect} from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport FormMembre from './FormMembre';\n\n// const isEmailValid = (email) => {\n//     const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n//     return emailPattern.test(email);\n//   };\n\nconst FormFamille = (props) => {\n\n  const {handelDatas} = props;\n  const {famille_adulte,famille_enfant,famille_supp} = props.metadata;\n\n  const [arrayMembre,setArrayMembre] = useState(famille_supp);\n\n  const handelSuppMembre = (id) => {\n    let new_array = arrayMembre.filter( item => item.id !== id );\n    setArrayMembre(new_array);\n   }\n\n  const handelAddMembre = (event) => {\n    let myref = uuidv4();\n    setArrayMembre([...arrayMembre,{id:myref}]);\n  }\n\n  useEffect( () => {\n    handelDatas('add_membre',arrayMembre);\n  }, [arrayMembre]);\n\n    // const handleEmailChange = (e) => {\n    //     const value = e.target.value;\n    //     //setEmail(value);\n    \n    //     if (!isEmailValid(value)) {\n    //         console.log('Invalid email format.');\n            \n    //       //setError('Invalid email format.');\n    //     } else {\n    //         console.log('Email is ok...');\n            \n    //       //setError('');\n    //     }\n    //   };\n\n    // const handelInputChange = (e) => {\n    //     const {value,name} = e.target;\n    // }\n\n    useEffect( () => {\n      console.log(\"useEffect\",famille_supp);\n    },[famille_supp]);\n\n    return(\n      <div>\n         <div className=\"content_membre\">\n          <FormMembre legend=\"Deuxiéme Adulte\" />\n          <FormMembre legend=\"Enfant\" />\n          {\n            famille_supp.map( (item,i) => (\n              <FormMembre monid={item.id} key={i} handelSuppMembre={handelSuppMembre} isMobile=\"mobile\" />\n            )\n            )\n          }\n        </div>\n          <div className=\"content_ajouter\">\n            <button onClick={handelAddMembre} className=\"bt_bleu center\">+ Ajouter un membre de famille</button>\n            </div>\n      </div>\n    )\n}\nexport default FormFamille;","\nimport { React, useEffect, useState } from 'react';\nimport { paysListe } from '../datas/paysListe';\n\nconst FormMembre = (props) => {\n\nconst {legend,handelSuppMembre,monid,isMobile} = props;\nconst [etat,setEtat]= useState(isMobile);\nconst [titre,setTitre] = useState('');\n\nconst handelSubmit = (event) => {\n    event.preventDefault();\n}\nconst suppMembre = (event) => {\n    handelSuppMembre(monid);\n}\n\n    return(\n        <form onSubmit={handelSubmit} className=\"form_inscription\">\n\n        <fieldset className=\"fieldset_grey\">\n        <legend>\n           {legend}\n        </legend>\n\n            <div className=\"label_ligne\">\n                <label>Nom:\n                    <input type=\"text\" name=\"lastName\" id=\"lastName\" defaultValue=\"\" required />\n                </label>\n                <label>Prénom:\n                    <input type=\"text\" name=\"firstName\" id=\"firstName\" defaultValue=\"\" required />\n                </label>\n            </div>\n\n            <div className=\"label_ligne\">\n                <label>Email:\n                    <input type=\"email\" name=\"email\" id=\"email\" defaultValue=\"\" required />\n                </label>\n                <label>Téléphone:\n                    <input type=\"tel\" name=\"billing_phone\" id=\"billing_phone\" defaultValue=\"\" required />\n                </label>\n            </div>\n\n            <div className=\"label_ligne\">\n                <div>Genre:\n                    <div>\n                        <label><input type=\"radio\" value=\"f\" name=\"gda_genre\" defaultChecked=\"\" required />Femme</label>\n                        <label><input type=\"radio\" value=\"h\" name=\"gda_genre\" defaultChecked=\"\" />Homme</label>\n                    </div>\n                </div>\n                <label>Date de naissance:\n                    <input type=\"date\" name=\"dateOfBirth\" id=\"dateOfBirth\" defaultValue=\"\" required />\n                </label>\n            </div>\n\n            <div className=\"label_ligne\">\n                <label>Lieu de naissance:\n                    <input type=\"text\" name=\"gda_lieu\" id=\"gda_lieu\" defaultValue=\"\" required />\n                </label>\n                <label>Nationalité:\n                    <select name=\"country\" defaultValue='FRA'>\n                        {\n                            paysListe.map( (item,i) => (\n                                <option value={item.value}>{item.land}</option>\n                            ))\n                        }\n                    </select>\n                </label>\n            </div>\n\n            {/* <div className=\"label_adresse\">\n                <label>Votre adresse:\n                    <input type=\"text\" name=\"address\" id=\"address\" defaultValue=\"\" required />\n                </label>\n            </div>\n\n            <div className=\"label_ligne\">\n                <label>Votre ville:\n                    <input type=\"text\" name=\"city\" id=\"city\" defaultValue=\"\" required />\n                </label>\n                <label>Votre code postal:\n                    <input type=\"text\" name=\"zipCode\" id=\"zipCode\" defaultValue=\"\" required />\n                </label>\n            </div> */}\n           \n            <h4 className=\"hello_h4\">Personne à prévenir en cas de problème:</h4>\n\n            <div className=\"label_ligne\">\n                <label>Nom de la personne:\n                    <input type=\"text\" name=\"gda_personne\" id=\"gda_personne\" defaultValue=\"\" required />\n                </label>\n                <label>Téléphone de la personne:\n                    <input type=\"tel\" name=\"gda_tel_personne\" id=\"gda_tel_personne\" defaultValue=\"\" required />\n                </label>\n            </div>\n\n                <div className=\"navig_bottom\">\n                {\n                    etat === 'mobile' ? ( <button type=\"button\" onClick={suppMembre} className='bt_supprimer'>x Supprimer</button>):('')\n                }\n                <button type=\"submit\" className='bt_vert'><i className=\"icon-valider\"></i>&nbsp;Valider</button>\n                </div>\n\n            </fieldset>\n\n\n        </form>\n    )\n\n}\nexport default FormMembre;","import { React, useEffect, useState } from 'react';\nimport { NavLink } from \"react-router-dom\";\n\nconst Header = (props) => {\n\n    const {nav} = props;\n\n    // window.scrollTo({ top: 50, behavior: 'smooth' });\n\n    return(\n        <>\n        <nav>\n            {\n                 nav.map( (item,i) => (\n                    <NavLink to={item.to} className={({ isActive }) => (isActive ? 'active' : 'link_chemin')} >{item.label}</NavLink>\n                 ) )\n            }\n            {/* {\n                nav.map( (item,i) => (\n                    <Link key={i} to={item.to} className='link_chemin'>{item.label}</Link>\n                ) )\n            } */}\n            {/* <Link key=\"1\" to=\"/\">Home</Link>\n            <Link key=\"2\" to=\"/formulaire\">Formulaire</Link>\n            <Link key=\"4\" to=\"/cotisation\">Cotisation</Link>\n            <Link key=\"5\" to=\"/licence\">Licence</Link> */}\n        </nav>\n        </>\n    )\n\n}\nexport default Header;\n","import { React, useState, useEffect } from 'react';\n\nconst Total = (props) => {\n\nconst {totalAmount} = props.datas;\nconst {cotisation,tarif_cotisation,options_ffme,type_licence,tarif_licence,mur,soutien} = props.datas.metadata;\n// const [opt,setOpt] = useState(false);\n// cotisation: '',\n//             tarif_cotisation: '',\n//             licence: '',\n//             type_licence: '',\n//             tarif_licence: '',\n\n\nreturn(\n    <div class=\"hello_total\">\n        {\n            cotisation !== '' ? ( <span>Adhésion au club {cotisation} <b>{tarif_cotisation/100} €</b></span>):('')\n        }\n        {\n            mur > 0 ? (<span>Mur d'escalade <b>{mur/100} €</b></span>):('')\n        }\n        {\n            soutien > 0 ? (<span>Cotisation de soutien <b>{soutien/100} €</b></span>):('')\n        }\n        {\n            type_licence ? ( <span>Licence et assurance {type_licence} <b>{tarif_licence/100} €</b></span>):('')\n        }\n        {\n            options_ffme.map( (item,i) => (\n                   <span key={i}>Options FFME {item.titre} <b>{item.plein_tarif/100} €</b></span>\n                    \n                ))\n        }\n        <span>Total <b>{totalAmount/100} €</b></span>\n    </div>\n)\n\n}\nexport default Total;","export const paysListe = [\n    { value:\"AFG\", land:\"Afghane (Afghanistan)\"},\n    { value:\"ALB\", land:\"Albanaise (Albanie)\"},\n    { value:\"DZA\", land:\"Algérienne (Algérie)\"},\n    { value:\"DEU\", land:\"Allemande (Allemagne)\"},\n    { value:\"USA\", land:\"Americaine (États-Unis)\"},\n    { value:\"AND\", land:\"Andorrane (Andorre)\"},\n    { value:\"AGO\", land:\"Angolaise (Angola)\"},\n    { value:\"ATG\", land:\"Antiguaise-et-Barbudienne (Antigua-et-Barbuda)\"},\n    { value:\"ARG\", land:\"Argentine (Argentine)\"},\n    { value:\"ARM\", land:\"Armenienne (Arménie)\"},\n    { value:\"AUS\", land:\"Australienne (Australie)\"},\n    { value:\"AUT\", land:\"Autrichienne (Autriche)\"},\n    { value:\"AZE\", land:\"Azerbaïdjanaise (Azerbaïdjan)\"},\n    { value:\"BHS\", land:\"Bahamienne (Bahamas)\"},\n    { value:\"BHR\", land:\"Bahreinienne (Bahreïn)\"},\n    { value:\"BGD\", land:\"Bangladaise (Bangladesh)\"},\n    { value:\"BRB\", land:\"Barbadienne (Barbade)\"},\n    { value:\"BEL\", land:\"Belge (Belgique)\"},\n    { value:\"BLZ\", land:\"Belizienne (Belize)\"},\n    { value:\"BEN\", land:\"Béninoise (Bénin)\"},\n    { value:\"BTN\", land:\"Bhoutanaise (Bhoutan)\"},\n    { value:\"BLR\", land:\"Biélorusse (Biélorussie)\"},\n    { value:\"MMR\", land:\"Birmane (Birmanie)\"},\n    { value:\"GNB\", land:\"Bissau-Guinéenne (Guinée-Bissau)\"},\n    { value:\"BOL\", land:\"Bolivienne (Bolivie)\"},\n    { value:\"BIH\", land:\"Bosnienne (Bosnie-Herzégovine)\"},\n    { value:\"BWA\", land:\"Botswanaise (Botswana)\"},\n    { value:\"BRA\", land:\"Brésilienne (Brésil)\"},\n    { value:\"GBR\", land:\"Britannique (Royaume-Uni)\"},\n    { value:\"BRN\", land:\"Brunéienne (Brunéi)\"},\n    { value:\"BGR\", land:\"Bulgare (Bulgarie)\"},\n    { value:\"BFA\", land:\"Burkinabée (Burkina)\"},\n    { value:\"BDI\", land:\"Burundaise (Burundi)\"},\n    { value:\"KHM\", land:\"Cambodgienne (Cambodge)\"},\n    { value:\"CMR\", land:\"Camerounaise (Cameroun)\"},\n    { value:\"CAN\", land:\"Canadienne (Canada)\"},\n    { value:\"CPV\", land:\"Cap-verdienne (Cap-Vert)\"},\n    { value:\"CAF\", land:\"Centrafricaine (Centrafrique)\"},\n    { value:\"CHL\", land:\"Chilienne (Chili)\"},\n    { value:\"CHN\", land:\"Chinoise (Chine)\"},\n    { value:\"CYP\", land:\"Chypriote (Chypre)\"},\n    { value:\"COL\", land:\"Colombienne (Colombie)\"},\n    { value:\"COM\", land:\"Comorienne (Comores)\"},\n    { value:\"COG\", land:\"Congolaise (Congo-Brazzaville)\"},\n    { value:\"COD\", land:\"Congolaise (Congo-Kinshasa)\"},\n    { value:\"COK\", land:\"Cookienne (Îles Cook)\"},\n    { value:\"CRI\", land:\"Costaricaine (Costa Rica)\"},\n    { value:\"HRV\", land:\"Croate (Croatie)\"},\n    { value:\"CUB\", land:\"Cubaine (Cuba)\"},\n    { value:\"DNK\", land:\"Danoise (Danemark)\"},\n    { value:\"DJI\", land:\"Djiboutienne (Djibouti)\"},\n    { value:\"DOM\", land:\"Dominicaine (République dominicaine)\"},\n    { value:\"DMA\", land:\"Dominiquaise (Dominique)\"},\n    { value:\"EGY\", land:\"Égyptienne (Égypte)\"},\n    { value:\"ARE\", land:\"Émirienne (Émirats arabes unis)\"},\n    { value:\"GNQ\", land:\"Équato-guineenne (Guinée équatoriale)\"},\n    { value:\"ECU\", land:\"Équatorienne (Équateur)\"},\n    { value:\"ERI\", land:\"Érythréenne (Érythrée)\"},\n    { value:\"ESP\", land:\"Espagnole (Espagne)\"},\n    { value:\"TLS\", land:\"Est-timoraise (Timor-Leste)\"},\n    { value:\"EST\", land:\"Estonienne (Estonie)\"},\n    { value:\"ETH\", land:\"Éthiopienne (Éthiopie)\"},\n    { value:\"FJI\", land:\"Fidjienne (Fidji)\"},\n    { value:\"FIN\", land:\"Finlandaise (Finlande)\"},\n    { value:\"FRA\", land:\"Française (France)\"},\n    { value:\"GAB\", land:\"Gabonaise (Gabon)\"},\n    { value:\"GMB\", land:\"Gambienne (Gambie)\"},\n    { value:\"GEO\", land:\"Georgienne (Géorgie)\"},\n    { value:\"GHA\", land:\"Ghanéenne (Ghana)\"},\n    { value:\"GRD\", land:\"Grenadienne (Grenade)\"},\n    { value:\"GTM\", land:\"Guatémaltèque (Guatemala)\"},\n    { value:\"GIN\", land:\"Guinéenne (Guinée)\"},\n    { value:\"GUY\", land:\"Guyanienne (Guyana)\"},\n    { value:\"HTI\", land:\"Haïtienne (Haïti)\"},\n    { value:\"GRC\", land:\"Hellénique (Grèce)\"},\n    { value:\"HND\", land:\"Hondurienne (Honduras)\"},\n    { value:\"HUN\", land:\"Hongroise (Hongrie)\"},\n    { value:\"IND\", land:\"Indienne (Inde)\"},\n    { value:\"IDN\", land:\"Indonésienne (Indonésie)\"},\n    { value:\"IRQ\", land:\"Irakienne (Iraq)\"},\n    { value:\"IRN\", land:\"Iranienne (Iran)\"},\n    { value:\"IRL\", land:\"Irlandaise (Irlande)\"},\n    { value:\"ISL\", land:\"Islandaise (Islande)\"},\n    { value:\"ISR\", land:\"Israélienne (Israël)\"},\n    { value:\"ITA\", land:\"Italienne (Italie)\"},\n    { value:\"CIV\", land:\"Ivoirienne (Côte d'Ivoire)\"},\n    { value:\"JAM\", land:\"Jamaïcaine (Jamaïque)\"},\n    { value:\"JPN\", land:\"Japonaise (Japon)\"},\n    { value:\"JOR\", land:\"Jordanienne (Jordanie)\"},\n    { value:\"KAZ\", land:\"Kazakhstanaise (Kazakhstan)\"},\n    { value:\"KEN\", land:\"Kenyane (Kenya)\"},\n    { value:\"KGZ\", land:\"Kirghize (Kirghizistan)\"},\n    { value:\"KIR\", land:\"Kiribatienne (Kiribati)\"},\n    { value:\"KNA\", land:\"Kittitienne et Névicienne (Saint-Christophe-et-Niévès)\"},\n    { value:\"KWT\", land:\"Koweïtienne (Koweït)\"},\n    { value:\"LAO\", land:\"Laotienne (Laos)\"},\n    { value:\"LSO\", land:\"Lesothane (Lesotho)\"},\n    { value:\"LVA\", land:\"Lettone (Lettonie)\"},\n    { value:\"LBN\", land:\"Libanaise (Liban)\"},\n    { value:\"LBR\", land:\"Libérienne (Libéria)\"},\n    { value:\"LBY\", land:\"Libyenne (Libye)\"},\n    { value:\"LIE\", land:\"Liechtensteinoise (Liechtenstein)\"},\n    { value:\"LTU\", land:\"Lituanienne (Lituanie)\"},\n    { value:\"LUX\", land:\"Luxembourgeoise (Luxembourg)\"},\n    { value:\"MKD\", land:\"Macédonienne (Macédoine)\"},\n    { value:\"MYS\", land:\"Malaisienne (Malaisie)\"},\n    { value:\"MWI\", land:\"Malawienne (Malawi)\"},\n    { value:\"MDV\", land:\"Maldivienne (Maldives)\"},\n    { value:\"MDG\", land:\"Malgache (Madagascar)\"},\n    { value:\"MLI\", land:\"Maliennes (Mali)\"},\n    { value:\"MLT\", land:\"Maltaise (Malte)\"},\n    { value:\"MAR\", land:\"Marocaine (Maroc)\"},\n    { value:\"MHL\", land:\"Marshallaise (Îles Marshall)\"},\n    { value:\"MUS\", land:\"Mauricienne (Maurice)\"},\n    { value:\"MRT\", land:\"Mauritanienne (Mauritanie)\"},\n    { value:\"MEX\", land:\"Mexicaine (Mexique)\"},\n    { value:\"FSM\", land:\"Micronésienne (Micronésie)\"},\n    { value:\"MDA\", land:\"Moldave (Moldovie)\"},\n    { value:\"MCO\", land:\"Monegasque (Monaco)\"},\n    { value:\"MNG\", land:\"Mongole (Mongolie)\"},\n    { value:\"MNE\", land:\"Monténégrine (Monténégro)\"},\n    { value:\"MOZ\", land:\"Mozambicaine (Mozambique)\"},\n    { value:\"NAM\", land:\"Namibienne (Namibie)\"},\n    { value:\"NRU\", land:\"Nauruane (Nauru)\"},\n    { value:\"NLD\", land:\"Néerlandaise (Pays-Bas)\"},\n    { value:\"NZL\", land:\"Néo-Zélandaise (Nouvelle-Zélande)\"},\n    { value:\"NPL\", land:\"Népalaise (Népal)\"},\n    { value:\"NIC\", land:\"Nicaraguayenne (Nicaragua)\"},\n    { value:\"NGA\", land:\"Nigériane (Nigéria)\"},\n    { value:\"NER\", land:\"Nigérienne (Niger)\"},\n    { value:\"NIU\", land:\"Niuéenne (Niue)\"},\n    { value:\"PRK\", land:\"Nord-coréenne (Corée du Nord)\"},\n    { value:\"NOR\", land:\"Norvégienne (Norvège)\"},\n    { value:\"OMN\", land:\"Omanaise (Oman)\"},\n    { value:\"UGA\", land:\"Ougandaise (Ouganda)\"},\n    { value:\"UZB\", land:\"Ouzbéke (Ouzbékistan)\"},\n    { value:\"PAK\", land:\"Pakistanaise (Pakistan)\"},\n    { value:\"PLW\", land:\"Palaosienne (Palaos)\"},\n    { value:\"PSE\", land:\"Palestinienne (Palestine)\"},\n    { value:\"PAN\", land:\"Panaméenne (Panama)\"},\n    { value:\"PNG\", land:\"Papouane-Néo-Guinéenne (Papouasie-Nouvelle-Guinée)\"},\n    { value:\"PRY\", land:\"Paraguayenne (Paraguay)\"},\n    { value:\"PER\", land:\"Péruvienne (Pérou)\"},\n    { value:\"PHL\", land:\"Philippine (Philippines)\"},\n    { value:\"POL\", land:\"Polonaise (Pologne)\"},\n    { value:\"PRT\", land:\"Portugaise (Portugal)\"},\n    { value:\"QAT\", land:\"Qatarienne (Qatar)\"},\n    { value:\"ROU\", land:\"Roumaine (Roumanie)\"},\n    { value:\"RUS\", land:\"Russe (Russie)\"},\n    { value:\"RWA\", land:\"Rwandaise (Rwanda)\"},\n    { value:\"LCA\", land:\"Saint-Lucienne (Sainte-Lucie)\"},\n    { value:\"SMR\", land:\"Saint-Marinaise (Saint-Marin)\"},\n    { value:\"VCT\", land:\"Saint-Vincentaise et Grenadine (Saint-Vincent-et-les Grenadines)\"},\n    { value:\"SLB\", land:\"Salomonaise (Îles Salomon)\"},\n    { value:\"SLV\", land:\"Salvadorienne (Salvador)\"},\n    { value:\"WSM\", land:\"Samoane (Samoa)\"},\n    { value:\"STP\", land:\"Santoméenne (Sao Tomé-et-Principe)\"},\n    { value:\"SAU\", land:\"Saoudienne (Arabie saoudite)\"},\n    { value:\"SEN\", land:\"Sénégalaise (Sénégal)\"},\n    { value:\"SRB\", land:\"Serbe (Serbie)\"},\n    { value:\"SYC\", land:\"Seychelloise (Seychelles)\"},\n    { value:\"SLE\", land:\"Sierra-Léonaise (Sierra Leone)\"},\n    { value:\"SGP\", land:\"Singapourienne (Singapour)\"},\n    { value:\"SVK\", land:\"Slovaque (Slovaquie)\"},\n    { value:\"SVN\", land:\"Slovène (Slovénie)\"},\n    { value:\"SOM\", land:\"Somalienne (Somalie)\"},\n    { value:\"SDN\", land:\"Soudanaise (Soudan)\"},\n    { value:\"LKA\", land:\"Sri-Lankaise (Sri Lanka)\"},\n    { value:\"ZAF\", land:\"Sud-Africaine (Afrique du Sud)\"},\n    { value:\"KOR\", land:\"Sud-Coréenne (Corée du Sud)\"},\n    { value:\"SSD\", land:\"Sud-Soudanaise (Soudan du Sud)\"},\n    { value:\"SWE\", land:\"Suédoise (Suède)\"},\n    { value:\"CHE\", land:\"Suisse (Suisse)\"},\n    { value:\"SUR\", land:\"Surinamaise (Suriname)\"},\n    { value:\"SWZ\", land:\"Swazie (Swaziland)\"},\n    { value:\"SYR\", land:\"Syrienne (Syrie)\"},\n    { value:\"TJK\", land:\"Tadjike (Tadjikistan)\"},\n    { value:\"TZA\", land:\"Tanzanienne (Tanzanie)\"},\n    { value:\"TCD\", land:\"Tchadienne (Tchad)\"},\n    { value:\"CZE\", land:\"Tchèque (Tchéquie)\"},\n    { value:\"THA\", land:\"Thaïlandaise (Thaïlande)\"},\n    { value:\"TGO\", land:\"Togolaise (Togo)\"},\n    { value:\"TON\", land:\"Tonguienne (Tonga)\"},\n    { value:\"TTO\", land:\"Trinidadienne (Trinité-et-Tobago)\"},\n    { value:\"TUN\", land:\"Tunisienne (Tunisie)\"},\n    { value:\"TKM\", land:\"Turkmène (Turkménistan)\"},\n    { value:\"TUR\", land:\"Turque (Turquie)\"},\n    { value:\"TUV\", land:\"Tuvaluane (Tuvalu)\"},\n    { value:\"UKR\", land:\"Ukrainienne (Ukraine)\"},\n    { value:\"URY\", land:\"Uruguayenne (Uruguay)\"},\n    { value:\"VUT\", land:\"Vanuatuane (Vanuatu)\"},\n    { value:\"VAT\", land:\"Vaticane (Vatican)\"},\n    { value:\"VEN\", land:\"Vénézuélienne (Venezuela)\"},\n    { value:\"VNM\", land:\"Vietnamienne (Viêt Nam)\"},\n    { value:\"YEM\", land:\"Yéménite (Yémen)\"},\n    { value:\"ZMB\", land:\"Zambienne (Zambie)\"},\n    { value:\"ZWE\", land:\"Zimbabwéenne (Zimbabwe)\"}\n];","import { useState } from 'react';\n\nconst useCotisations = () => {\n\n    const [liste,setListe] = useState([]);\n    const ROOT_URL_HELLOASSO = the_ajax_script.rootUrl + \"goueg-helloasso/v1/set_cotisations\";\n    \n    const data = new FormData();\n        data.append('nonce', the_ajax_script.nonce );\n        //data.append('metadata', JSON.stringify(metas) );\n    \n    function handelCotisation ( dateBirthday ) {\n\n        data.append('date', dateBirthday );\n\n        fetch( \n            ROOT_URL_HELLOASSO ,\n            { \n            method: 'POST',\n            body: data,\n            headers: {\n                'X-WP-Nonce': the_ajax_script.rootNonce\n            }\n            })\n            .then( res => res.json()  )\n            .then( json => { \n                //console.log( json );\n                setListe( json );\n            } )\n            .catch( error => { console.log(error) } )\n\n    }\n\n    return[liste,handelCotisation];\n\n}\nexport default useCotisations;","/**\n * Hook pour stocker les informations au format hello asso\n */\nimport { React, useEffect, useState } from 'react';\nimport useCotisations from './useCotisations';\n\nconst useDatas = () => {\n\n    const [liste,handelCotisation] = useCotisations();\n    const [payer,setPayer] = useState({});\n    const [datas,setDatas] = useState( {\n        totalAmount: 0,\n        initialAmount: 0,\n        itemName: 'Adhésion au Club GDA',\n        backUrl: 'https://www.club-montagne.net/helloasso/back.php', \n        errorUrl: 'https://www.club-montagne.net/helloasso/error.php', \n        returnUrl: 'https://www.club-montagne.net/helloasso/return.php', \n        containsDonation: true, \n        payer: {},\n        metadata: {\n            soutien: 0,\n            mur: 0,\n            cotisation: '',\n            tarif_cotisation: 0,\n            cotisation_famille: '',\n            licence: '',\n            type_licence: '',\n            licence_famille: '',\n            tarif_licence: 0,\n            options_ffme: [],\n            famille_adulte: [],\n            famille_enfant: [],\n            famille_supp: [],\n            payer: {}\n        }\n    } );\n\n    const infos_for_total = [];\n\n/**\n * On surveille la mise à jour des information de l'adhérent\n * et on l'injecte dans datas.payer:{}\n * à chaque mise à jour de payer on appel handelCotisation\n * pour avoir les bonnes cotisations et licences selon la date de naissance\n */\n    useEffect( () => {\n \n        if( payer.dateOfBirth != undefined ){\n            console.log( 'Payer :: ',payer );\n            \n            handelCotisation( payer.dateOfBirth );\n\n            setDatas({...datas,\n                payer: payer,\n                metadata: {\n                    ...datas.metadata,\n                    options_ffme: [],\n                    payer: payer\n                }\n            });\n        }\n\n    }, [payer]);\n/** */\n\n    useEffect ( () => {\n        \n        doTotal();\n        \n    },[datas.metadata]);\n\n/**\n * Calcul du total\n */\n    const doTotal = () => {\n\n        // console.log(\"soutien\",datas.metadata.soutien,\n        //             \"mur\",datas.metadata.mur,\n        //             \"tarif_cotisation\", datas.metadata.tarif_cotisation,\n        //             \"tarif_licence\",datas.metadata.tarif_licence\n        // );\n\n        let options = 0;\n\n        metadata.options_ffme.map( (item,i) => {\n            //console.log(\"Options\",item.titre,item.plein_tarif);\n            options += Number(item.plein_tarif);\n        })\n\n        \n        let total = 0;\n\n        total += Number( datas.metadata.soutien) ;\n        total += Number( datas.metadata.mur );\n        total += Number( datas.metadata.tarif_cotisation );\n        total += Number( datas.metadata.tarif_licence ) || 0;\n        total += Number( options );\n\n        // Manque Mur d'escalade famille dans formulaire famille\n\n        setDatas({...datas,\n            totalAmount: total,\n            initialAmount: total});\n    }\n\n    useEffect( () => {\n        console.log(datas);\n    },[datas]);\n/**\n * \n * @param  {...any} event \n * @event[0] = string\n * @event[1] = object\n */\n    const handelDatas = (...event) => {\n        //console.log( event[0] , event[1].firstName );\n        switch( event[0] ){\n            case 'adherent':\n                //setDatas({...datas, payer: event[1] });\n                setPayer( event[1] );\n                break;\n            case 'cotisation':\n                // console.log('cotisation', event[1].titre, event[1].tarif);\n\n                if( event[1].titre != 'ANP') {\n                    setDatas({...datas,\n                                metadata: {\n                                ...datas.metadata,\n                                cotisation: event[1].titre,\n                                tarif_cotisation: Number(event[1].tarif)\n                            } });\n                }else{\n                    /**\n                     * Si c'est une adhésion ANP adhérent non pratiquant\n                     * on reset toutes les infos..\n                     */\n                    setDatas({...datas,\n                        metadata: {\n                        ...datas.metadata,\n                        mur: 0,\n                        cotisation: event[1].titre,\n                        tarif_cotisation: Number(event[1].tarif),\n                        cotisation_famille: '',\n                        licence: '',\n                        type_licence: '',\n                        licence_famille: '',\n                        tarif_licence: 0,\n                        options_ffme: [],\n                        famille_adulte: [],\n                        famille_enfant: [],\n                        famille_supp: []\n                    } });\n                }\n\n            break;\n            case 'licence':\n                //console.log('licence', event[1].licence, event[1].titre, event[1] );\n                setDatas({...datas, metadata: {\n                            ...datas.metadata,\n                            licence: event[1].licence || '',\n                            licence_famille: event[1].type || '',\n                            type_licence: event[1].titre || '',\n                            tarif_licence: Number(event[1].tarif) || 0\n                        } });\n                        \n            break;\n            case 'options':\n                setDatas( {...datas, metadata:{\n                    ...datas.metadata,\n                    options_ffme: event[1]\n                }})\n            break;\n            case 'add_membre':\n                setDatas( {...datas, metadata:{ \n                    ...datas.metadata,\n                    famille_supp: event[1]\n                }})\n            break;\n            case 'mur':\n                setDatas( {...datas, metadata:{\n                    ...datas.metadata,\n                    mur: Number(event[1])\n                }})\n            break;\n            case 'soutien':\n                setDatas( {...datas, metadata:{\n                    ...datas.metadata,\n                    soutien: Number(event[1])\n                }})\n            break;\n        }\n        \n    }\n\n    const user = datas.payer;\n    const metadata = datas.metadata;\n\n    return [datas,user,liste,metadata,handelDatas];\n\n}\nexport default useDatas;","import { useState } from 'react';\n\nconst useEmail = () => {\n    \n    const ROOT_URL_HELLOASSO = the_ajax_script.rootUrl + \"goueg-helloasso/v1/user_email\";\n    const [isexist,setIsexist] = useState('');\n    \n    const data = new FormData();\n        //data.append('nonce', the_ajax_script.nonce );\n        //data.append('metadata', JSON.stringify(metas) );\n    \n    function handelUserEmail ( userEmail = 'test@test.com' ) {\n        data.append('email', userEmail );\n        setIsexist('');\n        fetch( \n            ROOT_URL_HELLOASSO ,\n            { \n            method: 'POST',\n            body: data,\n            headers: {\n                'X-WP-Nonce': the_ajax_script.rootNonce\n            }\n            })\n            .then( res => res.json()  )\n            .then( json => { \n                setIsexist(json.email);\n            } )\n            .catch( error => { console.log(error) } )\n    }\n\n    return [isexist,handelUserEmail];\n\n}\nexport default useEmail;","import { React, useEffect, useState } from 'react';\n\nconst useFetch = () => {\n\n    const [liste,setListe] = useState([]);\n    \n    const ROOT_URL_HELLOASSO = the_ajax_script.rootUrl + \"goueg-helloasso/v1/set_datas\";\n    \n    const data = new FormData();\n        //data.append('nonce', the_ajax_script.nonce );\n        //data.append('metadata', JSON.stringify(metas) );\n    \n    function handelFetch () {\n\n        fetch( \n            ROOT_URL_HELLOASSO ,\n            { \n            method: 'POST',\n            body: data,\n            headers: {\n                'X-WP-Nonce': the_ajax_script.rootNonce\n            }\n            })\n            .then( res => res.json()  )\n            .then( json => { \n                setListe( json );\n            } )\n            .catch( error => { console.log(error) } )\n\n    }\n\n\n    return [liste,handelFetch];\n\n\n}\nexport default useFetch;","import { React, useState, useEffect } from \"react\";\n\nconst useHello = () => {\n\n  const [token,setToken] = useState('');\n  const [datas,setData] = useState( null );\n  const [url,setUrl] = useState('');\n\n  useEffect( () => {\n    if( url != '' ){\n      window.location.href = url;\n    }\n    \n  },[url]);\n\n  /**\n   * Si on a un token on appel Hello pour obtenir l'url\n   * de paiement..\n   */\n  useEffect( () => {\n    \n    if( token !== ''){\n\n      fetch(\"https://api.helloasso-sandbox.com/v5/organizations/goueg/checkout-intents\", {\n        method: \"POST\",\n        headers: {\n          \"accept\": \"application/json\",\n          \"Content-Type\": \"application/json\",\n          \"authorization\": \"Bearer \"+token\n        },\n        body: JSON.stringify(datas)\n        //.toString()\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          console.log( data, );\n          setUrl(data.redirectUrl);\n        })\n        .catch((error) => console.log(error));\n        \n\n    }else{\n      console.log(' on fait rien on attend...');\n      \n    }\n  } ,[token]);\n\n\n\n  const keys = new FormData();\n  keys.append(\"client_id\",\"a0fead5a1ba4404eacf4b9de755fb3b9\");\n  keys.append(\"client_secret\",\"NOfvEhtPEa4CBhrom8Q6nkBIwcZOapxr\");\n  keys.append(\"grant_type\",\"client_credentials\");\n\n  const startPaye = (datas) => {\n    setData(datas);\n  }\n/**\n * Si datas est plein...\n * on appel l'api helloasso pour obtenir le token\n */\n    useEffect( () => {\n\n      if( datas ){\n\n        fetch(\"https://api.helloasso-sandbox.com/oauth2/token\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\n          },\n          body: new URLSearchParams(keys).toString()\n          //.toString()\n        })\n          .then((response) => response.json())\n          .then((data) => {\n            setToken(data.access_token);\n          })\n          .catch((error) => console.log(error));\n        \n      }\n      \n    },[datas]);\n\n\n    return [token,startPaye];\n}\nexport default useHello;","import { React, useState, useEffect } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport FormFamille from '../components/FormFamille';\nimport Total from '../components/Total';\nimport useHello from '../hooks/useHello';\n\nconst Cotisation = (props) => {\n    \n    const {nav,setNav,liste,datas,metadata,handelDatas} = props;\n    const navigate = useNavigate();\n    const [token,startPaye] = useHello();\n\n    const {club} = liste;\n    //console.log('cotisation',club,user);\n    \n\n/** \n * POUR LA NAVIGATION\n * On regarde si le label Formulaire existe dans nav\n * si il n'existe pas on l'ajoute\n */\n    function trouve( name ){\n        return nav.find( (nav) => nav.label === name );\n    }\n\n    useEffect( () => {\n\n        if( trouve('Cotisation') === undefined ){\n            setNav([...nav,\n                { to: '/cotisation', label: 'Cotisation'}\n            ]);\n        }\n\n    }, []);\n\n    const handelClickValidation = (event) => {\n        //console.log('validation', event.target, club );\n        navigate('/licence');\n    }\n/** */\n\n    const handelClickCotisation = (event) => {\n\n        const {name,value} = event.target;\n\n        const el = Object.entries(club).reduce( (newObject,[key,obj]) => {\n          if( obj.titre === value ) {\n            newObject = obj;\n          }\n          return newObject;\n        },{});\n        \n        handelDatas('cotisation',el);\n\n    }\n\n    const handelClickMurSoutien = (event) => {\n\n        const {name,value,checked} = event.target;\n\n        switch (name) {\n            case 'mur':\n                if( checked ){\n                    handelDatas('mur',value);\n                }else{\n                    handelDatas('mur',0);\n                }   \n                break;\n            case 'soutien':\n                if( checked ){\n                    handelDatas('soutien',value);\n                }else{\n                    handelDatas('soutien',0);\n                }  \n                break;\n        }\n        \n    }\n\n    function handelClickPrecedente(event){\n        //console.log('validation', event.target, club );\n        nav.map( (item,i) => {\n            \n            if( item.label == 'Cotisation') {\n                let index = i-1;\n               navigate( nav[index].to );\n            }\n            \n        })\n    }\n/**\n * On paye !\n */\n    const handelPaye = (event) => {\n        startPaye(datas);\n    }\n\n    // useEffect( () => {\n    //     console.log(token);\n    // },[token])\n\n    return(\n    <div>\n       <fieldset><legend>Choix de cotisation au club</legend>\n        {\n            club ? (\n            Object.entries(club).map( ([key,obj]) => (\n                    // {\"key\":{id:1,titre:\"ddk\"}}\n                    <label className=\"label_radio\" key={key}>\n                        <input type=\"radio\"\n                            onChange={ handelClickCotisation }\n                            name=\"type_cotisation\" value={obj.titre}\n                            checked={ metadata.cotisation === obj.titre }\n                            />\n                            {obj.descriptif} :&nbsp;<b>{obj.tarif/100}€</b>\n                    </label>\n                    )\n                )\n            ):('')\n        }\n            <h4 className=\"hello_h4\">Voulez-vous utiliser le mur d'escalade au gymnase Berthe de Boissieux ?</h4>\n                <label className=\"label_radio\">\n                    <input type=\"checkbox\" name=\"mur\" checked={ metadata.mur } value=\"3000\" onChange={handelClickMurSoutien} />oui :&nbsp;<b>30€</b>\n                    </label>\n            <h4 className=\"hello_h4\">Voulez-vous ajouter une cotisation de soutien au club ?</h4>\n                <label className=\"label_radio\">\n                    <input type=\"checkbox\" name=\"soutien\" checked={ metadata.soutien } value=\"1000\" onChange={handelClickMurSoutien} />cotisation de soutien au club :&nbsp;<b>10€</b>\n                    </label>\n        </fieldset>\n\n\n            {\n                metadata.cotisation === 'F/F2' ? ( <FormFamille metadata={metadata} handelDatas={handelDatas} /> ):('')\n            }\n\n            <Total datas={datas}/>\n            <div className=\"navig_bottom\">\n                <button type=\"button\" className='bt_bleu_outline' onClick={handelClickPrecedente}><i className=\"icon-chevron-gauche\"></i>&nbsp;Étape précédente</button>\n            {\n                metadata.cotisation === 'ANP' ? \n                (<button type=\"button\" className='bt_vert' onClick={handelPaye}><i className=\"icon-valider\"></i>&nbsp;Payer mon adhésion</button>):('') \n\n            }\n            {\n                metadata.cotisation != 'ANP' && metadata.cotisation != '' ? \n                (<button type=\"button\" className='bt_bleu' onClick={ handelClickValidation }>Étape suivante&nbsp;<i className=\"icon-chevron-droite\"></i></button>):('')\n            }\n            </div>\n    </div>\n    )\n}\nexport default Cotisation;","const Errors = () => {\n    return(\n        <h1>Errors</h1>\n    )\n}\nexport default Errors;","import { React, useEffect } from 'react';\nimport { useNavigate } from \"react-router-dom\";\n\nimport useEmail from '../hooks/useEmail';\nimport { paysListe } from '../datas/paysListe';\n\nconst Form = (props) => {\n\n    const {nav,setNav,user,handelDatas,setNouveau} = props;\n    const [isexist,handelUserEmail] = useEmail();\n    const navigate = useNavigate();\n\n/**\n * On regarde si le label Formulaire existe dans nav\n * si il n'existe pas on l'ajoute\n */\n    function trouve( name ){\n        return nav.find( (nav) => nav.label === name );\n    }\n\n    useEffect( () => {\n\n        if( trouve('Formulaire') === undefined ){\n            setNav([...nav,\n                { to: '/formulaire', label: 'Formulaire'}\n            ]);\n        }\n        \n        setNouveau('nouveau');\n\n    }, []);\n/** */\n\n    useEffect( () => {\n        \n        if( isexist === false ){\n            navigate('/cotisation');\n        }else if (isexist === '') {\n            console.log('début …');\n        }else{\n            alert(`l\\'email ${user.email} existe déjà dans nos comptes d\\'adhérents !!`);\n        }\n        \n    },[isexist]);\n\n    const handelSubmit = (event) => {\n        event.preventDefault();\n\n        let champs = new FormData( event.target );\n        let adherent = Object.fromEntries(champs); \n        \n        handelUserEmail( adherent.email );\n        handelDatas('adherent', adherent );\n\n    }\n    \n    return(\n        <form onSubmit={handelSubmit} className=\"form_inscription\">\n\n        <fieldset>\n        <legend>Formulaire d'adhésion au club</legend>\n\n            <div className=\"label_ligne\">\n                <label>Votre nom:\n                    <input type=\"text\" name=\"lastName\" id=\"lastName\" defaultValue={user.lastName} required />\n                </label>\n                <label>Votre prenom:\n                    <input type=\"text\" name=\"firstName\" id=\"firstName\" defaultValue={user.firstName} required />\n                </label>\n            </div>\n\n            <div className=\"label_ligne\">\n                <label>Votre email:\n                    <input type=\"email\" name=\"email\" id=\"email\" defaultValue={user.email} required />\n                </label>\n                <label>Votre Téléphone:\n                    <input type=\"tel\" name=\"billing_phone\" id=\"billing_phone\" defaultValue={user.billing_phone} required />\n                </label>\n            </div>\n\n            <div className=\"label_ligne\">\n                <div>Votre genre:\n                    <div>\n                        <label><input type=\"radio\" value=\"f\" name=\"gda_genre\" defaultChecked={user.gda_genre === 'f'} required />Femme</label>\n                        <label><input type=\"radio\" value=\"h\" name=\"gda_genre\" defaultChecked={user.gda_genre === 'h'} />Homme</label>\n                    </div>\n                </div>\n                <label>Votre date de naissance:\n                    <input type=\"date\" name=\"dateOfBirth\" id=\"dateOfBirth\" defaultValue={user.dateOfBirth} required />\n                </label>\n            </div>\n\n            <div className=\"label_ligne\">\n                <label>Votre lieu de naissance:\n                    <input type=\"text\" name=\"gda_lieu\" id=\"gda_lieu\" defaultValue={user.gda_lieu} required />\n                </label>\n                <label>Votre nationalité:\n                    <select name=\"country\" defaultValue='FRA'>\n                        {\n                            paysListe.map( (item,i) => (\n                                <option value={item.value}>{item.land}</option>\n                            ))\n                        }\n                    </select>\n                </label>\n            </div>\n\n            <div className=\"label_adresse\">\n                <label>Votre adresse:\n                    <input type=\"text\" name=\"address\" id=\"address\" defaultValue={user.address} required />\n                </label>\n            </div>\n\n            <div className=\"label_ligne\">\n                <label>Votre ville:\n                    <input type=\"text\" name=\"city\" id=\"city\" defaultValue={user.city} required />\n                </label>\n                <label>Votre code postal:\n                    <input type=\"text\" name=\"zipCode\" id=\"zipCode\" defaultValue={user.zipCode} required />\n                </label>\n            </div>\n            </fieldset>\n\n            <fieldset>\n            <legend>Personne à prévenir en cas de problème:</legend>\n\n            <div className=\"label_ligne\">\n                <label>Nom de la personne:\n                    <input type=\"text\" name=\"gda_personne\" id=\"gda_personne\" defaultValue={user.gda_personne} required />\n                </label>\n                <label>Téléphone de la personne:\n                    <input type=\"tel\" name=\"gda_tel_personne\" id=\"gda_tel_personne\" defaultValue={user.gda_tel_personne} required />\n                </label>\n            </div>\n            </fieldset>\n\n            <button type=\"submit\" className='bt_bleu'>Étape suivante</button>\n\n        </form>\n    )\n}\nexport default Form;","import { React, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Home = (props) => {\n\n    const {user,nouveau} = props;\n\n\n    return(\n        <>\n        {\n            user.firstName ? (\n                <>\n                <div className=\"bandeau_haut\">\n                    <span className=\"bandeau_haut_titre\">Bonjour, <b>{user.firstName} {user.lastName}</b></span>\n                    <a className=\"hello_deconnexion\" href={\"/wp-login.php?action=logout&_wpnonce=\"+the_ajax_script.logoutNonce+\"&redirect_to=page-d-exemple\"}>\n                    <i className=\"icon-close\"></i>&nbsp;Déconnexion\n                    </a>\n                </div>\n                <div className=\"content_bouton_start\">\n                    {\n                    nouveau == 'adherent' ? (\n                        <Link key=\"1\" to=\"/cotisation\" className='bt_bleu_outline'>Commencer mon adhésion&nbsp;<i className=\"icon-chevron-droite\"></i></Link>\n                    ):(\n                        <Link key=\"1\" to=\"/formulaire\" className='bt_bleu_outline'>Commencer mon adhésion&nbsp;<i className=\"icon-chevron-droite\"></i></Link>\n                    )\n                    }\n                </div>\n                </>\n            ):(\n                <div className='content_start'>\n\n                    <div>\n                        <h2 className='titre_adhesion'>Je suis déjà adhérent</h2>\n                        <a href=\"/member-login?redirect_to=page-d-exemple\" className='bt_bleu'>Je m'indentifie</a>\n                    </div>\n\n                    <div>\n                        <h2 className='titre_adhesion'>Je suis nouveau...</h2>\n                        <Link key=\"2\" to=\"/formulaire\" className='bt_bleu_outline'>Je crée un compte</Link>\n                    </div>\n\n                </div>\n            )\n        }\n        \n        </>\n    )\n}\nexport default Home;","import { React, useState, useEffect } from 'react';\nimport { useNavigate } from \"react-router-dom\"\nimport Total from '../components/Total';\nimport useHello from '../hooks/useHello';\n\nconst Licence = (props) => {\n    \n    const navigate = useNavigate();\n\n    const [token,startPaye] = useHello();\n/**\n * Récupération en provenance de App.js\n * de @param selection []\n */\n    const {nav,setNav,liste,datas,handelDatas,selection,setSelection} = props;\n    const {activites,famille,options} = props.selection;\n\n/**\n * @param selectlicence ['SKIR','ALPI','ESCA'] utiliser en local ici dans Licence.js\n * contient la selection faite pour les licences\n * afin de savoir si c'est ffme ou ffr\n */\n// let toto = [];\n\n//     activites.map( (item,i) => {\n//         if( item.checked ){\n//             toto.push( item.name )\n//         }\n//         if( item.labelchecked ){\n//             toto.push( item.labelname );\n//         }\n//     });\n    \nconst [selectlicence,setSelectlicence] = useState([]);\n\n\n/** \n * POUR LA NAVIGATION\n * On regarde si le label Formulaire existe dans nav\n * si il n'existe pas on l'ajoute\n */\nfunction trouve( name ){\n    return nav.find( (nav) => nav.label === name );\n}\n\nuseEffect( () => {\n\n    if( trouve('Licence') === undefined ){\n        setNav([...nav,\n            { to: '/licence', label: 'Licence'}\n        ]);\n    }\n}, []);\n\n/**\n * Mise à jour de selection [] dans App.js\n */\n    const handelCheckbox = (event) => {\n\n        let {name} = event.target;\n        //console.log( 'handelCheckbox',name );\n        \n        let newselection = activites.map( (item,index) => {\n            if( item.name === name ){\n                item.checked = !item.checked;\n                if( item.name == 'SKIR' || item.name == 'ALPI'){\n                    item.show = !item.show;\n                    if( ! item.checked ){\n                        item.labelchecked = false;\n                    }\n                }\n            }\n            return item;\n        })\n\n        setSelection({...selection, activites: newselection });\n    }\n    /**\n     * Mise à jour du sous choix > à PD\n     */\n    const handelNiveau = ( event ) => {\n\n        let {name} = event.target;\n\n        let newselection = activites.map( (item,index) => {\n            if( item.labelname === name ){\n                item.labelchecked = !item.labelchecked;\n            }\n            return item;\n        })\n\n        setSelection({...selection, activites: newselection });\n        \n    }\n/**\n * \n */\n\n/**\n * Choix du type de licence famille ou seul\n */\n    const handelFamille = (event) => {\n        const {value} = event.target;\n        setSelection({...selection,famille:value});\n    }\n\n    useEffect( () => {\n        /**\n         * On stock les informations de selection pour \n         * savoir quelle licence proposer...\n         */\n        let el = [];\n\n        activites.forEach(element => {\n            if( element.checked && !element.labelchecked ){\n                el.push(element.name);\n            }\n            if( element.checked && element.labelchecked ){\n                el.push(element.labelname);\n            }\n        });\n        setSelectlicence(el);\n \n    },[activites]);\n/**\n * Choix Options\n */\nconst handelOptions = (event) => {\n\n    const {name,checked} = event.target;\n\n    console.log('handelOptions',name,checked);\n\n   let new_options = options.map( (item,i) => {\n            if (item.name === name){\n               item.checked = checked; }\n             return item;\n            } );\n       \n    setSelection({...selection,\n            options:new_options\n        }\n    );\n}\nconst handelResetOptions = () => {\n    let new_options = options.map( (item,i) => {\n           item.checked = false;\n         return item;\n        } );\n   \n    setSelection({...selection,\n            options:new_options\n        }\n    );  \n}\nuseEffect( () => {\n    let options_for_datas = options.filter( item => item.checked );\n    handelDatas('options',options_for_datas);\n},[options]);\n\n/**\n * On paye !\n */\nconst handelPaye = (event) => {\n    startPaye(datas);\n}\n    useEffect( () => {\n        console.log(token);\n    },[token])\n/**\n * Choix de la licence selon les activitées et le niveau choisi\n */\n    useEffect( () => {\n        /**\n         * si il n'y a pas de licence on vide le champs type_licence dans useDatas\n         * ça évite le bug d'affichage des options\n         */\n        // if(selectlicence.length === 0 ){\n        //     handelDatas('licence',[]);\n        // }\n\n        // if( datas.metadata.type_licence === ''){\n        //     handelResetOptions();\n        // }\n        \n\n        if( selectlicence.length !==0 && famille !==\"\" )\n\n        if( selectlicence.includes('ESCA') ||\n            selectlicence.includes('ALPI_SUP') ||\n            selectlicence.includes('SKIR_SUP') ){\n            \n            const {licences} = liste.ffme;\n\n            if( famille == 'famille'){ \n               \n                Object.entries(licences).map( ([item,obj]) => {\n                    \n                        if( obj.titre == 'FFME_FF2' ){\n                            handelDatas('licence',obj);\n                        }  \n                });\n\n            }else{\n\n                Object.entries(licences).map( ([item,obj]) => {\n                    \n                    if( obj.titre == 'FFME_FJ' ){\n                        handelDatas('licence',obj);\n                    }else{\n                        if( obj.titre == 'FFME_FA' ){\n                        handelDatas('licence',obj);\n                        }\n                    }\n                });\n            }\n            \n        }else{\n    \n            if( selectlicence.includes('ALPI') ||\n                selectlicence.includes('SKIR') ||\n                selectlicence.includes('VTT') ||\n                selectlicence.includes('VF') ||\n                selectlicence.includes('CA') ||\n                selectlicence.includes('SKIA') ){\n\n                    const {licences} = liste.ffr;\n\n                    Object.entries(licences).map( ([item,obj]) => {\n                    \n                        if( famille == 'famille'){\n\n                            if( obj.titre == 'FFR_FMPN' ){\n                                handelDatas('licence',obj);\n                            } \n                        }else{\n                            if( obj.titre == 'FFR_IMPN' || obj.titre == 'FFR_IMPNJ'){\n                                handelDatas('licence',obj);\n                            }\n                        }\n\n                    });\n\n                }else{\n\n                    const {licences} = liste.ffr;\n\n                    Object.entries(licences).map( ([item,obj]) => {\n\n                        if( famille == 'famille'){\n\n                            if( obj.titre == 'FFR_FRA'){\n                                handelDatas('licence',obj);\n                            }\n                            \n                        }else{\n                            if( obj.titre == 'FFR_IRA' || obj.titre == 'FFR_IMPNJ'){\n                                handelDatas('licence',obj);\n                            }\n                        }\n\n                    })\n\n                }\n\n            /**\n             * Remise à zéro des options partout !\n             */\n            handelResetOptions();\n\n        }\n\n    } ,[selectlicence,famille]);\n\n\nfunction handelClickPrecedente(event){\n        //console.log('validation', event.target, club );\n        nav.map( (item,i) => {\n            \n            if( item.label == 'Licence') {\n                let index = i-1;\n               navigate( nav[index].to );\n            }\n            \n        })\n    }\n\n    return(\n        <>\n        <h2>Licences / Assurances</h2>\n        <fieldset>\n            <legend>Prenez-vous une licence pour:</legend>\n            <div className=\"ligne_licence\">\n                <label className=\"label_radio\">\n                <input type=\"radio\" name=\"licence_type\" value=\"seul\" onChange={handelFamille} checked={famille === 'seul'} /> Vous seulement\n                </label>\n            </div>\n            <div className=\"ligne_licence\">\n                <label className=\"label_radio\">\n                <input type=\"radio\" name=\"licence_type\" value=\"famille\" onChange={handelFamille} checked={famille === 'famille'}/> Vous et votre famille\n                </label>\n            </div>\n        </fieldset>\n        {\n            famille !== '' ? (\n            <div className=\"content_membre\">\n                <fieldset>\n                        <legend>Cochez les activités que vous voulez pratiquer:</legend>\n                        \n                        {\n                        activites.map( (item,i) => \n                            (\n                            <div className=\"ligne_licence\">\n                            <label key={i} className=\"label_radio\">\n                                <input type=\"checkbox\" name={item.name} id={item.name} checked={ item.checked } onChange={handelCheckbox} />\n                                {item.descriptif}\n                            </label>\n                                {\n                                    item.show ? (\n                                        <div className=\"sous_ligne_licence\">\n                                            {item.label}\n                                            <span className=\"label_sous_ligne_licence\">\n                                                <input type=\"checkbox\" name={item.labelname} checked={item.labelchecked} onChange={handelNiveau} /> oui\n                                            </span>\n                                        </div>\n                                ):('')\n                                }\n                            </div>\n                            )\n                            )\n                        }\n                        \n                    </fieldset>\n\n                {\n                            \n                    datas.metadata.type_licence == 'FFME_FA' || \n                    datas.metadata.type_licence == 'FFME_FJ' || \n                    datas.metadata.type_licence == 'FFME_FF2' ? (\n                    \n                    <fieldset>\n                        <legend>Options supplémentaires (nom obligatoire)</legend>\n                        {\n                        options.map( (item,i) => (\n                            <div className=\"ligne_licence\">\n                                <label key={item.id} className=\"label_radio\">\n                                    <input type=\"checkbox\" name={item.name} id={item.name} checked={item.checked} value={item.titre} onClick={handelOptions} />\n                                    {item.titre}&nbsp;<b>{item.plein_tarif/100}€</b>\n                                </label>\n                            </div>\n                        ))\n                        }\n                    </fieldset>\n                    \n                    ):('')\n\n                }\n\n            </div>\n\n            ):('')\n            \n        }\n        \n        <Total datas={datas}/>\n        <div className=\"navig_bottom\">\n                <button type=\"button\" className='bt_bleu_outline' onClick={handelClickPrecedente}>\n                    <i className=\"icon-chevron-gauche\"></i>&nbsp;Étape précédente\n                </button>\n            {\n                datas.metadata.type_licence &&\n                <button type=\"button\" id=\"valider\" className='bt_vert' onClick={handelPaye}>\n                    <i className=\"icon-valider\"></i>&nbsp;Payer mon adhésion\n                </button>\n            }\n        </div>\n        </>\n    )\n}\nexport default Licence;","// extracted by mini-css-extract-plugin\nexport {};","/**\n * React Router DOM v6.25.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { UNSAFE_mapRouteProperties, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, Router, UNSAFE_useRoutesImpl, UNSAFE_NavigationContext, useHref, useResolvedPath, useLocation, useNavigate, createPath, UNSAFE_useRouteId, UNSAFE_RouteContext, useMatches, useNavigation, useBlocker } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_useRouteId, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, renderMatches, resolvePath, useActionData, useAsyncError, useAsyncValue, useBlocker, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { stripBasename, UNSAFE_warning, createRouter, createBrowserHistory, createHashHistory, UNSAFE_ErrorResponseImpl, UNSAFE_invariant, joinPaths, IDLE_FETCHER, matchPath } from '@remix-run/router';\nexport { UNSAFE_ErrorResponseImpl } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nconst defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && (\n  // Ignore everything but left clicks\n  !target || target === \"_self\") &&\n  // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n    let value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n  }, []));\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach(value => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n  return searchParams;\n}\n// One-time check for submitter support\nlet _formDataSupportsSubmitter = null;\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(document.createElement(\"form\"),\n      // @ts-expect-error if FormData supports the submitter parameter, this will throw\n      0);\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\nconst supportedFormEncTypes = new Set([\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"]);\nfunction getFormEncType(encType) {\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"\\\"\" + encType + \"\\\" is not a valid `encType` for `<Form>`/`<fetcher.Form>` \" + (\"and will default to \\\"\" + defaultEncType + \"\\\"\")) : void 0;\n    return null;\n  }\n  return encType;\n}\nfunction getFormSubmissionInfo(target, basename) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n  let body;\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(target);\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    }\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType;\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let {\n        name,\n        type,\n        value\n      } = target;\n      if (type === \"image\") {\n        let prefix = name ? name + \".\" : \"\";\n        formData.append(prefix + \"x\", \"0\");\n        formData.append(prefix + \"y\", \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n  return {\n    action,\n    method: method.toLowerCase(),\n    encType,\n    formData,\n    body\n  };\n}\n\nconst _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\", \"unstable_viewTransition\"],\n  _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"unstable_viewTransition\", \"children\"],\n  _excluded3 = [\"fetcherKey\", \"navigate\", \"reloadDocument\", \"replace\", \"state\", \"method\", \"action\", \"onSubmit\", \"relative\", \"preventScrollReset\", \"unstable_viewTransition\"];\n// HEY YOU! DON'T TOUCH THIS VARIABLE!\n//\n// It is replaced with the proper version at build time via a babel plugin in\n// the rollup config.\n//\n// Export a global property onto the window for React Router detection by the\n// Core Web Vitals Technology Report.  This way they can configure the `wappalyzer`\n// to detect and properly classify live websites as being built with React Router:\n// https://github.com/HTTPArchive/wappalyzer/blob/main/src/technologies/r.json\nconst REACT_ROUTER_VERSION = \"6\";\ntry {\n  window.__reactRouterVersion = REACT_ROUTER_VERSION;\n} catch (e) {\n  // no-op\n}\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    unstable_dataStrategy: opts == null ? void 0 : opts.unstable_dataStrategy,\n    unstable_patchRoutesOnMiss: opts == null ? void 0 : opts.unstable_patchRoutesOnMiss,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    unstable_dataStrategy: opts == null ? void 0 : opts.unstable_dataStrategy,\n    unstable_patchRoutesOnMiss: opts == null ? void 0 : opts.unstable_patchRoutesOnMiss,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\nfunction parseHydrationData() {\n  var _window;\n  let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = _extends({}, state, {\n      errors: deserializeErrors(state.errors)\n    });\n  }\n  return state;\n}\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new UNSAFE_ErrorResponseImpl(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\nconst ViewTransitionContext = /*#__PURE__*/React.createContext({\n  isTransitioning: false\n});\nif (process.env.NODE_ENV !== \"production\") {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\nconst FetchersContext = /*#__PURE__*/React.createContext(new Map());\nif (process.env.NODE_ENV !== \"production\") {\n  FetchersContext.displayName = \"Fetchers\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\nconst FLUSH_SYNC = \"flushSync\";\nconst flushSyncImpl = ReactDOM[FLUSH_SYNC];\nconst USE_ID = \"useId\";\nconst useIdImpl = React[USE_ID];\nfunction startTransitionSafe(cb) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\nfunction flushSyncSafe(cb) {\n  if (flushSyncImpl) {\n    flushSyncImpl(cb);\n  } else {\n    cb();\n  }\n}\nclass Deferred {\n  constructor() {\n    this.status = \"pending\";\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = value => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = reason => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState();\n  let [vtContext, setVtContext] = React.useState({\n    isTransitioning: false\n  });\n  let [renderDfd, setRenderDfd] = React.useState();\n  let [transition, setTransition] = React.useState();\n  let [interruption, setInterruption] = React.useState();\n  let fetcherData = React.useRef(new Map());\n  let {\n    v7_startTransition\n  } = future || {};\n  let optInStartTransition = React.useCallback(cb => {\n    if (v7_startTransition) {\n      startTransitionSafe(cb);\n    } else {\n      cb();\n    }\n  }, [v7_startTransition]);\n  let setState = React.useCallback((newState, _ref2) => {\n    let {\n      deletedFetchers,\n      unstable_flushSync: flushSync,\n      unstable_viewTransitionOpts: viewTransitionOpts\n    } = _ref2;\n    deletedFetchers.forEach(key => fetcherData.current.delete(key));\n    newState.fetchers.forEach((fetcher, key) => {\n      if (fetcher.data !== undefined) {\n        fetcherData.current.set(key, fetcher.data);\n      }\n    });\n    let isViewTransitionUnavailable = router.window == null || router.window.document == null || typeof router.window.document.startViewTransition !== \"function\";\n    // If this isn't a view transition or it's not available in this browser,\n    // just update and be done with it\n    if (!viewTransitionOpts || isViewTransitionUnavailable) {\n      if (flushSync) {\n        flushSyncSafe(() => setStateImpl(newState));\n      } else {\n        optInStartTransition(() => setStateImpl(newState));\n      }\n      return;\n    }\n    // flushSync + startViewTransition\n    if (flushSync) {\n      // Flush through the context to mark DOM elements as transition=ing\n      flushSyncSafe(() => {\n        // Cancel any pending transitions\n        if (transition) {\n          renderDfd && renderDfd.resolve();\n          transition.skipTransition();\n        }\n        setVtContext({\n          isTransitioning: true,\n          flushSync: true,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation\n        });\n      });\n      // Update the DOM\n      let t = router.window.document.startViewTransition(() => {\n        flushSyncSafe(() => setStateImpl(newState));\n      });\n      // Clean up after the animation completes\n      t.finished.finally(() => {\n        flushSyncSafe(() => {\n          setRenderDfd(undefined);\n          setTransition(undefined);\n          setPendingState(undefined);\n          setVtContext({\n            isTransitioning: false\n          });\n        });\n      });\n      flushSyncSafe(() => setTransition(t));\n      return;\n    }\n    // startTransition + startViewTransition\n    if (transition) {\n      // Interrupting an in-progress transition, cancel and let everything flush\n      // out, and then kick off a new transition from the interruption state\n      renderDfd && renderDfd.resolve();\n      transition.skipTransition();\n      setInterruption({\n        state: newState,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    } else {\n      // Completed navigation update with opted-in view transitions, let 'er rip\n      setPendingState(newState);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    }\n  }, [router.window, transition, renderDfd, fetcherData, optInStartTransition]);\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred());\n    }\n  }, [vtContext]);\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({\n          isTransitioning: false\n        });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(() => {\n    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n  React.useEffect(() => {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(fallbackElement == null || !router.future.v7_partialHydration, \"`<RouterProvider fallbackElement>` is deprecated when using \" + \"`v7_partialHydration`, use a `HydrateFallback` component instead\") : void 0;\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n  let routerFuture = React.useMemo(() => ({\n    v7_relativeSplatPath: router.future.v7_relativeSplatPath\n  }), [router.future.v7_relativeSplatPath]);\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UNSAFE_DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(UNSAFE_DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(FetchersContext.Provider, {\n    value: fetcherData.current\n  }, /*#__PURE__*/React.createElement(ViewTransitionContext.Provider, {\n    value: vtContext\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator,\n    future: routerFuture\n  }, state.initialized || router.future.v7_partialHydration ? /*#__PURE__*/React.createElement(MemoizedDataRoutes, {\n    routes: router.routes,\n    future: router.future,\n    state: state\n  }) : fallbackElement))))), null);\n}\n// Memoize to avoid re-renders when updating `ViewTransitionContext`\nconst MemoizedDataRoutes = /*#__PURE__*/React.memo(DataRoutes);\nfunction DataRoutes(_ref3) {\n  let {\n    routes,\n    future,\n    state\n  } = _ref3;\n  return UNSAFE_useRoutesImpl(routes, undefined, state, future);\n}\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nfunction BrowserRouter(_ref4) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref4;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nfunction HashRouter(_ref5) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref5;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter(_ref6) {\n  let {\n    basename,\n    children,\n    future,\n    history\n  } = _ref6;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nconst Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref7, ref) {\n  let {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      unstable_viewTransition\n    } = _ref7,\n    rest = _objectWithoutPropertiesLoose(_ref7, _excluded);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  // Rendered into <a href> for absolute URLs\n  let absoluteHref;\n  let isExternal = false;\n  if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n    // Render the absolute href server- and client-side\n    absoluteHref = to;\n    // Only check for external origins client-side\n    if (isBrowser) {\n      try {\n        let currentUrl = new URL(window.location.href);\n        let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n        let path = stripBasename(targetUrl.pathname, basename);\n        if (targetUrl.origin === currentUrl.origin && path != null) {\n          // Strip the protocol/origin/basename for same-origin absolute URLs\n          to = path + targetUrl.search + targetUrl.hash;\n        } else {\n          isExternal = true;\n        }\n      } catch (e) {\n        // We can't do external URL detection without a valid URL\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"<Link to=\\\"\" + to + \"\\\"> contains an invalid URL which will probably break \" + \"when clicked - please update to a valid URL path.\") : void 0;\n      }\n    }\n  }\n  // Rendered into <a href> for relative URLs\n  let href = useHref(to, {\n    relative\n  });\n  let internalOnClick = useLinkClickHandler(to, {\n    replace,\n    state,\n    target,\n    preventScrollReset,\n    relative,\n    unstable_viewTransition\n  });\n  function handleClick(event) {\n    if (onClick) onClick(event);\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: absoluteHref || href,\n      onClick: isExternal || reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nconst NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref8, ref) {\n  let {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      unstable_viewTransition,\n      children\n    } = _ref8,\n    rest = _objectWithoutPropertiesLoose(_ref8, _excluded2);\n  let path = useResolvedPath(to, {\n    relative: rest.relative\n  });\n  let location = useLocation();\n  let routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  let {\n    navigator,\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let isTransitioning = routerState != null &&\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  useViewTransitionState(path) && unstable_viewTransition === true;\n  let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n  let locationPathname = location.pathname;\n  let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n    toPathname = toPathname.toLowerCase();\n  }\n  if (nextLocationPathname && basename) {\n    nextLocationPathname = stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n  }\n  // If the `to` has a trailing slash, look at that exact spot.  Otherwise,\n  // we're looking for a slash _after_ what's in `to`.  For example:\n  //\n  // <NavLink to=\"/users\"> and <NavLink to=\"/users/\">\n  // both want to look for a / at index 6 to match URL `/users/matt`\n  const endSlashPosition = toPathname !== \"/\" && toPathname.endsWith(\"/\") ? toPathname.length - 1 : toPathname.length;\n  let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(endSlashPosition) === \"/\";\n  let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n  let renderProps = {\n    isActive,\n    isPending,\n    isTransitioning\n  };\n  let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  let className;\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp(renderProps);\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null, isTransitioning ? \"transitioning\" : null].filter(Boolean).join(\" \");\n  }\n  let style = typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to,\n    unstable_viewTransition: unstable_viewTransition\n  }), typeof children === \"function\" ? children(renderProps) : children);\n});\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nconst Form = /*#__PURE__*/React.forwardRef((_ref9, forwardedRef) => {\n  let {\n      fetcherKey,\n      navigate,\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      relative,\n      preventScrollReset,\n      unstable_viewTransition\n    } = _ref9,\n    props = _objectWithoutPropertiesLoose(_ref9, _excluded3);\n  let submit = useSubmit();\n  let formAction = useFormAction(action, {\n    relative\n  });\n  let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  let submitHandler = event => {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    let submitter = event.nativeEvent.submitter;\n    let submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n    submit(submitter || event.currentTarget, {\n      fetcherKey,\n      method: submitMethod,\n      navigate,\n      replace,\n      state,\n      relative,\n      preventScrollReset,\n      unstable_viewTransition\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nfunction ScrollRestoration(_ref10) {\n  let {\n    getKey,\n    storageKey\n  } = _ref10;\n  useScrollRestoration({\n    getKey,\n    storageKey\n  });\n  return null;\n}\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\nvar DataRouterHook;\n(function (DataRouterHook) {\n  DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n  DataRouterHook[\"UseSubmit\"] = \"useSubmit\";\n  DataRouterHook[\"UseSubmitFetcher\"] = \"useSubmitFetcher\";\n  DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterHook[\"useViewTransitionState\"] = \"useViewTransitionState\";\n})(DataRouterHook || (DataRouterHook = {}));\nvar DataRouterStateHook;\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n  DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\n// Internal hooks\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(UNSAFE_DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\n// External hooks\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nfunction useLinkClickHandler(to, _temp) {\n  let {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    unstable_viewTransition\n  } = _temp === void 0 ? {} : _temp;\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, {\n    relative\n  });\n  return React.useCallback(event => {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault();\n      // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n      let replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace,\n        state,\n        preventScrollReset,\n        relative,\n        unstable_viewTransition\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative, unstable_viewTransition]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params.\") : void 0;\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n  let location = useLocation();\n  let searchParams = React.useMemo(() =>\n  // Only merge in the defaults if we haven't yet called setSearchParams.\n  // Once we call that we want those to take precedence, otherwise you can't\n  // remove a param with setSearchParams({}) if it has an initial value\n  getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [location.search]);\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback((nextInit, navigateOptions) => {\n    const newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    hasSetSearchParamsRef.current = true;\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n  }\n}\nlet fetcherId = 0;\nlet getUniqueFetcherId = () => \"__\" + String(++fetcherId) + \"__\";\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nfunction useSubmit() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let currentRouteId = UNSAFE_useRouteId();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    validateClientSideSubmission();\n    let {\n      action,\n      method,\n      encType,\n      formData,\n      body\n    } = getFormSubmissionInfo(target, basename);\n    if (options.navigate === false) {\n      let key = options.fetcherKey || getUniqueFetcherId();\n      router.fetch(key, currentRouteId, options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || method,\n        formEncType: options.encType || encType,\n        unstable_flushSync: options.unstable_flushSync\n      });\n    } else {\n      router.navigate(options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || method,\n        formEncType: options.encType || encType,\n        replace: options.replace,\n        state: options.state,\n        fromRouteId: currentRouteId,\n        unstable_flushSync: options.unstable_flushSync,\n        unstable_viewTransition: options.unstable_viewTransition\n      });\n    }\n  }, [router, basename, currentRouteId]);\n}\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nfunction useFormAction(action, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFormAction must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = _extends({}, useResolvedPath(action ? action : \".\", {\n    relative\n  }));\n  // If no action was specified, browsers will persist current search params\n  // when determining the path, so match that behavior\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n    // When grabbing search params from the URL, remove any included ?index param\n    // since it might not apply to our contextual route.  We add it back based\n    // on match.route.index below\n    let params = new URLSearchParams(path.search);\n    if (params.has(\"index\") && params.get(\"index\") === \"\") {\n      params.delete(\"index\");\n      path.search = params.toString() ? \"?\" + params.toString() : \"\";\n    }\n  }\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nfunction useFetcher(_temp3) {\n  var _route$matches;\n  let {\n    key\n  } = _temp3 === void 0 ? {} : _temp3;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let state = useDataRouterState(DataRouterStateHook.UseFetcher);\n  let fetcherData = React.useContext(FetchersContext);\n  let route = React.useContext(UNSAFE_RouteContext);\n  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !fetcherData ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a FetchersContext\") : UNSAFE_invariant(false) : void 0;\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  // Fetcher key handling\n  // OK to call conditionally to feature detect `useId`\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let defaultKey = useIdImpl ? useIdImpl() : \"\";\n  let [fetcherKey, setFetcherKey] = React.useState(key || defaultKey);\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  } else if (!fetcherKey) {\n    // We will only fall through here when `useId` is not available\n    setFetcherKey(getUniqueFetcherId());\n  }\n  // Registration/cleanup\n  React.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => {\n      // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n      // will not delete immediately but instead queue up a delete after the\n      // fetcher returns to an `idle` state\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  // Fetcher additions\n  let load = React.useCallback((href, opts) => {\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, routeId, href, opts);\n  }, [fetcherKey, routeId, router]);\n  let submitImpl = useSubmit();\n  let submit = React.useCallback((target, opts) => {\n    submitImpl(target, _extends({}, opts, {\n      navigate: false,\n      fetcherKey\n    }));\n  }, [fetcherKey, submitImpl]);\n  let FetcherForm = React.useMemo(() => {\n    let FetcherForm = /*#__PURE__*/React.forwardRef((props, ref) => {\n      return /*#__PURE__*/React.createElement(Form, _extends({}, props, {\n        navigate: false,\n        fetcherKey: fetcherKey,\n        ref: ref\n      }));\n    });\n    if (process.env.NODE_ENV !== \"production\") {\n      FetcherForm.displayName = \"fetcher.Form\";\n    }\n    return FetcherForm;\n  }, [fetcherKey]);\n  // Exposed FetcherWithComponents\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React.useMemo(() => _extends({\n    Form: FetcherForm,\n    submit,\n    load\n  }, fetcher, {\n    data\n  }), [FetcherForm, submit, load, fetcher, data]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nfunction useFetchers() {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return Array.from(state.fetchers.entries()).map(_ref11 => {\n    let [key, fetcher] = _ref11;\n    return _extends({}, fetcher, {\n      key\n    });\n  });\n}\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration(_temp4) {\n  let {\n    getKey,\n    storageKey\n  } = _temp4 === void 0 ? {} : _temp4;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let {\n    restoreScrollPosition,\n    preventScrollReset\n  } = useDataRouterState(DataRouterStateHook.UseScrollRestoration);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n  // Save positions on pagehide\n  usePageHide(React.useCallback(() => {\n    if (navigation.state === \"idle\") {\n      let key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n    try {\n      sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    } catch (error) {\n      process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (\" + error + \").\") : void 0;\n    }\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches]));\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename = getKey && basename !== \"/\" ? (location, matches) => getKey( // Strip the basename to match useLocation()\n      _extends({}, location, {\n        pathname: stripBasename(location.pathname, basename) || location.pathname\n      }), matches) : getKey;\n      let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKeyWithoutBasename);\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(decodeURIComponent(location.hash.slice(1)));\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction useBeforeUnload(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt(_ref12) {\n  let {\n    when,\n    message\n  } = _ref12;\n  let blocker = useBlocker(when);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(to, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n  let vtContext = React.useContext(ViewTransitionContext);\n  !(vtContext != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"`unstable_useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" + \"Did you accidentally import `RouterProvider` from `react-router`?\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename\n  } = useDataRouterContext(DataRouterHook.useViewTransitionState);\n  let path = useResolvedPath(to, {\n    relative: opts.relative\n  });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n  let currentPath = stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;\n  let nextPath = stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname;\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" unstable_viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" unstable_viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return matchPath(path.pathname, nextPath) != null || matchPath(path.pathname, currentPath) != null;\n}\n//#endregion\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, RouterProvider, ScrollRestoration, FetchersContext as UNSAFE_FetchersContext, ViewTransitionContext as UNSAFE_ViewTransitionContext, useScrollRestoration as UNSAFE_useScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, usePrompt as unstable_usePrompt, useViewTransitionState as unstable_useViewTransitionState, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit };\n//# sourceMappingURL=index.js.map\n","/**\n * React Router v6.25.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_invariant, joinPaths, matchPath, UNSAFE_decodePath, UNSAFE_getResolveToMatches, UNSAFE_warning, resolveTo, parsePath, matchRoutes, Action, UNSAFE_convertRouteMatchToUiMatch, stripBasename, IDLE_BLOCKER, isRouteErrorResponse, createMemoryHistory, AbortedDeferredError, createRouter } from '@remix-run/router';\nexport { AbortedDeferredError, Action as NavigationType, createPath, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, resolvePath } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nconst DataRouterContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterContext.displayName = \"DataRouter\";\n}\nconst DataRouterStateContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\nconst AwaitContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  AwaitContext.displayName = \"Await\";\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level `<Router>` API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\n\nconst NavigationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\nconst LocationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\nconst RouteContext = /*#__PURE__*/React.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n}\nconst RouteErrorContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nfunction useHref(to, _temp) {\n  let {\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to, {\n    relative\n  });\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\n\n/**\n * Returns true if this component is a descendant of a `<Router>`.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nfunction useInRouterContext() {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nfunction useNavigationType() {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * `<NavLink>`.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    pathname\n  } = useLocation();\n  return React.useMemo(() => matchPath(pattern, UNSAFE_decodePath(pathname)), [pathname, pattern]);\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\nconst navigateEffectWarning = \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\";\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(cb) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by `<Link>`s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nfunction useNavigate() {\n  let {\n    isDataRoute\n  } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\nfunction useNavigateUnstable() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let {\n    basename,\n    future,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath));\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our history listener yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === \"path\");\n\n    // If we're operating within a basename, prepend it to the pathname prior\n    // to handing off to history (but only if we're not in a data router,\n    // otherwise it'll prepend the basename inside of the router).\n    // If this is a root navigation, then we navigate to the raw basename\n    // which allows the basename to have full control over the presence of a\n    // trailing slash on root links\n    if (dataRouterContext == null && basename !== \"/\") {\n      path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n    }\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);\n  }, [basename, navigator, routePathnamesJson, locationPathname, dataRouterContext]);\n  return navigate;\n}\nconst OutletContext = /*#__PURE__*/React.createContext(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nfunction useOutletContext() {\n  return React.useContext(OutletContext);\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by `<Outlet>` to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nfunction useOutlet(context) {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return /*#__PURE__*/React.createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nfunction useParams() {\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nfunction useResolvedPath(to, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    future\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath));\n  return React.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === \"path\"), [to, routePathnamesJson, locationPathname, relative]);\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an `<Outlet>` to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nfunction useRoutes(routes, locationArg) {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nfunction useRoutesImpl(routes, locationArg, dataRouterState, future) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches: parentMatches\n  } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n  let locationFromContext = useLocation();\n  let location;\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : UNSAFE_invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = pathname;\n  if (parentPathnameBase !== \"/\") {\n    // Determine the remaining pathname by removing the # of URL segments the\n    // parentPathnameBase has, instead of removing based on character count.\n    // This is because we can't guarantee that incoming/outgoing encodings/\n    // decodings will match exactly.\n    // We decode paths before matching on a per-segment basis with\n    // decodeURIComponent(), but we re-encode pathnames via `new URL()` so they\n    // match what `window.location.pathname` would reflect.  Those don't 100%\n    // align when it comes to encoded URI characters such as % and &.\n    //\n    // So we may end up with:\n    //   pathname:           \"/descendant/a%25b/match\"\n    //   parentPathnameBase: \"/descendant/a%b\"\n    //\n    // And the direct substring removal approach won't work :/\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\n  }\n  let matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(matches == null || matches[matches.length - 1].route.element !== undefined || matches[matches.length - 1].route.Component !== undefined || matches[matches.length - 1].route.lazy !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \" + \"does not have an element or Component. This means it will render an <Outlet /> with a \" + \"null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n  let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase])\n  })), parentMatches, dataRouterState, future);\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return /*#__PURE__*/React.createElement(LocationContext.Provider, {\n      value: {\n        location: _extends({\n          pathname: \"/\",\n          search: \"\",\n          hash: \"\",\n          state: null,\n          key: \"default\"\n        }, location),\n        navigationType: Action.Pop\n      }\n    }, renderedMatches);\n  }\n  return renderedMatches;\n}\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? error.status + \" \" + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = {\n    padding: \"0.5rem\",\n    backgroundColor: lightgrey\n  };\n  let codeStyles = {\n    padding: \"2px 4px\",\n    backgroundColor: lightgrey\n  };\n  let devInfo = null;\n  if (process.env.NODE_ENV !== \"production\") {\n    console.error(\"Error handled by React Router default ErrorBoundary:\", error);\n    devInfo = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", null, \"\\uD83D\\uDCBF Hey developer \\uD83D\\uDC4B\"), /*#__PURE__*/React.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"ErrorBoundary\"), \" or\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"errorElement\"), \" prop on your route.\"));\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", null, \"Unexpected Application Error!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, message), stack ? /*#__PURE__*/React.createElement(\"pre\", {\n    style: preStyles\n  }, stack) : null, devInfo);\n}\nconst defaultErrorElement = /*#__PURE__*/React.createElement(DefaultErrorComponent, null);\nclass RenderErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error: error\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error !== undefined ? props.error : state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"React Router caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    return this.state.error !== undefined ? /*#__PURE__*/React.createElement(RouteContext.Provider, {\n      value: this.props.routeContext\n    }, /*#__PURE__*/React.createElement(RouteErrorContext.Provider, {\n      value: this.state.error,\n      children: this.props.component\n    })) : this.props.children;\n  }\n}\nfunction RenderedRoute(_ref) {\n  let {\n    routeContext,\n    match,\n    children\n  } = _ref;\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n  return /*#__PURE__*/React.createElement(RouteContext.Provider, {\n    value: routeContext\n  }, children);\n}\nfunction _renderMatches(matches, parentMatches, dataRouterState, future) {\n  var _dataRouterState2;\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n  if (dataRouterState === void 0) {\n    dataRouterState = null;\n  }\n  if (future === void 0) {\n    future = null;\n  }\n  if (matches == null) {\n    var _dataRouterState;\n    if ((_dataRouterState = dataRouterState) != null && _dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = (_dataRouterState2 = dataRouterState) == null ? void 0 : _dataRouterState2.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(m => m.route.id && (errors == null ? void 0 : errors[m.route.id]) !== undefined);\n    !(errorIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"Could not find a matching route for errors on route IDs: \" + Object.keys(errors).join(\",\")) : UNSAFE_invariant(false) : void 0;\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n  }\n\n  // If we're in a partial hydration mode, detect if we need to render down to\n  // a given HydrateFallback while we load the rest of the hydration data\n  let renderFallback = false;\n  let fallbackIndex = -1;\n  if (dataRouterState && future && future.v7_partialHydration) {\n    for (let i = 0; i < renderedMatches.length; i++) {\n      let match = renderedMatches[i];\n      // Track the deepest fallback up until the first route without data\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\n        fallbackIndex = i;\n      }\n      if (match.route.id) {\n        let {\n          loaderData,\n          errors\n        } = dataRouterState;\n        let needsToRunLoader = match.route.loader && loaderData[match.route.id] === undefined && (!errors || errors[match.route.id] === undefined);\n        if (match.route.lazy || needsToRunLoader) {\n          // We found the first route that's not ready to render (waiting on\n          // lazy, or has a loader that hasn't run yet).  Flag that we need to\n          // render a fallback and render up until the appropriate fallback\n          renderFallback = true;\n          if (fallbackIndex >= 0) {\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n          } else {\n            renderedMatches = [renderedMatches[0]];\n          }\n          break;\n        }\n      }\n    }\n  }\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    // Only data routers handle errors/fallbacks\n    let error;\n    let shouldRenderHydrateFallback = false;\n    let errorElement = null;\n    let hydrateFallbackElement = null;\n    if (dataRouterState) {\n      error = errors && match.route.id ? errors[match.route.id] : undefined;\n      errorElement = match.route.errorElement || defaultErrorElement;\n      if (renderFallback) {\n        if (fallbackIndex < 0 && index === 0) {\n          warningOnce(\"route-fallback\", false, \"No `HydrateFallback` element provided to render during initial hydration\");\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = null;\n        } else if (fallbackIndex === index) {\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n        }\n      }\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children;\n      if (error) {\n        children = errorElement;\n      } else if (shouldRenderHydrateFallback) {\n        children = hydrateFallbackElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = /*#__PURE__*/React.createElement(match.route.Component, null);\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return /*#__PURE__*/React.createElement(RenderedRoute, {\n        match: match,\n        routeContext: {\n          outlet,\n          matches,\n          isDataRoute: dataRouterState != null\n        },\n        children: children\n      });\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /*#__PURE__*/React.createElement(RenderErrorBoundary, {\n      location: dataRouterState.location,\n      revalidation: dataRouterState.revalidation,\n      component: errorElement,\n      error: error,\n      children: getChildren(),\n      routeContext: {\n        outlet: null,\n        matches,\n        isDataRoute: true\n      }\n    }) : getChildren();\n  }, null);\n}\nvar DataRouterHook = /*#__PURE__*/function (DataRouterHook) {\n  DataRouterHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterHook[\"UseNavigateStable\"] = \"useNavigate\";\n  return DataRouterHook;\n}(DataRouterHook || {});\nvar DataRouterStateHook = /*#__PURE__*/function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterStateHook[\"UseLoaderData\"] = \"useLoaderData\";\n  DataRouterStateHook[\"UseActionData\"] = \"useActionData\";\n  DataRouterStateHook[\"UseRouteError\"] = \"useRouteError\";\n  DataRouterStateHook[\"UseNavigation\"] = \"useNavigation\";\n  DataRouterStateHook[\"UseRouteLoaderData\"] = \"useRouteLoaderData\";\n  DataRouterStateHook[\"UseMatches\"] = \"useMatches\";\n  DataRouterStateHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterStateHook[\"UseNavigateStable\"] = \"useNavigate\";\n  DataRouterStateHook[\"UseRouteId\"] = \"useRouteId\";\n  return DataRouterStateHook;\n}(DataRouterStateHook || {});\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\nfunction useRouteContext(hookName) {\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  !thisRoute.route.id ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, hookName + \" can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nfunction useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nfunction useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return React.useMemo(() => ({\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation\n  }), [dataRouterContext.router.revalidate, state.revalidation]);\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nfunction useMatches() {\n  let {\n    matches,\n    loaderData\n  } = useDataRouterState(DataRouterStateHook.UseMatches);\n  return React.useMemo(() => matches.map(m => UNSAFE_convertRouteMatchToUiMatch(m, loaderData)), [matches, loaderData]);\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nfunction useLoaderData() {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\"You cannot `useLoaderData` in an errorElement (routeId: \" + routeId + \")\");\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nfunction useActionData() {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  return state.actionData ? state.actionData[routeId] : undefined;\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nfunction useRouteError() {\n  var _state$errors;\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error !== undefined) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor `<Await />` value\n */\nfunction useAsyncValue() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._data;\n}\n\n/**\n * Returns the error from the nearest ancestor `<Await />` value\n */\nfunction useAsyncError() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._error;\n}\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nfunction useBlocker(shouldBlock) {\n  let {\n    router,\n    basename\n  } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback(arg => {\n    if (typeof shouldBlock !== \"function\") {\n      return !!shouldBlock;\n    }\n    if (basename === \"/\") {\n      return shouldBlock(arg);\n    }\n\n    // If they provided us a function and we've got an active basename, strip\n    // it from the locations we expose to the user to match the behavior of\n    // useLocation\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = arg;\n    return shouldBlock({\n      currentLocation: _extends({}, currentLocation, {\n        pathname: stripBasename(currentLocation.pathname, basename) || currentLocation.pathname\n      }),\n      nextLocation: _extends({}, nextLocation, {\n        pathname: stripBasename(nextLocation.pathname, basename) || nextLocation.pathname\n      }),\n      historyAction\n    });\n  }, [basename, shouldBlock]);\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our router subscriber yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      router.navigate(to);\n    } else {\n      router.navigate(to, _extends({\n        fromRouteId: id\n      }, options));\n    }\n  }, [router, id]);\n  return navigate;\n}\nconst alreadyWarned = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, message) : void 0;\n  }\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  let [state, setStateImpl] = React.useState(router.state);\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    if (v7_startTransition && startTransitionImpl) {\n      startTransitionImpl(() => setStateImpl(newState));\n    } else {\n      setStateImpl(newState);\n    }\n  }, [setStateImpl, v7_startTransition]);\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  React.useEffect(() => {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(fallbackElement == null || !router.future.v7_partialHydration, \"`<RouterProvider fallbackElement>` is deprecated when using \" + \"`v7_partialHydration`, use a `HydrateFallback` component instead\") : void 0;\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator,\n    future: {\n      v7_relativeSplatPath: router.future.v7_relativeSplatPath\n    }\n  }, state.initialized || router.future.v7_partialHydration ? /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: router.routes,\n    future: router.future,\n    state: state\n  }) : fallbackElement))), null);\n}\nfunction DataRoutes(_ref2) {\n  let {\n    routes,\n    future,\n    state\n  } = _ref2;\n  return useRoutesImpl(routes, undefined, state, future);\n}\n/**\n * A `<Router>` that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nfunction MemoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    initialEntries,\n    initialIndex,\n    future\n  } = _ref3;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nfunction Navigate(_ref4) {\n  let {\n    to,\n    replace,\n    state,\n    relative\n  } = _ref4;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    future,\n    static: isStatic\n  } = React.useContext(NavigationContext);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(!isStatic, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(to, UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath), locationPathname, relative === \"path\");\n  let jsonPath = JSON.stringify(path);\n  React.useEffect(() => navigate(JSON.parse(jsonPath), {\n    replace,\n    state,\n    relative\n  }), [navigate, jsonPath, relative, replace, state]);\n  return null;\n}\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nfunction Route(_props) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : UNSAFE_invariant(false) ;\n}\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a `<Router>` directly. Instead, you'll render a\n * router that is more specific to your environment such as a `<BrowserRouter>`\n * in web browsers or a `<StaticRouter>` for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nfunction Router(_ref5) {\n  let {\n    basename: basenameProp = \"/\",\n    children = null,\n    location: locationProp,\n    navigationType = Action.Pop,\n    navigator,\n    static: staticProp = false,\n    future\n  } = _ref5;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : UNSAFE_invariant(false) : void 0;\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(() => ({\n    basename,\n    navigator,\n    static: staticProp,\n    future: _extends({\n      v7_relativeSplatPath: false\n    }, future)\n  }), [basename, future, navigator, staticProp]);\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n    if (trailingPathname == null) {\n      return null;\n    }\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key\n      },\n      navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(locationContext != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n  if (locationContext == null) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/React.createElement(LocationContext.Provider, {\n    children: children,\n    value: locationContext\n  }));\n}\n/**\n * A container for a nested tree of `<Route>` elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nfunction Routes(_ref6) {\n  let {\n    children,\n    location\n  } = _ref6;\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nfunction Await(_ref7) {\n  let {\n    children,\n    errorElement,\n    resolve\n  } = _ref7;\n  return /*#__PURE__*/React.createElement(AwaitErrorBoundary, {\n    resolve: resolve,\n    errorElement: errorElement\n  }, /*#__PURE__*/React.createElement(ResolveAwait, null, children));\n}\nvar AwaitRenderStatus = /*#__PURE__*/function (AwaitRenderStatus) {\n  AwaitRenderStatus[AwaitRenderStatus[\"pending\"] = 0] = \"pending\";\n  AwaitRenderStatus[AwaitRenderStatus[\"success\"] = 1] = \"success\";\n  AwaitRenderStatus[AwaitRenderStatus[\"error\"] = 2] = \"error\";\n  return AwaitRenderStatus;\n}(AwaitRenderStatus || {});\nconst neverSettledPromise = new Promise(() => {});\nclass AwaitErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"<Await> caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    let {\n      children,\n      errorElement,\n      resolve\n    } = this.props;\n    let promise = null;\n    let status = AwaitRenderStatus.pending;\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_data\", {\n        get: () => resolve\n      });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_error\", {\n        get: () => renderError\n      });\n    } else if (resolve._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status = \"_error\" in promise ? AwaitRenderStatus.error : \"_data\" in promise ? AwaitRenderStatus.success : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", {\n        get: () => true\n      });\n      promise = resolve.then(data => Object.defineProperty(resolve, \"_data\", {\n        get: () => data\n      }), error => Object.defineProperty(resolve, \"_error\", {\n        get: () => error\n      }));\n    }\n    if (status === AwaitRenderStatus.error && promise._error instanceof AbortedDeferredError) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: errorElement\n      });\n    }\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: children\n      });\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on `<Await>`\n */\nfunction ResolveAwait(_ref8) {\n  let {\n    children\n  } = _ref8;\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, toRender);\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nfunction createRoutesFromChildren(children, parentPath) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  let routes = [];\n  React.Children.forEach(children, (element, index) => {\n    if (! /*#__PURE__*/React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n    let treePath = [...parentPath, index];\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children, treePath));\n      return;\n    }\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : UNSAFE_invariant(false) : void 0;\n    !(!element.props.index || !element.props.children) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"An index route cannot have child routes.\") : UNSAFE_invariant(false) : void 0;\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary: element.props.ErrorBoundary != null || element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy\n    };\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children, treePath);\n    }\n    routes.push(route);\n  });\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n\nfunction mapRouteProperties(route) {\n  let updates = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null\n  };\n  if (route.Component) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.element) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `Component` and `element` on your route - \" + \"`Component` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      element: /*#__PURE__*/React.createElement(route.Component),\n      Component: undefined\n    });\n  }\n  if (route.HydrateFallback) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.hydrateFallbackElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `HydrateFallback` and `hydrateFallbackElement` on your route - \" + \"`HydrateFallback` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      hydrateFallbackElement: /*#__PURE__*/React.createElement(route.HydrateFallback),\n      HydrateFallback: undefined\n    });\n  }\n  if (route.ErrorBoundary) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.errorElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" + \"`ErrorBoundary` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      errorElement: /*#__PURE__*/React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined\n    });\n  }\n  return updates;\n}\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createMemoryHistory({\n      initialEntries: opts == null ? void 0 : opts.initialEntries,\n      initialIndex: opts == null ? void 0 : opts.initialIndex\n    }),\n    hydrationData: opts == null ? void 0 : opts.hydrationData,\n    routes,\n    mapRouteProperties,\n    unstable_dataStrategy: opts == null ? void 0 : opts.unstable_dataStrategy,\n    unstable_patchRoutesOnMiss: opts == null ? void 0 : opts.unstable_patchRoutesOnMiss\n  }).initialize();\n}\n\nexport { Await, MemoryRouter, Navigate, Outlet, Route, Router, RouterProvider, Routes, DataRouterContext as UNSAFE_DataRouterContext, DataRouterStateContext as UNSAFE_DataRouterStateContext, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, mapRouteProperties as UNSAFE_mapRouteProperties, useRouteId as UNSAFE_useRouteId, useRoutesImpl as UNSAFE_useRoutesImpl, createMemoryRouter, createRoutesFromChildren, createRoutesFromChildren as createRoutesFromElements, renderMatches, useActionData, useAsyncError, useAsyncValue, useBlocker, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes };\n//# sourceMappingURL=index.js.map\n","var randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/i;","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  //\n  // Note to future-self: No, you can't remove the `toLowerCase()` call.\n  // REF: https://github.com/uuidjs/uuid/pull/677#issuecomment-1757351351\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n  var uuid = unsafeStringify(arr, offset);\n  // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n  return uuid;\n}\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    offset = offset || 0;\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n    return buf;\n  }\n  return unsafeStringify(rnds);\n}\nexport default v4;","import REGEX from './regex.js';\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\nexport default validate;","module.exports = window[\"React\"];","module.exports = window[\"ReactDOM\"];","module.exports = window[\"wp\"][\"domReady\"];","module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import domReady from '@wordpress/dom-ready';\nimport { createRoot } from '@wordpress/element';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\n\n/**\n * Attention bien penser à changer le basename\n * par celui de la page des grimpeurs\n */\n\ndomReady( () => {\n    const root = createRoot(\n        document.getElementById( 'rootHelloAsso' )\n    );\n    root.render(\n        <BrowserRouter basename=\"/page-d-exemple\">\n            <App tab=\"home\" />\n        </BrowserRouter>\n    );\n} );"],"names":["React","useEffect","useState","Routes","Route","useLocation","Home","Licence","Form","Errors","Cotisation","Header","useFetch","useDatas","App","location","adherent","the_ajax_script","infosUser","nouveau","setNouveau","datas","user","liste","metadata","handelDatas","selection","setSelection","famille","activites","descriptif","name","checked","label","labelname","labelchecked","show","options","options_ffme","nav","setNav","to","window","scrollTo","top","behavior","firstName","createElement","Fragment","exact","path","element","v4","uuidv4","FormMembre","FormFamille","props","famille_adulte","famille_enfant","famille_supp","arrayMembre","setArrayMembre","handelSuppMembre","id","new_array","filter","item","handelAddMembre","event","myref","console","log","className","legend","map","i","monid","key","isMobile","onClick","paysListe","etat","setEtat","titre","setTitre","handelSubmit","preventDefault","suppMembre","onSubmit","type","defaultValue","required","value","defaultChecked","land","NavLink","isActive","Total","totalAmount","cotisation","tarif_cotisation","type_licence","tarif_licence","mur","soutien","class","plein_tarif","useCotisations","setListe","ROOT_URL_HELLOASSO","rootUrl","data","FormData","append","nonce","handelCotisation","dateBirthday","fetch","method","body","headers","rootNonce","then","res","json","catch","error","payer","setPayer","setDatas","initialAmount","itemName","backUrl","errorUrl","returnUrl","containsDonation","cotisation_famille","licence","licence_famille","infos_for_total","dateOfBirth","undefined","doTotal","Number","total","tarif","useEmail","isexist","setIsexist","handelUserEmail","userEmail","email","handelFetch","useHello","token","setToken","setData","url","setUrl","href","JSON","stringify","response","redirectUrl","keys","startPaye","URLSearchParams","toString","access_token","useNavigate","navigate","club","trouve","find","handelClickValidation","handelClickCotisation","target","el","Object","entries","reduce","newObject","obj","handelClickMurSoutien","handelClickPrecedente","index","handelPaye","onChange","alert","champs","fromEntries","lastName","billing_phone","gda_genre","gda_lieu","address","city","zipCode","gda_personne","gda_tel_personne","Link","logoutNonce","selectlicence","setSelectlicence","handelCheckbox","newselection","handelNiveau","handelFamille","forEach","push","handelOptions","new_options","handelResetOptions","options_for_datas","length","includes","licences","ffme","ffr","domReady","createRoot","BrowserRouter","root","document","getElementById","render","basename","tab"],"sourceRoot":""}